version: 2.1

executors:
  smallnode:
    docker:
      - image: cimg/node:14.21.3
    resource_class: small
  mediumnode:
    docker:
      - image: cimg/node:14.21.3
    resource_class: medium
  node:
    docker:
      - image: cimg/node:14.21.3
    resource_class: medium+
  node-mongo:
    docker:
      - image: cimg/node:14.21.3
      - image: mongo:7.0.16
    resource_class: medium+

jobs:
  do-nothing:
    description: Used for filtering the 'build' workflow
    executor:
      name: smallnode
    steps:
      - run:
          command: echo "hello world"    

  fetch-node-modules:
    description: 'This job fetches and caches the node modules'
    executor:
      name: mediumnode
    steps:
      - checkout
      # try to restore the modules from the cache
      - run:
          command: echo "hello world"
  test:
    description: 'This job runs the integration and unit tests, and saves the meteor cache'
    executor:
      name: node-mongo
    steps:
      - checkout
      # try to restore the modules from the cache
      - run:
          command: echo "hello world"

  chromatic:
    description: 'This job runs the chromatic tests'
    executor:
      name: node
    steps:
      - checkout
      # try to restore the modules from the cache
      - run:
          command: echo "hello world"

  cypress-run:
    executor:
      name: node
    steps:
      - checkout
      # try to restore the modules from the cache
      - run:
          command: echo "hello world"

  main-skip-deploy:
    description: 'This job will cancel the workflow if either: the most recent merge commit is from a snyk or dependabot PR or there are no changes in the app/ directory'
    executor:
      name: smallnode
    steps:
      - checkout
      # try to restore the modules from the cache
      - run:
          command: echo "hello world"

  update-changelog:
    description: 'Automatically updates CHANGELOG.md'
    executor:
      name: smallnode
    steps:
      - checkout
      # try to restore the modules from the cache
      - run:
          command: echo "hello world"

  send-sentry-sourcemaps:
    description: 'This job sends the source maps to sentry'
    executor:
      name: smallnode
    steps:
      - checkout
      # try to restore the modules from the cache
      - run:
          command: echo "hello world"

  docker-build-push:
    description: build docker image and push to ECR
    executor:
      name: node
    steps:
      - checkout
      # try to restore the modules from the cache
      - run:
          command: echo "hello world"

  deploy-ecs:
    description: Update ECS service with new image and redeploy
    executor:
      name: smallnode
    docker:
      - image: cimg/ruby:2.7.5
    steps:
      - checkout
      # try to restore the modules from the cache
      - run:
          command: echo "hello world"

  delete-pr-stack:
    executor:
      name: smallnode
    docker:
      - image: cimg/ruby:2.7.5
    steps:
      - checkout
      # try to restore the modules from the cache
      - run:
          command: echo "hello world"

  deploy-notify-slack:
    executor:
      name: smallnode
    steps:
      # try to restore the modules from the cache
      - run:
          command: echo "hello world"

  simple-slack-notify:
    executor:
      name: smallnode
    steps:
      - checkout
      # try to restore the modules from the cache
      - run:
          command: echo "hello world"
  
  block_workflow:
    executor:
      name: smallnode
    steps:
      - checkout
      # try to restore the modules from the cache
      - run:
          command: echo "hello world"

  confirm-success:
    # to be used as a GitHub PR check to confirm the pipeline completed successfully
    executor:
      name: smallnode
    steps:
      - run: echo All good!

workflows:
  # to validate snyk, dependabot, and release PRs
  build-simple:
    when:
      or:
        - matches:
            pattern: "^snyk-.*$"
            value: << pipeline.git.branch >>
        - matches:
            pattern: "^dependabot/.*$"
            value: << pipeline.git.branch >>
        - matches:
            pattern: "^release/.*$"
            value: << pipeline.git.branch >>
        - matches:
            pattern: "^.*/nodeploy/.*$"
            value: << pipeline.git.branch >>
        - matches:
            pattern: "^.*/noprdeploy/.*$"
            value: << pipeline.git.branch >>
        # - equal: [/snyk-.*/, << pipeline.git.branch >>]
        # - equal: [/dependabot\/.*/, << pipeline.git.branch >>]
        # - equal: [/release\/.*/, << pipeline.git.branch >>]
        # - equal: [/.*\/nodeploy\/.*/, << pipeline.git.branch >>]
        # - equal: [/.*\/noprdeploy\/.*/, << pipeline.git.branch >>]
    jobs:
      - fetch-node-modules
      
      - test:
          name: test
          requires:
            - fetch-node-modules

      - chromatic:
          requires:
            - fetch-node-modules

      - confirm-success:
          requires:
            - test
            - chromatic

  # to validate all other PRs
  build:
    when:
      not:
        or:
          - equal: [develop, << pipeline.git.branch >>]
          - equal: [master, << pipeline.git.branch >>]
          - equal: [main, << pipeline.git.branch >>]
          - matches:
            pattern: "^snyk-.*$"
            value: << pipeline.git.branch >>
          - matches:
            pattern: "^dependabot/.*$"
            value: << pipeline.git.branch >>
          - matches:
            pattern: "^release/.*$"
            value: << pipeline.git.branch >>
          - matches:
            pattern: "^.*/nodeploy/.*$"
            value: << pipeline.git.branch >>
          - matches:
            pattern: "^.*/noprdeploy/.*$"
            value: << pipeline.git.branch >>
          # - equal: [/snyk-.*/, << pipeline.git.branch >>]
          # - equal: [/dependabot\/.*/, << pipeline.git.branch >>]
          # - equal: [/release\/.*/, << pipeline.git.branch >>]
          # - equal: [/.*\/nodeploy\/.*/, << pipeline.git.branch >>]
          # - equal: [/.*\/noprdeploy\/.*/, << pipeline.git.branch >>]
    jobs:
      - do-nothing

      - fetch-node-modules:
          requires:
            - do-nothing

      - pause_workflow:
          name: Wait for pr-app deploy approval
          type: approval
          requires:
            - do-nothing

      - pause_workflow:
          name: Approve chromatic tests
          type: approval
          requires:
            - do-nothing

      - test:
          name: test
          requires:
            - fetch-node-modules

      - chromatic:
          requires:
            - test
            - Approve chromatic tests

      - pause_workflow:
          name: Wait for pr-app delete approval
          requires:
            - Wait for pr-app deploy approval
          type: approval

      - docker-build-push:
          name: pr-docker-build-push
          requires:
            - fetch-node-modules
            - Wait for pr-app deploy approval

      - deploy-ecs:
          name: deploy-pr-app-service
          requires:
            - pr-docker-build-push

      - cypress-run:
          name: cypress test PR
          requires:
            - deploy-pr-app-service

      - delete-pr-stack:
          requires:
            - cypress test PR
            - Wait for pr-app delete approval

      - confirm-success:
          requires:
            - delete-pr-stack

  build-deploy-main:
    when: pipeline.git.branch == "main"
    jobs:
      - main-skip-deploy

      - block_workflow:
          requires:
            - main-skip-deploy

      - fetch-node-modules:
          requires:
            - block_workflow

      - test:
          name: test
          requires:
            - fetch-node-modules

      - chromatic:
          requires:
            - fetch-node-modules

      - update-changelog:
          requires:
            - fetch-node-modules

      - docker-build-push:
          requires:
            - update-changelog # to get the updated package.json

      - send-sentry-sourcemaps:
          requires:
            - docker-build-push

      - deploy-notify-slack:
          name: Notify staging deployment
          requires:
            - test
            - chromatic
            - update-changelog # to get the updated package.json
            - docker-build-push

      - deploy-ecs:
          name: deploy-staging-app-service
          requires:
            - Notify staging deployment

      - deploy-ecs:
          name: deploy-staging-cron-service
          requires:
            - Notify staging deployment

      - simple-slack-notify:
          name: Notify staging deploy complete
          requires:
            - deploy-staging-app-service
            - deploy-staging-cron-service

      - cypress-run:
          name: cypress test staging
          requires:
            - deploy-staging-app-service

      # deploy to au-demo
      - deploy-ecs:
          name: deploy-demo-app-service
          requires:
            - cypress test staging

      - deploy-ecs:
          name: deploy-demo-cron-service
          requires:
            - cypress test staging

      - simple-slack-notify:
          name: Notify demo deploy complete
          requires:
            - deploy-demo-app-service
            - deploy-demo-cron-service

      # deploy to cbf
      - deploy-ecs:
          name: deploy-cbf-app-service
          requires:
            - Notify demo deploy complete

      - deploy-ecs:
          name: deploy-cbf-cron-service
          requires:
            - Notify demo deploy complete

      # deploy to rsc
      - deploy-ecs:
          name: deploy-rsc-app-service
          requires:
            - Notify demo deploy complete

      - deploy-ecs:
          name: deploy-rsc-cron-service
          requires:
            - Notify demo deploy complete

      # deploy to uk-prod
      - deploy-ecs:
          name: deploy-uk-app-service
          requires:
            - Notify demo deploy complete

      - deploy-ecs:
          name: deploy-uk-cron-service
          requires:
            - Notify demo deploy complete

      # deploy to au-prod
      - deploy-ecs:
          name: deploy-au-app-service
          requires:
            - Notify demo deploy complete

      - deploy-ecs:
          name: deploy-au-cron-service
          requires:
            - Notify demo deploy complete

      - simple-slack-notify:
          name: Notify prod deploy complete
          requires:
            - deploy-au-app-service
            - deploy-au-cron-service
            - deploy-uk-app-service
            - deploy-uk-cron-service
            - deploy-cbf-app-service
            - deploy-cbf-cron-service
            - deploy-rsc-app-service
            - deploy-rsc-cron-service

      - deploy-notify-slack:
          name: Notify production deployment
          requires:
            - deploy-au-app-service
            - deploy-au-cron-service
            - deploy-uk-app-service
            - deploy-uk-cron-service
            - deploy-cbf-app-service
            - deploy-cbf-cron-service
            - deploy-rsc-app-service
            - deploy-rsc-cron-service
