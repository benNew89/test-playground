version: 2.1
orbs:
  aws-cli: circleci/aws-cli@2.0
  slack: circleci/slack@4.2.0
  queue: wiz-sec/queue@3.0.8
  aws-s3: circleci/aws-s3@3.0
  wiztools: wiz-sec/wiztools@0.5.12
  wiz-slack:
      commands:
        notify_deployment:
          description: Send Slack notification (assumes gitops deployment ran before)
          parameters:
            slack_channel:
              type: string
              default: test-slack
            tag_user:
              type: string
              default: ""
            env:
              type: string
              default: test-eu3
            outcome_path:
              type: string
              default: /tmp/outcomes
            notify_on:
              default: always
              description: |
                In what event should this message send? Options: ["fail", "success", "always", "approval", "approval-needed"]
              enum:
                - fail
                - success
                - always
                - approval
                - approval-needed
              type: enum
            kind:
              default: GitOps
              type: enum
              enum:
                - GitOps
                - Terraform
                - All
              description: |
                Type of deployment (used for header) ["GitOps", "Terraform-DC", "Terraform-AWS"]
            enable_slack_mention:
              default: true
              description: Determines whether to mention authors on Slack
              type: boolean
            folder:
              default: irrelevant
              type: string
              description: |
                Terraform folder that is relevant to this deployment (other then modules)
            artifacts_buttons_json:
              default: "[]"
              type: string
              description: |
                json list of objects with "button_text" and "artifact_path" fields
          steps:
            - run:
                command: |
                    echo 'fail' > /tmp/SLACK_JOB_STATUS
                name: Slack - Detecting Job Status (FAIL)
                when: on_fail
            - run:
                command: |
                    echo 'success' > /tmp/SLACK_JOB_STATUS
                name: Slack - Detecting Job Status (PASS)
                when: on_success
            - run:
                command: command -v pip3 || curl https://bootstrap.pypa.io/get-pip.py | python3
                when: always
            - run:
                command: python3 -c "import sys; __import__('boto3') or sys.exit(1)" || pip3 install boto3
                when: always
            - run:
                name: Send slack notification
                when: always
                environment:
                  ARTIFACTS_JSON: << parameters.artifacts_buttons_json >>
                command: |
                  cd $(git rev-parse --show-toplevel)/.circleci/scripts
                  python3 slack_notifier.py \
                    --send_when=<< parameters.notify_on >> \
                    --enable_slack_mention=<< parameters.enable_slack_mention >> \
                    --status=$(cat /tmp/SLACK_JOB_STATUS) \
                    --kind=<< parameters.kind >> \
                    --outcome_path=<< parameters.outcome_path >> \
                    --env_name=<< parameters.env >> \
                    --ops_commit=$CIRCLE_SHA1 \
                    --job_link=https://app.circleci.com/pipelines/workflows/$CIRCLE_WORKFLOW_ID \
                    --slack_channels=<< parameters.slack_channel >> \
                    --tag_user=<< parameters.tag_user >> \
                    --folder=<< parameters.folder >>
        simple_notification:
          description: Send simple Slack notification
          parameters:
            slack_channel:
              type: string
              default: test-slack
            tag_user:
              type: string
              default: ""
            env:
              type: string
              default: test-eu3
            outcome_path:
              type: string
              default: /tmp/outcomes
            notify_on:
              default: always
              description: |
                In what event should this message send? Options: ["fail", "success", "always", "approval", "approval-needed"]
              enum:
                - fail
                - success
                - always
                - approval
                - approval-needed
              type: enum
            kind:
              default: GitOps
              type: enum
              enum:
                - GitOps
                - Terraform
                - All
              description: |
                Type of deployment (used for header) ["GitOps", "Terraform-DC", "Terraform-AWS"]
            enable_slack_mention:
              default: true
              description: Determines whether to mention authors on Slack
              type: boolean
            folder:
              default: irrelevant
              type: string
              description: |
                Terraform folder that is relevant to this deployment (other then modules)
            artifacts_buttons_json:
              default: "[]"
              type: string
              description: |
                json list of objects with "button_text" and "artifact_path" fields
            simple_notification:
              default: true
              type: boolean
            title:
              default: ""
              type: string
            content:
              default: ""
              type: string
            content_env:
              default: ""
              type: string
              description: |
                Pass content through environment instead of parameter
            slack_username:
              default: ""
              type: string
            ops_path:
              default: "~/project/"
              type: string
            circle_link:
              default: "${CIRCLE_BUILD_URL}"
              type: string
          steps:
            - run:
                command: |
                    echo 'fail' > /tmp/SLACK_JOB_STATUS
                name: Slack - Detecting Job Status (FAIL)
                when: on_fail
            - run:
                command: |
                    echo 'success' > /tmp/SLACK_JOB_STATUS
                name: Slack - Detecting Job Status (PASS)
                when: on_success
            - run:
                command: command -v pip3 || curl https://bootstrap.pypa.io/get-pip.py | python3
                when: always
            - run:
                command: python3 -c "import sys; __import__('boto3') or sys.exit(1)" || pip3 install boto3
                when: always
            - run:
                name: Send slack notification
                when: always
                environment:
                  ARTIFACTS_JSON: << parameters.artifacts_buttons_json >>
                command: |
                  cd << parameters.ops_path >>.circleci/scripts
                  if [[ -n "<< parameters.content_env >>" ]]; then
                    export CONTENT="$<< parameters.content_env >>"
                  else
                    export CONTENT="<< parameters.content >>"
                  fi
                  export LINK=""
                  if [ ! -z "<< parameters.circle_link >>" ]; then
                    export LINK="Link: << parameters.circle_link >>"
                  fi
                  python3 slack_notifier.py \
                    --send_when=<< parameters.notify_on >> \
                    --enable_slack_mention=<< parameters.enable_slack_mention >> \
                    --status=$(cat /tmp/SLACK_JOB_STATUS) \
                    --kind=<< parameters.kind >> \
                    --outcome_path=<< parameters.outcome_path >> \
                    --env_name=<< parameters.env >> \
                    --ops_commit=$CIRCLE_SHA1 \
                    --job_link=https://app.circleci.com/pipelines/workflows/$CIRCLE_WORKFLOW_ID \
                    --slack_channels=<< parameters.slack_channel >> \
                    --folder=<< parameters.folder >> \
                    --simple_notification=<< parameters.simple_notification >> \
                    --tag_user=<< parameters.tag_user >> \
                    --title="<< parameters.title >>" \
                    --content="$CONTENT \n $LINK" \
                    --slack_username=<< parameters.slack_username >>

parameters:
  run_trigger_workflow:
    default: true
    description: Determines whether to setup continue-config params according to mapping
    type: boolean
  wiz_ci_tag:
    # controlled via env_config/executors.yaml
    default: 'stable'
    type: string
  ops_ci_tag:
    # controlled via env_config/executors.yaml
    default: '90f1178-main-amd64'
    type: string
  ops_python_only_tag:
    # controlled via env_config/executors.yaml
    default: '3c953cb-main-amd64'
    type: string
  sync_to_locked: &bool_false
    default: false
    type: boolean
  wizcli_version:
    default: ''
    type: string
  terraform-aws-dc:
    type: boolean
    default: false
  terraform-aws-env:
    type: boolean
    default: false
  terraform-aws-account:
    type: boolean
    default: false
  terraform-oci-env:
    type: boolean
    default: false
  terraform-monitor-dc:
    type: boolean
    default: false
  terraform-monitor-env:
    type: boolean
    default: false
  terraform-da-env:
    type: boolean
    default: false
  terraform-dt-env:
    type: boolean
    default: false
  terraform-wiz-os-env:
    type: boolean
    default: false
  terraform-universal:
    type: boolean
    default: false
  terraform-fe-e2e:
    type: boolean
    default: false
  terraform-ops-gerrit:
    type: boolean
    default: false
  terraform-global-dc:
    type: boolean
    default: false
  terraform-global-env:
    type: boolean
    default: false
  deployment:
    type: boolean
    default: false
  deployment_ops:
    type: boolean
    default: false
  deployment_public:
    type: boolean
    default: false
  infra:
    type: boolean
    default: false
  common:
    type: boolean
    default: false
  backend:
    type: boolean
    default: false
  frontend:
    type: boolean
    default: false
  global:
    type: boolean
    default: false
  wizcli-version:
    type: boolean
    default: false
  netscanner-serverless-version:
    default: false
    type: boolean
  netscanner-screenshot-version:
    default: false
    type: boolean
  secrets-validator-serverless-version:
    default: false
    type: boolean
  forensicspackage-auth-serverless-version:
    default: false
    type: boolean
  digital-trust-serverless-version:
    default: false
    type: boolean
  auth-pre-token-version:
    default: false
    type: boolean
  auth-msg-version:
    default: false
    type: boolean
  auth-pre-signup-version:
    default: false
    type: boolean
  webhook-gateway-version:
    default: false
    type: boolean
  dc:
    type: string
    default: test-eu1
  ops-docker:
    type: boolean
    default: false
  wiz-ci-node-docker:
    type: boolean
    default: false
  wiz-cypress-docker:
    type: boolean
    default: false
  golang-python-docker:
    type: boolean
    default: false
  apollo-push:
    type: boolean
    default: false
  janusgraph-docker:
    type: boolean
    default: false
  postgresql-docker:
    type: boolean
    default: false
  gremlin-console:
    type: boolean
    default: false
  postgresql-ut-docker:
    type: boolean
    default: false
  wiz-research-docker:
    type: boolean
    default: false
  external-dns-docker:
    type: boolean
    default: false
  fedramp-custom-ami:
    type: boolean
    default: false
  purge-sqs:
    type: boolean
    default: false
  reset-cluster-states:
    type: boolean
    default: false
  deploy-helper:
    type: boolean
    default: false
  rm-flux:
    type: boolean
    default: false
  service_list:
    type: string
    default: ""
  action:
    type: string
    default: "sync"
  karpenter-rollout:
    type: boolean
    default: false
  wiz_cypress_version:
    default: ''
    type: string
  circleci:
    type: boolean
    default: false
  terraform-fedramp:
    type: boolean
    default: false
  terraform-fedstg1:
    type: boolean
    default: false
  terraform-fedtest:
    type: boolean
    default: false
  terraform-fedstg2:
    type: boolean
    default: false
  cosign-policy-webhook:
    type: boolean
    default: false
  cosign:
    type: boolean
    default: false
  create_bootstrap_rde:
    type: boolean
    default: false
  test_bootstrap_rde:
    type: boolean
    default: false
  destroy_bootstrap_rde:
    type: boolean
    default: false
  linkerd-proxy-init:
    type: boolean
    default: false
  linkerd-grafana:
    type: boolean
    default: false
  kyverno:
    type: boolean
    default: false
  kubectl_image:
    type: boolean
    default: false
  terraform_registry_server:
    type: boolean
    default: false
  fluentd_image:
    type: boolean
    default: false
  dummy-lambda:
    type: boolean
    default: false
  reset_integration_envs:
    type: boolean
    default: false
  integration_env:
    type: string
    default: ""
  skopeo:
    type: boolean
    default: false
  hyperscan_arm64:
    type: boolean
    default: false
  hyperscan_amd64:
    type: boolean
    default: false
  sensor_defs_update:
    default: false
    type: boolean
  sensor_defs_branch:
    default: ""
    type: string
  sensor_defs_paths_override:
    default: ""
    type: string
  sensor-version-publish:
    default: false
    type: boolean
  sensor-internal-version-publish:
    default: false
    type: boolean
  sensor-serverless-version-publish:
    default: false
    type: boolean
  sensor-serverless-demo-version-publish:
    default: false
    type: boolean
  sensor-script-publish:
    default: false
    type: boolean
  linux-sensor-script-version-publish:
    default: false
    type: boolean
  windows-sensor-script-publish:
    default: false
    type: boolean
  windows-sensor-version-publish:
    default: false
    type: boolean
  onprem-agent-version:
    default: false
    type: boolean
  onprem-agent-rootfs-package-version-publish:
    default: false
    type: boolean
  ld-relay-docker:
    default: false
    type: boolean
  helmfile-docker:
    default: false
    type: boolean
  kubernetes-replicator-docker:
    default: false
    type: boolean
  hashcat-docker:
    default: false
    type: boolean
  sensor_ci_infra:
    type: boolean
    default: false
  misc_research_vms:
    type: boolean
    default: false
  misc_share_with_wiz:
    type: boolean
    default: false
  terraform-misc:
    type: boolean
    default: false
  terraform-wiz-monitors:
    type: boolean
    default: false
  terraform-wiz-grafana-alerts:
    type: boolean
    default: false     
  # SLACKBOT PARAMS
  trigger_lock_component_slackbot:
    default: false
    type: boolean
  trigger_full_deployment_slackbot:
    default: false
    type: boolean
  trigger_static_data_deployment_slackbot:
    default: false
    type: boolean
  trigger_static_data_lock_slackbot:
    default: false
    type: boolean
  trigger_cherry_pick_slackbot:
    default: false
    type: boolean
  release_customer_facing_service:
    default: false
    type: boolean
  trigger_wizcli_slackbot:
    default: false
    type: boolean
  hotfix_component_name:
    default: ''
    type: string
  hotfix_component_version:
    default: ''
    type: string
  plan_id:
    default: ''
    type: string
  dynamodb_region:
    default: ''
    type: string
  hotfix_ops_commit_to_master:
    default: false
    type: boolean
  trigger_hotfix_slackbot:
    default: false
    type: boolean
  trigger_lock_slackbot:
    default: false
    type: boolean
  # SCHEDULED_PARAMS
  scheduled_version_locking:
    default: false
    type: boolean
  scheduled_update_stage:
    default: false
    type: boolean
  scheduled_update_static_data:
    default: false
    type: boolean
  skip_approval:
    default: false
    type: boolean
  skip_auth0:
    default: false
    type: boolean
  scheduled_eks_ami_update:
    default: true
    type: boolean
  scheduled_outpost_diagnostics:
    default: false
    type: boolean
  update_eks_ami_test_eu4:
    default: false
    type: boolean
  update_eks_ami_all_test:
    default: false
    type: boolean
  update_eks_ami_default_values:
    default: false
    type: boolean
  update_eks_ami_test_stage:
    default: false
    type: boolean
  update_eks_ami_prod_gov:
    default: false
    type: boolean
  ami_env:
    default: "None"
    type: string
  lock_ami_versions:
    default: false
    type: boolean
  scheduled_build_rde:
    default: false
    type: boolean
  scheduled_orchestrator_env_verify:
    default: false
    type: boolean
  terraform-modules:
    default: false
    type: boolean
  terraform-modules-rde:
    default: false
    type: boolean
  terraform-rde:
    default: false
    type: boolean
  terraform-rde_ami_id:
    default: false
    type: boolean
  terraform-personal-environment:
    default: false
    type: boolean
  new_dc:
    default: false
    type: boolean
  skip_e2e:
    default: false
    type: boolean
  trigger_e2e_test:
    default: false
    type: boolean
  docs_script_changed:
    default: false
    type: boolean
  scheduled_e2e_update:
    default: false
    type: boolean
  scheduled_rds_backup_update:
    default: false
    type: boolean
  scheduled_update_eks_ami_update_branch:
    default: false
    type: boolean
  rotate_amg_api_keys:
    default: false
    type: boolean
  notify_upcoming_integration_env_resets:
    default: false
    type: boolean
  auto_reset_integration_envs:
    default: false
    type: boolean
  setup_selected_dcs:
      default: ""
      description: |
        comma delimited dcs in case you want to trigger only those dcs
        Relevant for triggering using API and through CircleCI webapp
      type: string
  selected_dcs:
    default: ""
    type: string
  int_snowflake:
    default: false
    type: boolean
  circle_set:
    default: ""
    type: string
  monitor_export:
    default: false
    type: boolean
  scan_vm:
    default: false
    type: boolean
  sender:
    default: ""
    type: string
  tenant_id:
    default: ""
    type: string
  connector_id:
    default: ""
    type: string
  vm_id:
    default: ""
    type: string
  datacenter:
    default: ""
    type: string
  environment_name:
    default: ""
    type: string
  envs:
    default: ""
    type: string
  terraform-monitor-areas:
    default: false
    type: boolean
  dd_dashboards_backup:
    default: false
    type: boolean
  force_approval:
    default: false
    type: boolean
  wiz_admission_controller_version:
    default: false
    type: boolean
  wiz_broker_version:
    default: false
    type: boolean
  image_replicator:
    type: boolean
    default: false
  terraform-ops-env:
    type: boolean
    default: false
  terraform-public-env:
    type: boolean
    default: false
  terraform-public-dc:
    type: boolean
    default: false
  terraform-ops-dc:
    type: boolean
    default: false
  nodejs-fips:
    type: boolean
    default: false
  workflows-gen:
    type: boolean
    default: false
  new-dc-tenants:
    type: boolean
    default: false
  create-monitor-tenants:
    type: boolean
    default: false
  trigger_fe_test_e2e:
    type: boolean
    default: false
  trigger_fe_test_stage:
    type: boolean
    default: false

  queues:
    default: "x"
    type: string
  ignore_queues:
    default: "x"
    type: string
  dcs:
    default: "test-eu3"
    type: string
  scheduled_fedlocked:
    default: false
    type: boolean
  username:
    default: ""
    type: string
  dc_name:
    default: ""
    type: string
  env_name:
    default: ""
    type: string
  dc_region:
    default: ""
    type: string
  rc-gen:
    type: boolean
    default: false
  slackbot:
    type: boolean
    default: false
  ld-flags:
    type: boolean
    default: false
  import_ami:
    default: false
    type: boolean
  rds-backup-enable:
    default: false
    type: boolean
  rds-backup-validation:
    default: false
    type: boolean
  rds-backup-pgdump-enable:
    default: false
    type: boolean
  rds_backup_dc_name:
    default: ""
    type: string
  rds_backup_arn_prefix:
    default: ""
    type: string
  rds_backup_accound_id:
    default: ""
    type: string
  rds_backup_env_name:
    default: ""
    type: string
  rds_backup_date_prefix:
    default: ""
    type: string
  rds_backup_db_name:
    default: ""
    type: string
  required_approval:
    default: true
    type: boolean
  export_service_version:
    default: ""
    type: string
  export_service_patch_major:
    default: "enable"
    type: string
  export_service_commitsha:
    default: ""
    type: string
  export_service_acr_wiz_broker:
    default: false
    type: boolean
  export_service_acr_wiz_admission_controller:
    default: false
    type: boolean
  export_service_allow_version_overwrite:
    default: false
    type: boolean
  export_service_acr_wizcli:
    default: false
    type: boolean    
  export_service_acr_onprem_agent:
    default: false
    type: boolean
  db_type:
    default: ""
    type: string
  instance_class:
    default: ""
    type: string
  node_num:
    default: "2"
    type: string
  adx_cluster_name:
    default: ""
    type: string
  db_cluster_name:
    default: ""
    type: string
  db_restart:
    default: false
    type: boolean
  db_version:
    default: ""
    type: string
  update_major:
    default: false
    type: boolean
  major_version_family:
    default: ""
    type: string
  db_patch_delete_snapshots:
    default: false
    type: boolean
  ami_update_uniq_dc:
    type: string
    default: "none"
  ami_update_force_first_approval:
    default: true
    type: boolean
  ami_update_force_approval:
    default: true
    type: boolean
  digital_trust_cdn_changed:
    default: false
    type: boolean
  sync_charts:
    default: false
    type: boolean
  trigger_stage_test:
    default: false
    type: boolean
  auto_charts:
    default: false
    type: boolean
  golang-base-image:
    default: false
    type: boolean
  golang-base-lambda-image:
    default: false
    type: boolean
  deployer:
    default: false
    type: boolean
  terraform-snowflake:
    default: false
    type: boolean
  terraform-cd-engine:
    default: false
    type: boolean
  misc_deploy_keys:
    default: false
    type: boolean
  misc_twingate:
    default: false
    type: boolean
  wolfi-base-image:
    default: false
    type: boolean
  kusto-eventhub-emulator-image:
    default: false
    type: boolean
  rdo-connect-script:
    default: false
    type: boolean
  ubi-go-fips-image:
    default: false
    type: boolean
  forker:
    default: false
    type: boolean
  ecr_cleaner:
    default: false
    type: boolean
  comapre_external_image_digests:
    default: false
    type: boolean
  terraform-env-config:
    default: false
    type: boolean
  cdn_changes_only:
    default: false
    type: boolean
  skip_stage_deployment: *bool_false
  build-go-sdk: *bool_false
  initial_map:
    default: ''
    type: string
  template_params:
    default: ''
    type: string
  trigger:
    default: ''
    type: string
  terraform-drift:
    default: false
    type: boolean
  ami-bakery:
    type: boolean
    default: false
  ami-bakery-wiz-ci:
    type: boolean
    default: false
  ami-bakery-ops:
    type: boolean
    default: false
  ami-bakery-sync-ops-image:
    type: boolean
    default: false
  ami-bakery-fips:
    type: boolean
    default: false
  circleci-env-config:
    type: boolean
    default: false
  terraform-create-workspaces:
    type: boolean
    default: false
  terraform_refresh:
    default: true
    type: boolean
  gitops_deploy_groups:
    default: ALL
    type: string
  skip_terraform:
    default: false
    type: boolean
  publish_outpost_lite_images:
    default: ""
    description: Comma separated outpost lite images to publish
    type: string
  trigger_dynamic_e2e:
    default: ""
    type: string
  disable_block_workflow:
    default: false
    type: boolean
  trigger_monitor_deployment:
    default: false
    type: boolean
  pagerduty_stats:
    default: false
    type: boolean
  pagerduty_stats_teams_ids:
    default: ""
    type: string
  pagerduty_stats_team_name:
    default: ""
    type: string
  test_wiz_cli_download:
    default: false
    type: boolean
  force_lambdas_deployment:
    default: false
    type: boolean

executors:
  wiz-ci: &wiz-ci
    parameters:
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      resource_class:
        type: string
        default: medium
      runner:
        type: string
        default: "dummy_runner"
    docker: &wiz_ci_docker
      - image: << parameters.ecr_url >>/external/wiz-ci:<< pipeline.parameters.wiz_ci_tag >>
        aws_auth:
          aws_access_key_id: $TF_AWS_ACCESS_KEY_ID
          aws_secret_access_key: $TF_AWS_SECRET_ACCESS_KEY
    resource_class: << parameters.resource_class >>

  e2e_runner:
    parameters:
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      runner:
        type: string
        default: temp-with-context
      resource_class:
        type: string
        default: ""
        description: "dummy to keep compatibility with other ops executors"
    docker:
      - image: << parameters.ecr_url >>/external/wiz-ci:<< pipeline.parameters.wiz_ci_tag >>
    resource_class: wiz-sec/<< parameters.runner >>

  ubuntu-arm:
    machine:
      image: ubuntu-2004:2022.07.1
    resource_class: arm.<< parameters.resource_class >>
    parameters:
      ecr_url:
        type: string
        description: dummy to keep compatibility with other docker executors
        default: "dummy"
      resource_class:
        type: string
        default: medium

  wiz-ci-large:
    <<: *wiz-ci
    resource_class: large

  wiz-ci-xlarge:
    <<: *wiz-ci
    resource_class: xlarge

  ops: &ops-executor
    parameters:
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      resource_class:
        type: string
        default: large
      runner:
        type: string
        default: ""
        description: "dummy to keep compatibility with other ops_runner executors"
    docker:
      - image: << parameters.ecr_url >>/external/ops:<< pipeline.parameters.ops_ci_tag >>
        aws_auth:
          aws_access_key_id: $TF_AWS_ACCESS_KEY_ID
          aws_secret_access_key: $TF_AWS_SECRET_ACCESS_KEY
    resource_class: << parameters.resource_class >>

  ops-xlarge:
    <<: *ops-executor
    resource_class: xlarge

  ops-2xlarge:
    <<: *ops-executor
    resource_class: 2xlarge

  ops_runner:
    parameters:
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      runner:
        type: string
        default: temp-with-context
      resource_class:
        type: string
        default: ""
        description: "dummy to keep compatibility with other ops executors"
    docker:
      - image: << parameters.ecr_url >>/external/ops:<< pipeline.parameters.ops_ci_tag >>
    resource_class: wiz-sec/<< parameters.runner >>
  wiz-ci-runner:
    parameters:
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      runner:
        type: string
        default: temp-with-context
    docker:
      - image: << parameters.ecr_url >>/external/wiz-ci:<< pipeline.parameters.wiz_ci_tag >>
    resource_class: wiz-sec/<< parameters.runner >>
  ops-python-only-runner:
    parameters:
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      runner:
        type: string
        default: temp-with-context
      version:
        type: string
        default: << pipeline.parameters.ops_python_only_tag >>
    docker:
      - image: << parameters.ecr_url >>/external/ops-python-only:<< parameters.version >>
    resource_class: wiz-sec/<< parameters.runner >>
  docker-publisher:
    docker:
      - image: circleci/buildpack-deps:stretch
  helmfile:
    docker:
      - image: chatwork/helmfile:0.138.1
  awscli:
    docker:
      - image: cimg/aws:2023.09 # TODO: manage version in executors
  golang-only-1-23:
    docker:
      - image: cimg/go:1.23
  golang-only:
    docker:
      - image: cimg/go:1.15.13
  python-only:
    parameters:
      resource_class:
        type: string
        default: small
      version:
        type: string
        default: "3.12"
      ecr_url:
        type: string
        description: dummy to keep compatibility with docker executors
        default: "dummy"
    docker:
      - image: cimg/python:<< parameters.version >>
    resource_class: << parameters.resource_class >>
  python-only-runner:
    parameters:
      runner:
        type: string
        default: temp-with-context
      version:
        type: string
        default: "3.12"
    docker:
      - image: cimg/python:<< parameters.version >>
    resource_class: wiz-sec/<< parameters.runner >>
  cypress-web:
    parameters:
      runner:
        type: string
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
    docker:
      - image: << parameters.ecr_url >>/external/wiz-cypress:ae870ef-main-multiarch
    resource_class: wiz-sec/xlarge-<< parameters.runner >>
  basic:
    parameters:
      resource_class:
        type: string
        default: small
      version:
        type: string
        default: "current"
      ecr_url:
        type: string
        description: dummy to keep compatibility with docker executors
        default: "dummy"
    docker:
      - image: cimg/base:<< parameters.version >>
    resource_class: << parameters.resource_class >>
    
  replicator:
    parameters:
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-1.amazonaws.com/beyond
      resource_class:
        type: string
        default: large
    docker:
      - image: << parameters.ecr_url >>/image-replicator:57e38b4
        aws_auth: 
          aws_access_key_id: $TF_AWS_ACCESS_KEY_ID
          aws_secret_access_key: $TF_AWS_SECRET_ACCESS_KEY
    resource_class: << parameters.resource_class >>
  ubuntu-amd:
    machine:
      image: ubuntu-2004:2022.07.1
    resource_class: << parameters.resource_class >>
    parameters:
      ecr_url:
        type: string
        description: dummy to keep compatibility with other docker executors
        default: "dummy"
      resource_class:
        type: string
        default: medium

commands:
  add_single_ssh_key:
    parameters:
      fingerprint:
        type: string
      host:
        type: string
    steps:
      - add_ssh_keys:
          fingerprints:
            - "<< parameters.fingerprint >>"
      - run:
          name: Setup ssh config << parameters.host >>
          environment:
            FINGERPRINT: "<< parameters.fingerprint >>"
            HOST_PARAM: "<< parameters.host >>"
          command: |
            echo "$SCRIPTS_BASE64_SETUP_SSH_CONFIG" | base64 -d | bash

  clone_circleci_wiztools:
    steps:
      - add_single_ssh_key:
          fingerprint: a8:60:f6:ce:31:f8:a3:0f:0f:79:13:f3:29:eb:29:5d
          host: circleci-wiztools
      - run: &clone_circleci_wiztools
          name: Clone circleci-wiztools to /tmp/circleci-wiztools
          command: |
            [[ -d /tmp/circleci-wiztools ]] || git clone git@circleci-wiztools:wiz-sec/circleci-wiztools.git /tmp/circleci-wiztools

  wizcli_gpg_download:
    parameters:
      script_location:
        type: string
        default: ".circleci/scripts/"
    steps:
      - run:
          name: Download WizCLI and verify GPG
          command: source << parameters.script_location >>download_wiz_cli.sh ; download_and_verify_wiz_cli

  wizcli_run:
    parameters:
      wizcli_params:
        type: string
      ignore_failures:
        type: boolean
        default: true
      runner:
        type: boolean
        default: false
      cloud:
        type: string
        default: aws
    steps:
      - wizcli_gpg_download
      - run:
          name: Prepare wizcli cache keys
          command: |
            date +%F > date
            echo $WIZCLI_ID > wizcli_id
      - when:
          condition:
            not: << parameters.runner >>
          steps:
            - restore_cache:
                keys:
                  - wizcli-v3-{{ checksum "wizcli_id" }}-{{ checksum "date" }}
      - when:
          condition: << parameters.runner >>
          steps:
            - restore_cache:
                keys:
                  - wizcli-v3-{{ checksum "wizcli_id" }}-{{ checksum "date" }}
      - when:
          condition:
            equal: ["aws-gov", << parameters.cloud >>]
          steps:
            - run:
                name: Export WIZCLI_ID and WIZCLI_SECRET
                command: |
                  echo "export WIZCLI_ID=$WIZ_CLIENT_ID_GOV" >> $BASH_ENV
                  echo "export WIZCLI_SECRET=$WIZ_CLIENT_SECRET_GOV" >> $BASH_ENV
                  echo "export WIZ_ENV=$WIZ_ENV_GOV" >> $BASH_ENV
                  echo "WIZ_ENV_GOV: $WIZ_ENV_GOV"
      - run:
          name: print wizcli params
          command: |
              echo cloud: << parameters.cloud >>
              echo WIZ_ENV_GOV: $WIZ_ENV_GOV
      - run:
          name: "** Run WizCLI **"
          no_output_timeout: 121m
          command: |
            echo "working with WIZ_ENV: $WIZ_ENV"
            set +eo pipefail
            export WIZ_DIR=/tmp/.wiz
            mkdir -p $WIZ_DIR
            /wizcli/wizcli << parameters.wizcli_params >>
            exitCode=$?
            if [ $exitCode -eq 3 ]; then
              /wizcli/wizcli auth --id ${WIZCLI_ID} --secret ${WIZCLI_SECRET}
              /wizcli/wizcli << parameters.wizcli_params >>
              exitCode=$?
            fi
            echo "WizCLI exit code - $exitCode"
            if << parameters.ignore_failures >>; then
              echo "[WARN] IGNORING FAILURES"
              exit 0
            fi
            exit $exitCode
      - when:
          condition:
            not: << parameters.runner >>
          steps:
            - save_cache:
                key: wizcli-v3-{{ checksum "wizcli_id" }}-{{ checksum "date" }}
                paths:
                  - /tmp/.wiz/auth.json
      - when:
          condition: << parameters.runner >>
          steps:
            - save_cache:
                key: wizcli-v3-{{ checksum "wizcli_id" }}-{{ checksum "date" }}
                paths:
                  - /tmp/.wiz/auth.json

  scan_iac_with_wizcli:
    parameters:
      runner:
        type: boolean
        default: false
    steps:
      - wizcli_run:
          runner: << parameters.runner >>
          wizcli_params: "iac scan --path /tmp/plan.tfplanjson"


  install_ssh_keys:
    description: Install SSH key for private repos
    steps:
        - wiztools/ssh_install:
            access_group: private_forks

  go_and_git_private_repo_config:
    description: update GOPRIVATE and git renames for some internal repos
    steps:
      - run:
          name: update GOPRIVATE and git renames for some internal repos
          command: |
            go env -w GOPRIVATE=github.com/wiz-sec/*
            go env -w GO111MODULE="on"

  clone_wiz_repo_index:
    description: clone wiz repo only for index queries like --is-ancestor
    parameters:
      target_dir:
        type: string
        default: wiz
    steps:
      - add_single_ssh_key:
          fingerprint: '47:7c:b1:ee:8c:86:a5:24:21:93:7c:6e:af:7e:0c:da'
          host: wiz
      - run:
          name: clone wiz repo
          command: |
            git clone  --no-checkout --filter=blob:none git@wiz:wiz-sec/wiz.git << parameters.target_dir >>

  checkout-wiz-repo:
    description: clone and checkout wiz repo at current version of the given component
    parameters:
      component:
        type: string
        default: ''
      repo:
        type: string
        default: wiz
      go_env:
        type: boolean
        default: true
      target_dir:
        type: string
        default: wiz
      branch:
        description: Optional, take the lastest commit of given branch
        type: string
        default: ''
      shallow_clone:
        type: boolean
        default: false
    steps:
      - add_ssh_keys:
          fingerprints:
            - 'cc:f2:0c:13:9b:e1:ec:d8:a1:4c:a8:ff:f7:b8:c7:7b'
            - '5e:56:2b:f0:07:01:c7:1f:fa:00:3b:b8:a6:14:5b:16'
            - '6e:1e:8e:77:86:66:df:0c:12:11:cc:b0:72:5c:99:69'
            - 'b5:f1:c5:f3:e0:56:53:cc:cd:18:1c:15:9e:59:30:ff'
      - add_single_ssh_key:
          fingerprint: '47:7c:b1:ee:8c:86:a5:24:21:93:7c:6e:af:7e:0c:da'
          host: wiz
      - run:
          name: clone wiz repo
          no_output_timeout: 20m
          environment:
            SHALLOW_CLONE: << parameters.shallow_clone >>
          command: |
            echo "export WIZ_DIR=$(realpath << parameters.target_dir >>)" >> $BASH_ENV
            << parameters.go_env >> && go env -w GOPRIVATE=github.com/wiz-sec/*
            WIZ_BRANCH="<<parameters.branch >>" REPO=<< parameters.repo >> TARGET_DIR=<< parameters.target_dir >> COMPONENT=<< parameters.component >> bash .circleci/scripts/checkout_wiz_repo.sh
  set-aws-creds-file:
    description: set aws creds into file
    parameters:
      cloud:
        type: string
        default: aws
      script:
        type: string
        default: set-aws-creds-file.sh
      cluster_type:
        type: string
        default: ""
      workspace:
        type: string
        default: ""
    steps:
      - run:
          name: set AWS creds to file
          environment:
            CLOUD: << parameters.cloud >>
          command: |
            cd $(git rev-parse --show-toplevel)
            bash .circleci/scripts/<< parameters.script >>

  set-aws-creds-tf:
    description: set aws creds into file (using IAM role)
    parameters:
      cluster_type:
        type: string
        default: "wiz"
      account_id:
        type: string
        default: ""
      branch:
        type: string
        default: ""
    steps:
      - run:
          name: set AWS creds to file (TF - IAM Role)
          command: |
            export TF_VAR_branch=${TF_VAR_branch:-<< parameters.branch >>}
            export TF_VAR_account_id="${TF_VAR_account_id:-<< parameters.account_id >>}"
            mkdir -p ~/.aws
            cd ~/project/terraform/modules/creds
            terraform init
            terraform apply -auto-approve
          environment:
            TF_VAR_cluster_type: << parameters.cluster_type >>

  set-aws-creds-role:
    description: set aws creds into file (using IAM role)
    parameters:
      role_arn:
        type: string
      profile_name:
        type: string
      init:
        type: boolean
        default: false
    steps:
      - run:
          name: create default aws profile
          command: |
            if [ << parameters.init >> ]; then
              mkdir -p ~/.aws
              echo "[default]" > ~/.aws/credentials
              echo "web_identity_token_file=$AWS_WEB_IDENTITY_TOKEN_FILE" >> ~/.aws/credentials
              echo "role_arn=$AWS_ROLE_ARN" >> ~/.aws/credentials
            fi
      - run:
          name: set AWS creds to file
          command: |
            echo "[<< parameters.profile_name >>]" >> ~/.aws/credentials
            echo "role_arn = << parameters.role_arn >>" >> ~/.aws/credentials
            echo "source_profile = default" >> ~/.aws/credentials

  set-gcp-creds-file:
    description: set gcp creds into file
    steps:
      - run:
          name: set GCP creds to file
          command: |
            mkdir -p /tmp/.gcp
            if [ ! -z "$GOOGLE_CLOUD_DEFAULT_KEYFILE_JSON" ]; then
                echo "GOOGLE_CLOUD_DEFAULT_KEYFILE_JSON is set."
                printenv GOOGLE_CLOUD_DEFAULT_KEYFILE_JSON | jq . > /tmp/.gcp/gcp_default_creds.json
            else
                echo "GOOGLE_CLOUD_DEFAULT_KEYFILE_JSON isn't set."
            fi

  deploy-to-cdn:
    description: deploy to cdn (cloudfront)
    parameters:
      cluster_name:
        type: string
      version_folder_path:
        type: string
        default: /root/project/deployment/versions
      vite_aws_console_origin:
        type: string
        default: https://console.aws.amazon.com
      wiz_io_customer_bucket:
        type: string
        default: "https://wizio-public.s3.amazonaws.com"
      wiz_io_customer_filepath:
        type: string
        default: "/deployment-v2/aws/wiz-aws-standard-org.json"
      mode:
        type: enum
        description: What mode is it
        default: legacy
        enum:
          - legacy
          - rc
          - global
      bucket_suffix:
        type: string
        default: ""
      env:
        type: string
    steps:
      - run:
          name: Deploy to CDN << parameters.mode >>
          no_output_timeout: 20m
          command: |
            export VITE_AWS_CONSOLE_ORIGIN=<< parameters.vite_aws_console_origin >>
            export VITE_WIZ_PUBLIC_BUCKET_URL=<< parameters.wiz_io_customer_bucket >>
            export VITE_AWS_CONNECTOR_CLOUD_FORMATION_PATH=<< parameters.wiz_io_customer_filepath >>
            export ENV_NAME=<< parameters.env >>
            ~/project/.circleci/deploy_to_cdn_csp.sh web << parameters.cluster_name >>-cdn<< parameters.bucket_suffix >> << parameters.version_folder_path >> << parameters.mode >>

  deploy-digital-trust-to-cdn:
    description: deploy Digital Trust UI to cdn (cloudfront)
    parameters:
      env:
        type: string
      version_folder_path:
        type: string
        default: /root/project/deployment/versions
      vite_digital_trust_api_url:
        type: string
      vite_digital_trust_sentry_dsn:
        type: string
    steps:
      - check_for_rerun_with_ssh
      - run:
          name: Deploy Digital Trust UI to CDN
          command: |
            source .circleci/clear_cdn_env_vars.sh
            export VITE_APP_API_URL=<< parameters.vite_digital_trust_api_url >>
            export VITE_APP_SENTRY_DSN=<< parameters.vite_digital_trust_sentry_dsn >>
            ~/project/.circleci/deploy_to_cdn_digital_trust.sh digital-trust-web wiz-digitaltrust-<< parameters.env >>-cdn << parameters.version_folder_path >>

  ecr_docker_login:
    parameters:
      ecr_prefix:
        type: string
        default: beyond
      region:
        type: string
        default: us-east-2
      aws_ecr_account_url:
        type: string
      aws_access_key:
        type: string
      aws_access_key_secret:
        type: string
    steps:
      - run:
          name: Login to ECR << parameters.aws_ecr_account_url >>
          command: |
            export AWS_PAGER=""
            export AWS_REGION=<< parameters.region >>
            export AWS_ACCESS_KEY_ID=<< parameters.aws_access_key >>
            export AWS_SECRET_ACCESS_KEY=<< parameters.aws_access_key_secret >>
            aws ecr get-login-password --region $AWS_REGION | \
                docker login --username AWS \
                  --password-stdin https://<< parameters.aws_ecr_account_url >>
  push_to_ecr:
    parameters:
      ecr_prefix:
        type: string
        default: beyond
      image_name:
        type: string
      region:
        type: string
        default: us-east-2
      aws_access_key:
        type: string
      aws_access_key_secret:
        type: string
      aws_ecr_account_url:
        type: string
      tag:
        type: string
      is_external:
        type: boolean
        default: false
      push_tag_only:
        type: boolean
        default: false
    steps:
      - run:
          name: push to ECR <<parameters.ecr_prefix>>
          environment:
            PACKAGE_NAME: << parameters.image_name >>
            ECR_PREFIX: << parameters.ecr_prefix >>
            REGISTRY_TYPE: ecr
            BRANCH_NAME: << pipeline.git.branch >>
            IS_EXTERNAL: << parameters.is_external >>
            PUSH_TAG_ONLY: << parameters.push_tag_only >>
          command: |
            set -e
            export COMMIT_SHA=<< parameters.tag >>
            export AWS_PAGER=""
            export AWS_REGION=<< parameters.region >>
            export DEFAULT_AWS_ECR_ACCOUNT_URL=$AWS_ECR_ACCOUNT_URL
            export AWS_ECR_ACCOUNT_URL=<< parameters.aws_ecr_account_url >>
            export AWS_ACCESS_KEY_ID=<< parameters.aws_access_key >>
            export AWS_SECRET_ACCESS_KEY=<< parameters.aws_access_key_secret >>
            export ECR_PREFIX=<< parameters.ecr_prefix >>
            export PUSH_TAG_ONLY="<< parameters.push_tag_only >>"
            if [ "${IS_EXTERNAL}" == 1 ]; then
              export ECR_PREFIX=<< parameters.ecr_prefix >>/external
            fi
            export REMOTE_DOCKER_REGISTRY=$AWS_ECR_ACCOUNT_URL/$ECR_PREFIX
            echo "Logging in to https://$AWS_ECR_ACCOUNT_URL"
            aws ecr get-login-password --region << parameters.region >> | docker login --username AWS --password-stdin https://<< parameters.aws_ecr_account_url >>
            bash .circleci/scripts/docker_push.sh

  push_to_acr:
    parameters:
      registry_url:
        type: string
        default: $WIZIOPUBLIC_URL
      acr_username:
        type: string
        default: $WIZIOPUBLIC_SP_ID
      acr_password:
        type: string
        default: $WIZIOPUBLIC_SP_PASSWORD
      local_image:
        type: string
        description: locally built image
      repository:
        type: string
        description: name of the repository under the registry
      tags:
        type: string
        description: space delimited tags
    steps:
      - run:
          name: docker login
          command: echo "<< parameters.acr_password >>" | docker login "<< parameters.registry_url>>" --username "<< parameters.acr_username >>" --password-stdin
      - run:
          name: push to ACR
          command: |
            for tag in << parameters.tags >>
            do
              target=<< parameters.registry_url>>/<<parameters.repository>>:$tag
              echo "Pushing to $target"
              docker tag  << parameters.local_image >> $target
              docker image push $target
            done

  init_deployer_workspace:
    steps:
      - print_ip_address
      - checkout
      - clone_circleci_wiztools
      - wiztools/set_wiz_cache
      - run:
          name: checksum deployer
          command: |
            export GIT_ROOT=$(git rev-parse --show-toplevel)
            deployer_dir="$( eval echo $GIT_ROOT )/tools/deploy"
            find $deployer_dir -type f -follow -exec shasum -a 256 {} \; | shasum -a 256 > deployer_checksum.txt
            go version >> deployer_checksum.txt
            cat deployer_checksum.txt
      - restore_cache:
          keys:
            - deployer-{{ checksum "deployer_checksum.txt" }}
      - run:
          name: Build Deployer
          command: |
            [ -f /tmp/deployer ] && exit 0
            cd tools/deploy
            go build -o /tmp/deployer .
      - save_cache:
          key: deployer-{{ checksum "deployer_checksum.txt" }}
          paths:
            - /tmp/deployer

  init_checker_workspace:
    parameters:
      cluster_name:
        type: string
        default: test-eu1
      cloud:
        type: string
        default: aws
      cluster_type:
        type: string
      region:
        type: string
      use_cluster_type:
        type: boolean
        default: false
      dry_run:
        type: boolean
        default: false
      profile:
        type: string
        default: default
    steps:
      - print_ip_address
      - checkout
      - set-aws-creds-tf
      - when:
          condition:
            not: << parameters.dry_run >>
          steps:
          - run:
              name: Update Kube Config
              command: |
                eks_cluster_name=<< parameters.cluster_name >>
                if << parameters.use_cluster_type >> ; then
                  eks_cluster_name="<< parameters.cluster_type >>-<< parameters.cluster_name >>"
                fi
                region=<< parameters.region >>
                echo "eks_cluster_name: $eks_cluster_name"
                echo "eks_cluster_region: $region"
                aws eks --profile << parameters.profile >> --region $region update-kubeconfig --name $eks_cluster_name

  run_checker:
    parameters:
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      cloud:
        type: string
        default: aws
      cluster_name:
        type: string
        default: test-eu1
      env_scoped_cluster:
        type: enum
        enum:
          - disabled
          - enabled
          - required
        default: disabled
      cluster_type:
        type: string
        default: wiz
      gitops_engine:
        type: enum
        enum:
          - argocd
        default: argocd
      checker_version:
        type: string
        default: v1
      gitops_skip_if_no_changes:
        type: boolean
        default: false
      slack_channel:
        type: string
        default: test-deployments
      fingerprint_terraform_outputs:
        type: string
        default: '4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04'
      fingerprint_cluster_states:
        type: string
        default: '6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3'
      fingerprint_cluster_states_argocd:
        type: string
        default: 'cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d'
    steps:
      - add_single_ssh_key:
          fingerprint: << parameters.fingerprint_terraform_outputs >>
          host: tfoutputs
      - add_single_ssh_key:
          fingerprint: << parameters.fingerprint_cluster_states >>
          host: cluster_states
      - add_single_ssh_key:
          fingerprint: << parameters.fingerprint_cluster_states_argocd >>
          host: cluster_states_argocd
      - attach_workspace:
          at: /mnt/ramdisk/project/.deployment_outcome/
      - run:
          name: check for rerun with ssh
          no_output_timeout: 121m
          command: bash $(git rev-parse --show-toplevel)/.circleci/scripts/check_ssh.sh
      - when:
          condition: << parameters.gitops_skip_if_no_changes >>
          steps:
            - run:
                name: Check if there are changes
                command: |
                    dirs=(/mnt/ramdisk/project/.deployment_outcome ~/project/.deployment_outcome /tmp/precheck/<< parameters.cluster_name >>/argocd)
                    for dir in "${dirs[@]}"; do
                      if [ -d "$dir" ]; then
                        ls -al $dir
                        if ls "$dir/no-change"* 1> /dev/null 2>&1; then
                          echo "No changes in $dir"
                          circleci-agent step halt && exit 0
                        fi
                      fi
                    done
      - when:
          condition:
              equal: [ "required", << parameters.env_scoped_cluster >> ]
          steps:
            - run:
                name: set env scope cluster states ssh key
                environment:
                  CLUSTER_NAME: << parameters.cluster_name >>
                command: |
                  export GIT_ROOT=$(git rev-parse --show-toplevel)
                  REPO_NAME="$("$GIT_ROOT/.circleci/scripts/ssh_from_secretsmanager.sh")"
                  echo export "CHECKER_ENV_SCOPED_REPO_NAME=$REPO_NAME" >> $BASH_ENV
      - run:
          name: 🩺 Run checker
          command: |
            export GIT_ROOT=$(git rev-parse --show-toplevel)
            cd "$( eval echo $GIT_ROOT )/tools/deploy"
            export OUTCOME_DIR=/mnt/ramdisk/project/.deployment_outcome
            export CLUSTER_NAME="<< parameters.cluster_name >>"
            export CLUSTER_TYPE="<< parameters.cluster_type >>"
            export GITOPS_ENGINE="<< parameters.gitops_engine >>"
            export CHECKER_VERSION="<< parameters.checker_version >>"
            export BRANCH_NAME=${CIRCLE_SHA1:0:8}
            export ARGOCD_CLUSTER_STATES_REPO_HOSTNAME="${CHECKER_ENV_SCOPED_REPO_NAME:-"cluster_states_argocd"}"
            export ARGOCD_CLUSTER_STATES_REPO_NAME="${CHECKER_ENV_SCOPED_REPO_NAME:-"cluster-states-argocd"}"
            export SYNCER_JOB_URL=${CIRCLE_BUILD_URL}
            export CHECK_DEPLOYMENT=true
            bash run_checker.sh

  build_and_cache_go_tool:
    parameters:
      tool_name:
        type: string
      ops_relative_tool_path:
        type: string
    steps:
      - print_ip_address
      - checkout
      - clone_circleci_wiztools
      - run:
          name: checksum << parameters.tool_name >>
          command: |
            export GIT_ROOT=$(git rev-parse --show-toplevel)
            tool_dir="$( eval echo $GIT_ROOT )/<< parameters.ops_relative_tool_path >>"
            find $tool_dir -type f -follow -exec shasum -a 256 {} \; | shasum -a 256 > << parameters.tool_name >>_checksum.txt
            go version >> << parameters.tool_name >>_checksum.txt
            cat << parameters.tool_name >>_checksum.txt
      - restore_cache:
          keys:
            - << parameters.tool_name >>-{{ checksum "<< parameters.tool_name >>_checksum.txt" }}
      - run:
          name: Build << parameters.tool_name >>
          command: |
            export GIT_ROOT=$(git rev-parse --show-toplevel)
            [ -f /tmp/<< parameters.tool_name >> ] && exit 0
            cd "$( eval echo $GIT_ROOT )/<< parameters.ops_relative_tool_path >>"
            go mod tidy
            go build -o /tmp/<< parameters.tool_name >> .
      - save_cache:
          key: << parameters.tool_name >>-{{ checksum "<< parameters.tool_name >>_checksum.txt" }}
          paths:
            - /tmp/<< parameters.tool_name >>

  run_deployer:
    parameters:
      validate_image_replication:
        type: boolean
        default: false
        description: "Whether to validate that all images exist in ECR"
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      cloud:
        type: string
        default: aws
      cluster_name:
        type: string
        default: test-eu1
      cluster_type:
        type: string
        default: wiz
      gitops_engine:
        type: enum
        enum:
          - argocd
        default: argocd
      env_scoped_cluster:
        type: enum
        enum:
          - disabled
          - enabled
          - required
        default: disabled
      gitops_skip_if_no_changes:
        type: boolean
        default: false
      helmfile_log_level:
        type: string
        default: info
      slack_channel:
        type: string
        default: test-deployments
      fingerprint_terraform_outputs:
        type: string
        default: '4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04'
      fingerprint_cluster_states:
        type: string
        default: '6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3'
      fingerprint_cluster_states_argocd:
        type: string
        default: 'cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d'
      push_changes:
        type: boolean
        default: true
      block_rollbacks:
        type: boolean
        default: false
      scratch_disk:
        type: string
        default: "/mnt/ramdisk/project"
      block_rollbacks_notify:
        type: boolean
        description: whether to send a slack notification if the deployment is blocked due to rollback protection
        default: true
      deploy_groups:
        description: "Comma separated list of deploy groups to target"
        type: string
    steps:
      - add_single_ssh_key:
          fingerprint: << parameters.fingerprint_terraform_outputs >>
          host: tfoutputs
      - add_single_ssh_key:
          fingerprint: << parameters.fingerprint_cluster_states >>
          host: cluster_states
      - add_single_ssh_key:
          fingerprint: << parameters.fingerprint_cluster_states_argocd >>
          host: cluster_states_argocd
      - run_steps_with_mutex:
          avoid_concurrent_runs: << parameters.push_changes >>
          mutex_id: "gitops-<< parameters.cluster_type >>-<< parameters.cluster_name >>-env-cluster-<< parameters.env_scoped_cluster >>"
          mutex_expiration_seconds: "240"
          wait_timeout_seconds: "600"
          steps:
          - clone_wiz_repo_index
          - run:
              name: Clone terraform-outputs
              command: |
                if [ "<< parameters.cloud >>" == "aws-fedramp" ] || [ "<< parameters.cloud >>" == "aws-fedstg2" ]; then
                  git clone git@tfoutputs:wiz-gov/terraform-outputs.git ../terraform-outputs
                else
                  git clone git@tfoutputs:wiz-sec/terraform-outputs.git ../terraform-outputs
                fi
          - run:
              name: keygen
              command: |
                date +%m | tee /tmp/month
          - restore_cache:
              keys:
                - helm-cache-v2-{{ checksum "deployment/common/bases/repositories.yaml" }}-{{ checksum "/tmp/month" }}
          - run:
              name: 🐙 argocd chart deps
              command: bash tools/deploy/argocd_chart_deps.sh
          - save_cache:
              key: helm-cache-v2-{{ checksum "deployment/common/bases/repositories.yaml" }}-{{ checksum "/tmp/month" }}
              paths:
                - ~/.cache/helm
                - ~/.config/helm
          - when:
              condition:
                not:
                  equal: ["disabled", << parameters.env_scoped_cluster >>]
              steps:
                - run:
                    name: set env scope cluster states ssh key
                    environment:
                      CLUSTER_NAME: << parameters.cluster_name >>
                    command: |
                      export GIT_ROOT=$(git rev-parse --show-toplevel)
                      REPO_NAME="$("$GIT_ROOT/.circleci/scripts/ssh_from_secretsmanager.sh")"
                      echo export "ENV_SCOPED_REPO_NAME=$REPO_NAME" >> $BASH_ENV
          - run:
              name: 👓 Run deployer - Templating for << parameters.gitops_engine >>
              command: |
                if [[ -n "$ENV_SCOPED_REPO_NAME" ]]; then
                  export ARGOCD_CLUSTER_STATES_REPO_NAME="$ENV_SCOPED_REPO_NAME"
                  export ARGOCD_CS_GITHUB_HOSTNAME="$ENV_SCOPED_REPO_NAME"
                fi
                GIT_ROOT=$(git rev-parse --show-toplevel)
                export GIT_ROOT
                cd "$GIT_ROOT/tools/deploy"
                if [ "<< parameters.push_changes >>" == "true" ]
                then
                  export OUTCOME_DIR="$GIT_ROOT/.deployment_outcome"
                else
                  export OUTCOME_DIR=/tmp/precheck/<< parameters.cluster_name >>/argocd
                  export DRY_RUN=true
                fi
                set -o pipefail
                mkdir -p $OUTCOME_DIR
                export CLUSTER_NAME="<< parameters.cluster_name >>"
                export CLUSTER_TYPE="<< parameters.cluster_type >>"
                export BRANCH_NAME=${CIRCLE_SHA1:0:8}
                export GITHUB_HOSTNAME=cluster_states
                export SYNCER_JOB_URL=${CIRCLE_BUILD_URL}
                export CHECK_DEPLOYMENT=true
                export BLOCK_ROLLBACKS_NOTIFY="<< parameters.block_rollbacks_notify >>"
                export DEPLOYER_BIN=/tmp/deployer
                export ARGOCD_DEPLOYER_BIN=/tmp/argocdappgenerator
                export SCRATCH_DIR=<< parameters.scratch_disk >>
                export BLOCK_ROLLBACKS="<< parameters.block_rollbacks >>"
                export GITOPS_ENGINE="<< parameters.gitops_engine >>"
                export SLACK_CHANNEL="<< parameters.slack_channel >>"
                export DEPLOY_GROUPS="<< parameters.deploy_groups >>"
                export VALIDATE_IMAGE_REPLICATION="<< parameters.validate_image_replication >>"
                bash run_deployer.sh
      - when:
          condition:
            and:
              - not: << parameters.push_changes >>
              - not:
                  equal: [ "enabled", << parameters.env_scoped_cluster >> ] # when then are both enabled, the file path conflicts
          steps:
            - persist_to_workspace:
                root: /tmp/precheck
                paths:
                  - << parameters.cluster_name >>/argocd/*
      - when:
          condition:
            and:
              - << parameters.push_changes >>
              - << parameters.gitops_skip_if_no_changes >>
              - not:
                  equal: [ "enabled", << parameters.env_scoped_cluster >> ] # when then are both enabled, the file path conflicts
          steps:
            - persist_to_workspace:
                root: '.deployment_outcome'
                paths:
                  - 'no-change-<< pipeline.id >>-<< parameters.cluster_name >>'
                  - outcome-<< parameters.cluster_name >>.yaml
      - when:
          condition:
             and:
               - << parameters.push_changes >>
               - not: << parameters.gitops_skip_if_no_changes >>
          steps:
            - persist_to_workspace:
                root: '.deployment_outcome'
                paths:
                  - outcome-<< parameters.cluster_name >>.yaml
      - run:
          name: check for rerun with ssh
          no_output_timeout: 121m
          command: bash $(git rev-parse --show-toplevel)/.circleci/scripts/check_ssh.sh

  helm_template:
    parameters:
      env:
        type: string
        default: test
      cluster_type:
        type: string
        default: wiz
      scratch_disk:
        type: string
        default: "/tmp"
    steps:
      - restore_cache:
          keys:
            - helm-cli-cache-v3-{{ checksum "deployment/helmversion.sh" }}
      - run:
          name: Install helm CLI
          command: bash .circleci/scripts/get_helm.sh
      - save_cache:
          key: helm-cli-cache-v3-{{ checksum "deployment/helmversion.sh" }}
          paths:
            - /tmp/helm-cli
      - restore_cache:
          keys:
            - helm-cache-v2-<< parameters.cluster_type >>-{{ checksum "deployment/common/bases/repositories.yaml" }}-{{ .Branch }}-{{ .Revision }}
            - helm-cache-v2-<< parameters.cluster_type >>-{{ checksum "deployment/common/bases/repositories.yaml" }}-{{ .Branch }}-
            - helm-cache-v2-<< parameters.cluster_type >>-{{ checksum "deployment/common/bases/repositories.yaml" }}-develop-
      - run:
          name: Helmfile get external dependencies
          command: |
            export GIT_ROOT=$(git rev-parse --show-toplevel)
            bash "$( eval echo $GIT_ROOT )/.circleci/scripts/helm_get_deps.sh"
      - run:
          name: Helmfile link local dependencies
          command: |
            export GIT_ROOT=$(git rev-parse --show-toplevel)
            cd "$( eval echo $GIT_ROOT )/deployment"
            time find . -name 'Chart.yaml' | grep -v "^./common/" | xargs -P8 -I{} sh -c 'cd $(dirname {}); echo "syncing helm deps in: $PWD"; mkdir -p charts; cd charts; ln -s "$GIT_ROOT/deployment/common/charts/common" common'
      - run:
          name: Helmfile template
          command: |
            export OUTPUT_DIR=<< parameters.scratch_disk >>/templates/<< parameters.env >>
            mkdir -p $OUTPUT_DIR
            export GIT_ROOT=$(git rev-parse --show-toplevel)
            cd "$( eval echo $GIT_ROOT )/deployment"
            tiers=$(find . -mindepth 2 -type f -name "helmfile.yaml" | cut -d '/' -f 2 | sort -u | xargs printf "%s ")
            for tier in $(printf "%s " $tiers); do
              cd "$( eval echo $GIT_ROOT )/deployment/$tier"
              echo "[INFO] Templating ${tier}"
              /tmp/deployer --HelmfileCommand template --HelmfileEnv << parameters.env >> --clusterType << parameters.cluster_type >> --args --output-dir,${OUTPUT_DIR} --tierDir $tier --concurrently=5 --skipDeps
            done
            tar -czf << parameters.scratch_disk >>/templates/<< parameters.env >>.tgz -C << parameters.scratch_disk >>/templates << parameters.env >>
      - save_cache:
          key: helm-cache-v2-<< parameters.cluster_type >>-{{ checksum "deployment/common/bases/repositories.yaml" }}-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/.cache/helm
            - ~/.config/helm
      - store_artifacts:
          path: << parameters.scratch_disk >>/templates/<< parameters.env >>.tgz
          destination: templates-<< parameters.env >>.tgz

  get_aws_cli:
    parameters:
      version:
        type: string
        default: "2.9.6"
      sha256_amd64:
        type: string
        default: 8f1de286d2c66cc0d0d26f205fdb17d5ed073f1e97f305c522e2d1fd89d5c854
      sha256_arm64:
        type: string
        default: ddd854cc7bc983fef870c1a68387105c5a5465c2addc79f0677b3b644ffb2d23
    steps:
      - run:
          name: sha256 file
          command: |
            uname -m
            if [[ "$(uname -m)" == "x86_64" ]]; then
              echo "<< parameters.sha256_amd64 >>" > /tmp/sha256.txt
            else
              echo "<< parameters.sha256_arm64 >>" > /tmp/sha256.txt
            fi
      - restore_cache:
          keys:
            - aws-cli-v1-{{ checksum "/tmp/sha256.txt" }}
      - run:
          name: download aws-cli-zip
          command: |
            if [[ ! -f /tmp/aws/awscliv2.zip ]]; then
              mkdir -p /tmp/aws
              curl -sSL "https://awscli.amazonaws.com/awscli-exe-linux-$(uname -m)-<<parameters.version>>.zip" -o "/tmp/aws/awscliv2.zip"
              echo "$(cat /tmp/sha256.txt ) */tmp/aws/awscliv2.zip" | shasum -a 256 -c
            fi
      - save_cache:
          key: aws-cli-v1-{{ checksum "/tmp/sha256.txt" }}
          paths:
            - /tmp/aws/awscliv2.zip
      - run:
          name: install aws-cli
          command: |
            cd /tmp/aws
            unzip -q -o awscliv2.zip
            sudo ./aws/install || sudo ./aws/install --update
            aws --version
  kubectl_exec:
    parameters:
      deployment:
        type: string
        default: ""
      namespace:
        type: string
        default: default
      cmd:
        type: string
        default: ""
      result_path:
        type: string
        default: /tmp/exec_result
    steps:
      - run:
          name:
          command: |
            result=$(kubectl -n << parameters.namespace >> exec deployment/<< parameters.deployment >> --  << parameters.cmd >>)
            echo $result > << parameters.result_path >>

  assume_role:
    description: This command used to assume role and store in profile
    parameters:
      profile:
        type: string
        default: "assumedrole"
      role-arn:
        type: string
    steps:
      - run:
          name: store assume role creds to << parameters.profile >> profile
          command: |
            ASSUME_ROLE_ARN=<< parameters.role-arn >>
            SESSION_NAME=$(echo $ASSUME_ROLE_ARN  | awk -F "/" '{print $2}')
            PROFILE_NAME=<< parameters.profile >>
            TEMP_CREDS=$(aws sts assume-role --role-arn $ASSUME_ROLE_ARN --role-session-name $SESSION_NAME)
            export AWS_ACCESS_KEY_ID_<< parameters.profile >>=$(echo $TEMP_CREDS | jq -r '.Credentials.AccessKeyId')
            export AWS_SECRET_ACCESS_KEY_<< parameters.profile >>=$(echo $TEMP_CREDS | jq -r '.Credentials.SecretAccessKey')
            export AWS_SESSION_TOKEN_<< parameters.profile >>=$(echo $TEMP_CREDS | jq -r '.Credentials.SessionToken')
            aws configure --profile $PROFILE_NAME set aws_access_key_id $AWS_ACCESS_KEY_ID_<< parameters.profile >>
            aws configure --profile $PROFILE_NAME set aws_secret_access_key $AWS_SECRET_ACCESS_KEY_<< parameters.profile >>
            aws configure --profile $PROFILE_NAME set aws_session_token $AWS_SESSION_TOKEN_<< parameters.profile >>

  kubectl_exec_online:
    description: This command run "kubectl exec -- command" on deployment (same as kubectl_exec) but show output in real time
    parameters:
      deployment:
        type: string
        default: ""
      namespace:
        type: string
        default: default
      cmd:
        type: string
        default: ""
    steps:
      - run:
          no_output_timeout: 180m
          name: execute - << parameters.cmd >>
          command: |
            kubectl -n << parameters.namespace >> exec deployment/<< parameters.deployment >> --  << parameters.cmd >>

  set_kubeconfig_py:
    parameters:
      datacenter:
        type: string
        default: non
      profile:
        type: string
        default: default
    steps:
      - run:
          name: update kubeconfig
          # https://github.com/aws/aws-cli/issues/7794#issuecomment-2412805809
          command: |
            python -c 'import yaml;import os; f=os.path.join(os.path.expanduser("~"),".kube/config"); config=yaml.safe_load(open(f)); [u["user"].setdefault("exec", {}).setdefault("args", []).extend(["--profile", "<< parameters.profile >>"]) for u in config["users"] if "<< parameters.datacenter >>" in u["name"]]; yaml.safe_dump(config, open(f, "w"))'
            kubectl get namespaces

  set_kubeconfig:
    parameters:
      datacenter:
        type: string
        default: non
      profile:
        type: string
        default: default
    steps:
      - run:
          name: update kubeconfig
          command: |
            DC_REGION=$(cat deployment/common/values/dc-region-mapping.yaml | grep " <<parameters.datacenter >>:" -m1 | awk '{print $2}')
            aws eks update-kubeconfig --profile << parameters.profile >> --name << parameters.datacenter >> --region $DC_REGION

  get_kubectl:
    parameters:
      version:
        type: string
        default: "1.21.12"
      sha256:
        type: string
        default: 5a8bde5198dc0e87dfa8ebc50c29f69becdc94c756254f6b2c3f37cdbfaf2e42
    steps:
      - restore_cache:
          keys:
            - kubectl-cli-v1-<< parameters.sha256 >>
      - run:
          name: download kubectl binary
          command: |
            if [[ ! -f /usr/local/bin/kubectl ]];then
              curl -LO https://dl.k8s.io/release/v<< parameters.version >>/bin/linux/amd64/kubectl
              echo "<< parameters.sha256 >> kubectl" | sha256sum --check
              sudo chmod +x kubectl
              sudo mv kubectl /usr/local/bin/kubectl
            fi
      - save_cache:
          key: kubectl-cli-v1-<< parameters.sha256 >>
          paths:
            - /usr/local/bin/kubectl

  prepare_ops_repository:
    parameters:
      checkout_branch:
        type: string
        default: develop
      target_folder:
        type: string
        default: ops
    steps:
      - add_single_ssh_key:
          fingerprint: '69:b3:99:44:46:da:1c:cd:a8:04:fa:5b:ca:9b:11:ce'
          host: ops
      - run:
          name: checkout ops
          command: |
            git clone --filter=tree:0 -b << parameters.checkout_branch >> git@ops:wiz-sec/ops.git  << parameters.target_folder >>
            cd << parameters.target_folder >>
            git config user.email "circleci@wiz.io"
            git config user.name "CircleCI"

  # We use crane to list helm charts versions in OCI registries
  install_crane:
    parameters:
      crane_version:
        type: string
        default: "v0.19.2"
      sha256_amd64:
        type: string
        default: 8e5a27413b3fa3b95467c8d36dfb55f7109075872a05fcc0dd674f537439513d
      sha256_arm64:
        type: string
        default: 09193f2c1f3f6ce383dcd6fc5d9e964fe40ceb542cd06bc708f0b4973fcae648
    steps:
      - run:
          name: sha256 file
          command: |
            uname -m
            if [[ "$(uname -m)" == "x86_64" ]]; then
              echo "<< parameters.sha256_amd64 >>" > /tmp/sha256_crane.txt
            else
              echo "<< parameters.sha256_arm64 >>" > /tmp/sha256_crane.txt
            fi
      - run:
          name: install crane
          command: |
            if [[ ! -f /usr/local/bin/crane ]];then
              curl -sL "https://github.com/google/go-containerregistry/releases/download/<<parameters.crane_version>>/go-containerregistry_Linux_$(uname -m).tar.gz" > "/tmp/go-containerregistry.tar.gz"
              echo "$(cat /tmp/sha256_crane.txt ) */tmp/go-containerregistry.tar.gz" | shasum -a 256 -c
              tar -zxvf /tmp/go-containerregistry.tar.gz -C /usr/local/bin/ crane
              chmod +x /usr/local/bin/crane
            fi

  configure-rde:
    parameters:
      task:
        type: string
      username:
        type: string
        default: rde-template-base
      vscode_workspace_branch:
        type: string
        default: master
      wiz_branch:
        type: string
        default: develop
      ops_branch:
        type: string
        default: develop
      repo_name:
        type: string
        default: ops
      repo_commit:
        type: string
        default: develop
    steps:
      - run:
          name: configure rde - << parameters.task >>
          no_output_timeout: 90m
          environment:
            username: << parameters.username >>
            vscode_workspace_branch: << parameters.vscode_workspace_branch >>
            wiz_branch: << parameters.wiz_branch >>
            ops_branch: << parameters.ops_branch >>
            repo_name: << parameters.repo_name >>
            repo_commit: << parameters.repo_commit >>
          command: |
            bash ~/project/.circleci/scripts/configure-rde.sh << parameters.task >>

  cached_pip_install:
    parameters:
      relative_path:
        type: string
    steps:
      - restore_cache:
          keys:
            - v1-{{ checksum "<< parameters.relative_path>>/requirements.txt" }}
      - run:
          name: pip install
          command: |
            mkdir -p $PIP_CACHE_DIR
            cd << parameters.relative_path>>
            pip3 install -r requirements.txt
          environment:
            PIP_CACHE_DIR: /tmp/pip_cache
      - save_cache:
          key: v1-{{ checksum "<< parameters.relative_path>>/requirements.txt" }}
          paths:
            - /tmp/pip_cache

  get_all_accounts:
    parameters:
      cloud:
        type: string
        default: aws
      variable_name:
        type: string
        default: SHARED_ACCOUNTS
      ops_path:
        type: string
        default: /root/project
    steps:
      - run:
          name: collect all wiz dcs account id
          command: |
            ops_path=<< parameters.ops_path >>
            pushd $ops_path/terraform/modules/env_config
            if [ "<< parameters.cloud >>" == "aws" ]; then
              #backend accounts
              for env in "test" "integration" "integration2" "demo" "stage" "e2e" "prod" "sh1" ; do t=$(cat $env.yaml | yq -r '.wiz.aws.accounts | keys | join(" ")') ; echo $t ; be_accounts+="$t "  ; done
              #monitor accounts
              for env in "test" "integration" "prod" ; do t=$(cat $env.yaml | yq -r '.monitor.aws.accounts | keys | join(" ")') ; echo $t ; monitor_accounts+="$t "  ; done
              #ops accounts
              for env in "test" "prod" ; do t=$(cat $env.yaml | yq -r '.ops.aws.accounts | keys | join(" ")') ; echo $t ; ops_accounts+="$t "  ; done
              #public accounts
              for env in "test" "integration" "integration2" "demo" "stage" "e2e" "prod" ; do t=$(cat $env.yaml | yq -r '.public.aws.accounts | keys | join(" ")') ; echo $t ; public_accounts+="$t "  ; done
              echo "backend accounts: $be_accounts"
              echo "monitor accounts: $monitor_accounts"
              echo "ops accounts: $ops_accounts"
              echo "public accounts: $public_accounts"
              shared_accounts="$be_accounts $monitor_accounts $ops_accounts $public_accounts"
            else
              #backend accounts
              for env in "gov" "fedint" "fedtest" "fedstg1" "fed_in_non_fedral_metadata/fedstg2" "fed_in_non_fedral_metadata/fedramp" ; do t=$(cat $env.yaml | yq -r '.wiz.aws.accounts | keys | join(" ")') ; echo $t ; be_accounts+="$t "  ; done
              #cd accounts
              for env in "fedtest" "fed_in_non_fedral_metadata/fedramp" ; do t=$(cat $env.yaml | yq -r '.cd.aws.accounts | keys | join(" ")') ; echo $t ; cd_accounts+="$t "  ; done
              #ops accounts
              for env in "gov" ; do t=$(cat $env.yaml | yq -r '.ops.aws.accounts | keys | join(" ")') ; echo $t ; ops_accounts+="$t "  ; done
              echo "backend accounts: $be_accounts"
              echo "cd accounts: $cd_accounts"
              echo "ops accounts: $ops_accounts"
              shared_accounts="$be_accounts $cd_accounts $ops_accounts"
            fi
            echo "export << parameters.variable_name >>=\"${shared_accounts}\"" >> $BASH_ENV
            popd

  run_python_script:
    parameters:
      step_name:
        type: string
        default: run script
      relative_path:
        type: string
      pip_requirement:
        type: boolean
        default: false
      script_name:
        type: string
      script_args:
        type: string
        default: ""
      env_variables:
        type: string
        default: ""
      no_output_timeout:
        type: string
        default: 10m
    steps:
      - when:
          condition: << parameters.pip_requirement >>
          steps:
            - cached_pip_install:
                relative_path: << parameters.relative_path >>
      - run:
          name: << parameters.step_name >>
          no_output_timeout: << parameters.no_output_timeout >>
          command: |
            # set env variables
            cat \<<EOF >> /tmp/env.sh
            << parameters.env_variables >>
            EOF
            source /tmp/env.sh

            # run script
            cd << parameters.relative_path>>
            python3 << parameters.script_name >>  << parameters.script_args >>

  update-kubeconfig:
    description: |
      run aws update-kubeconfig on given cluster. The caller workflow must use a Context with AWS credentials (i.e. TerraformContext)
      Assumes ops checkout
    parameters:
      cluster_name:
        type: string
        default: ""
      region:
        type: string
        default: ""
    steps:
      - set-aws-creds-file
      - run:
          name: update-kubeconfig
          command: |
            eks_cluster_name=<< parameters.cluster_name >>
            region=<< parameters.region >>
            echo "eks_cluster_name: $eks_cluster_name"
            echo "eks_cluster_region: $region"
            aws eks --region $region update-kubeconfig --name $eks_cluster_name

  get_packer:
    parameters:
      version:
        type: string
        default: "1.9.4"
      sha256:
        type: string
        default: 6cd5269c4245aa8c99e551d1b862460d63fe711c58bec618fade25f8492e80d9
    steps:
      - restore_cache:
          key: packer-v1-<< parameters.sha256 >>
      - run:
          name: download packer.zip
          command: |
            if [[ ! -f /usr/local/bin/packer ]];then
              curl -L "https://releases.hashicorp.com/packer/<< parameters.version >>/packer_<< parameters.version >>_linux_amd64.zip" -o packer.zip
              echo '<< parameters.sha256 >>  ./packer.zip' | shasum -a 256 -c
              unzip packer.zip -d ./
              chmod +x packer
              sudo mv packer /usr/local/bin/packer
            fi
      - save_cache:
          key: packer-v1-<< parameters.sha256 >>
          paths:
            - /usr/local/bin/packer

  set_aws_iamuser_cred_from_context:
    parameters:
      prefix:
        type: string
        default: ""
      profile_name:
        type: string
    steps:
      - run:
          name: insert creds from context to aws cred profile
          command: |
            export AWS_PAGER=""
            mkdir -p ~/.aws
            export BASE_AWS_ACCESS_KEY_ID=${<< parameters.prefix >>AWS_ACCESS_KEY_ID}
            export BASE_AWS_SECRET_ACCESS_KEY=${<< parameters.prefix >>AWS_SECRET_ACCESS_KEY}
                cat \<<EOF >> ~/.aws/credentials
            [<< parameters.profile_name >>]
            aws_access_key_id=${BASE_AWS_ACCESS_KEY_ID}
            aws_secret_access_key=${BASE_AWS_SECRET_ACCESS_KEY}
            EOF

  run_steps_with_mutex:
    description: |
      This command creates a mutex -> runs steps that are passed as parameter
      -> deletes the mutex. This is for example to prevent two terraform apply
      runs from running simultaneously.
    parameters:
      steps:
        description: "Steps to run when there's a mutex"
        type: steps
        default: []
      avoid_concurrent_runs:
        description: "Whether to create a mutex for a given run or not"
        type: boolean
        default: false
      mutex_id:
        type: string
      mutex_expiration_seconds:
        type: string
        default: "300"
      wait_timeout_seconds:
        description: "Time to wait for mutex to release before failing"
        type: string
        default: "120"
    steps:
      - when:
          condition: << parameters.avoid_concurrent_runs >>
          steps:
            - run:
                name: Creating mutex...
                command: |
                  python3 $(git rev-parse --show-toplevel)/tools/dynamo/main.py \
                  -t ops-cd-keystore \
                  --aws_region eu-north-1 \
                  --env_aws_access_key_id OPS_CD_KEYSTORE_AWS_ACCESS_KEY_ID \
                  --env_aws_secret_access_key OPS_CD_KEYSTORE_AWS_SECRET_ACCESS_KEY \
                  lock --lock_id << parameters.mutex_id >> \
                  -m "Current mutex was created by workflow ${CIRCLE_BUILD_URL}" \
                  --ttl << parameters.mutex_expiration_seconds >> \
                  --wait_timeout << parameters.wait_timeout_seconds >>
      - steps: << parameters.steps >>
      - when:
          condition: << parameters.avoid_concurrent_runs >>
          steps:
            - run:
                when: always
                name: Deleting mutex...
                command: |
                  python3 $(git rev-parse --show-toplevel)/tools/dynamo/main.py \
                  -t ops-cd-keystore \
                  --aws_region eu-north-1 \
                  --env_aws_access_key_id OPS_CD_KEYSTORE_AWS_ACCESS_KEY_ID \
                  --env_aws_secret_access_key OPS_CD_KEYSTORE_AWS_SECRET_ACCESS_KEY \
                  unlock --lock_id << parameters.mutex_id >>

  print_ip_address:
    steps:
      - run:
          name: 👣 print ip address
          command: curl http://ipv4.icanhazip.com

  enable_terraform_logs:
    parameters:
      steps:
        description: "Terraform steps"
        type: steps
        default: []
      enable_debug_logs:
        type: boolean
        default: false
      env:
        type: string
        default: test
      directory:
        type: string
      workspace:
        type: string
      cloud:
        type: string
        default: aws
      profile:
        type: string
        default: be
    steps:
      - when:
          condition:
            and:
              - << parameters.enable_debug_logs >>
              - not:
                  matches:
                    pattern: "fed.*"
                    value: << parameters.env >>
          steps:
            - run:
                name: Enable Terraform debug logs
                command: |
                  echo "export TF_LOG_PATH=/tmp/terraform.log" >> $BASH_ENV
                  echo 'export TF_LOG="JSON"' >> $BASH_ENV
      - steps: << parameters.steps >>
      - when:
          condition:
            and:
              - << parameters.enable_debug_logs >>
              - not:
                  matches:
                    pattern: "fed.*"
                    value: << parameters.env >>
          steps:
            - run:
                name: Check for throttling in terraform run
                command: |
                  export OUTPUTFILE_FULL=/tmp/outputfile_full.txt
                  export OUTPUTFILE_SUMMARY=/tmp/outputfile_summary.txt
                  bash $(git rev-parse --show-toplevel)/.circleci/scripts/check-terraform-throttling.sh

                  echo "export OUTPUTFILE_FULL=$OUTPUTFILE_FULL" >> $BASH_ENV
            - store_artifacts:
                path: /tmp/outputfile_full.txt
            - run:
                name: Compress terraform debug output
                command: |
                  timestamp=$(date +'%H:%M:%S')
                  dir=$(echo << parameters.directory >> | cut -d "/" -f 2)
                  filename="terraform-log-${dir}-<< parameters.workspace >>-${timestamp}.tgz"
                  tar -czf "/tmp/${filename}" -C /tmp terraform.log
                  dest="s3://prod-terraform-logs-ops-bucket"
                  #TODO - remove static if and use env_config
                  if [[ "<< parameters.env >>" == "gov" ]]; then
                    export AWS_DEFAULT_REGION=us-gov-west-1
                  fi
                  aws --profile << parameters.profile >> s3 cp "/tmp/${filename}" $dest

  setup_ssh_keys:
    steps:
      - run:
          name: Setup ssh keys
          command: |
              bash $(git rev-parse --show-toplevel)/.circleci/scripts/setup-ssh-keys.sh

  check_for_rerun_with_ssh:
    parameters:
      account_id:
        type: string
        default: "null"
    steps:
      - run:
          when: always
          name: check for rerun with ssh
          no_output_timeout: 121m
          command: |
            export ACCOUNT_ID="<< parameters.account_id >>"
            bash $(git rev-parse --show-toplevel)/.circleci/scripts/check_ssh.sh


  yaml_fmt_env_config:
    parameters:
      env:
        type: string
        default: all
      relative_path:
        type: string
        default: ../../tools/scripts/devops-tools
    steps:
      - run_python_script:
          relative_path: << parameters.relative_path >>
          pip_requirement: true
          script_name: "yaml_fmt_env_config.py"
          script_args: "--env << parameters.env >>"
      - run:
          name: check fmt on env_config
          command: |
            pwd
            cd $(git rev-parse --show-toplevel)
            num_of_files_to_fmt=$(git status terraform/modules/env_config/ -s | wc -l)
            if [ $num_of_files_to_fmt -gt 0 ];
              then echo "please fmt the following file"
              git status terraform/modules/env_config/ -s
              echo "you can run the following python3 ./tools/scripts/devops-tools/yaml_fmt_env_config.py --env all"
              exit 1
            else:
              echo "all files are OK"
            fi


  create_pr_from_branch:
    parameters:
      feature_branch:
        type: string
      base_branch:
        type: string
        default: "develop"
      title:
        type: string
      body:
        type: string
        default: "Automated PR"
      repo:
        type: string
        default: ops
      github_app_id:
        type: string
        description: "Variable name for github app id"
        default: "GITHUB_APP_OPS_PR_ID"
      github_app_private_key:
        type: string
        description: "Variable name for github app private key (base64 encoded)"
        default: "GITHUB_APP_OPS_PR_KEY_BASE64"
      output_path:
        type: string
        default: /tmp/pr_url
      label:
        type: string
        default: autoupdate
    steps:
      - run_python_script:
          relative_path: tools/github-pr-handler
          pip_requirement: true
          script_name: "open-pr.py"
          script_args: "--app_id_var_name '<< parameters.github_app_id >>' --app_key_var_name '<< parameters.github_app_private_key >>' --body '<< parameters.body >>' --title '<< parameters.title >>' --feature_branch '<< parameters.feature_branch >>' --base_branch '<< parameters.base_branch >>' --repo '<< parameters.repo >>' --label '<< parameters.label >>' --output_path '<< parameters.output_path >>'"
      - run:
          name: save pr url to << parameters.output_path >>
          command: |
            PR_URL=$(cat << parameters.output_path >>)
            echo "export PR_URL=\"${PR_URL}\"" >> $BASH_ENV


  push_changes_to_git_branch:
    parameters:
      branch_name:
        type: string
      commit_message:
        type: string
      git_add_path:
        type: string
      slack_channel:
        type: string
        default: "non_exist_channel"
      push_to_origin:
        type: boolean
        default: true
    steps:
      - run:
          name: push changes to back to git
          environment:
            branch_name: << parameters.branch_name >>
            commit_message: << parameters.commit_message >>
            slack_channel: << parameters.slack_channel >>
            git_add_path: << parameters.git_add_path >>
            push_to_origin: << parameters.push_to_origin >>
          command: |
            bash $(git rev-parse --show-toplevel)/.circleci/scripts/push_changes_to_git_branch.sh

  deploy_helper:
    parameters:
      cluster_name:
        type: string
        default: test-eu1
      cluster_type:
        type: string
        default: wiz
      service_list:
        type: string
        default: ""
      action:
        type: string
        default: sync
      dry_run:
        type: boolean
        default: true
    steps:
      - run:
          name: check for rerun with ssh
          no_output_timeout: 121m
          command: bash $(git rev-parse --show-toplevel)/.circleci/scripts/check_ssh.sh
      - run:
          name: Run << parameters.action >> on services
          command: |
            export GIT_ROOT=$(git rev-parse --show-toplevel)
            cd "$( eval echo $GIT_ROOT )/.circleci/scripts"
            export CLUSTER_NAME="<< parameters.cluster_name >>"
            export CLUSTER_TYPE="<< parameters.cluster_type >>"
            export SERVICES="<< parameters.service_list >>"
            export ACTION="<< parameters.action >>"
            export DRY_RUN="<< parameters.dry_run >>"
            bash deploy_helper.sh

  checkpoint:
    parameters:
      checkpoint:
        type: string
      env:
        type: string
      status:
        type: string
      dc:
        type: string
        default: NA
      cluster_type:
        type: string
      wiz_component:
        type: string
        default: NA
    steps:
      - run:
          name: 🚉 register checkpoint
          command: |
              root=$(git rev-parse --show-toplevel)
              if [[ $WIZ_COMPONENT != "NA" ]]; then
                  version_folder_path="$root/deployment/versions"
                  component_version_path="$version_folder_path/$WIZ_COMPONENT.versions.yaml.gotmpl"
                  export WIZ_COMMIT=$(cat $component_version_path | yq -r '.[]')
              else
                  export WIZ_COMMIT="NA"
              fi
              export AWS_ACCESS_KEY_ID=$CHECKPOINTS_AWS_ACCESS_KEY_ID
              export AWS_SECRET_ACCESS_KEY=$CHECKPOINTS_AWS_SECRET_ACCESS_KEY
              export AWS_DEFAULT_REGION=$CHECKPOINTS_AWS_DEFAULT_REGION
              python3 $root/tools/deploy-v2/checkpoint.py write || true
          environment:
              CHECKPOINT: << parameters.checkpoint >>
              ENV: << parameters.env >>
              STATUS: << parameters.status >>
              CLUSTER_TYPE: << parameters.cluster_type >>
              WIZ_COMPONENT: << parameters.wiz_component >>
              DC: << parameters.dc >>

  get_checkpoint:
    parameters:
      checkpoint:
        type: string
      env:
        type: string
      cluster_type:
        type: string
      output_path:
        type: string
    steps:
      - run:
          name: 🚉 Fetch checkpoint
          command: |
              root=$(git rev-parse --show-toplevel)
              export AWS_ACCESS_KEY_ID=$CHECKPOINTS_AWS_ACCESS_KEY_ID
              export AWS_SECRET_ACCESS_KEY=$CHECKPOINTS_AWS_SECRET_ACCESS_KEY
              export AWS_DEFAULT_REGION=$CHECKPOINTS_AWS_DEFAULT_REGION
              python3 $root/tools/deploy-v2/checkpoint.py read || true
          environment:
              CHECKPOINT: << parameters.checkpoint >>
              ENV: << parameters.env >>
              CLUSTER_TYPE: << parameters.cluster_type >>
              OUTPUT_PATH: << parameters.output_path >>

  checkout_shallow:
    steps:
      - run:
          name: Checkout Shallow
          command: |
            /local-orbs/checkout_shallow.sh

  get_or_update_yaml:
    parameters:
      yaml_file_to_update:
        type: string
        default: ""
      nested_key_to_search:
        type: string
        default: ""
      value_to_replace:
        type: string
        default: ""
    steps:
      - run:
          name: install python deps
          command: |
            pip install -r ~/project/tools/scripts/get_or_update_yaml/requirements.txt
      - run:
          name: "Get or Update Yaml"
          command: |
            if [[ -z "VALUE_TO_REPLACE" || -z "<< parameters.yaml_file_to_update >>" || -z "<< parameters.nested_key_to_search >>" ]]; then
              echo "VALUE_TO_REPLACE OR One of the parameters is empty. in order to use this script you must set VALUE_TO_REPLACE in \$BASH_ENV and provide value to all params"
              exit 1
            fi
            python ~/project/tools/scripts/get_or_update_yaml/get_or_update_yaml.py -y << parameters.yaml_file_to_update >> -k << parameters.nested_key_to_search >> -v $VALUE_TO_REPLACE -c https://app.circleci.com/pipelines/workflows/${CIRCLE_WORKFLOW_ID}"
  bake:
    parameters:
      step_name:
        type: string
      ami_name:
        type: string
      extra_vars:
        type: string
        default: ""
      command:
        default: "validate"
        type: enum
        enum: ["validate", "build"]
      relative_path:
        type: string
        default: tools/ami-bakery
      image_directory:
        type: string
      file:
        type: string
    steps:
      - run_python_script:
          step_name: << parameters.step_name >>
          relative_path: << parameters.relative_path >>
          pip_requirement: true
          script_name: "bake.py"
          no_output_timeout: 1h
          script_args: "--ami << parameters.ami_name >> --extra-vars << parameters.extra_vars >> --command << parameters.command >> --directory << parameters.image_directory >> --file << parameters.file >>"
  setup_docker:
    parameters:
      region:
        type: string
        default: us-east-2
      aws_access_key:
        type: string
      aws_access_key_secret:
        type: string
      aws_ecr_account_url:
        type: string
    steps:
      - run:
          name: setup docker << parameters.aws_ecr_account_url >>
          command: |
            echo 'export AWS_PAGER=""' >> $BASH_ENV
            echo "export AWS_REGION=<< parameters.region >>" >> $BASH_ENV
            echo "export DEFAULT_AWS_ECR_ACCOUNT_URL=$AWS_ECR_ACCOUNT_URL" >> $BASH_ENV
            echo "export AWS_ECR_ACCOUNT_URL=<< parameters.aws_ecr_account_url >>" >> $BASH_ENV
            echo "export AWS_ACCESS_KEY_ID=<< parameters.aws_access_key >>" >> $BASH_ENV
            echo "export AWS_SECRET_ACCESS_KEY=<< parameters.aws_access_key_secret >>" >> $BASH_ENV
            source $BASH_ENV
            aws ecr get-login-password --region << parameters.region >> | docker login --username AWS --password-stdin https://<< parameters.aws_ecr_account_url >>

  auth_private_external_repos:
    parameters:
      secret_name:
        type: string
        default: external-images/credentials
    steps:
      - run:
          name: Authenticate to private registries
          command: |
            cd 3rd-party
            export SECRET_NAME=<< parameters.secret_name >>
            bash ./authenticate-private-registries.sh
  validate_no_freeze:
    parameters:
      cluster_type:
        type: string
        default: wiz
    steps:
      - run:
          name: validate current branch is not in deployment freeze
          command: |
              command -v pip3 || curl https://bootstrap.pypa.io/get-pip.py | python3
              pip3 install boto3
              python3 .circleci/scripts/validate_no_freeze.py
          environment:
              DEPLOYMENT_STATES_PATH: /tmp/deployment-states
              BRANCH_NAME: << pipeline.git.branch >>
              CLUSTER_TYPE: << parameters.cluster_type >>

  publish_lambda_version:
    parameters:
      env_name:
        type: string
      region:
        type: string
      function_name:
        type: string
      ecr_url:
        type: string
      lambda_ecr_prefix:
        type: string
      package_name:
        type: string
      version_filename:
        type: string
      image_arch:
        type: string
      account_id:
        type: string
      profile:
        type: string
      forwarder_function_name:
        type: string
    steps:
      - run:
          name: ❀ Publish << parameters.function_name >>
          command: |
            export REGION=<< parameters.region >>
            export ENV_NAME=<< parameters.env_name >>
            export FUNCTION_NAME=<< parameters.function_name >>
            export ECR_URL=<< parameters.ecr_url >>
            export PACKAGE_NAME=<< parameters.package_name >>
            export VERSION_FILENAME=<< parameters.version_filename >>
            export IMAGE_ARCH=<< parameters.image_arch >>
            export ACCOUNT_ID=<< parameters.account_id >>
            export LAMBDA_ECR_PREFIX=<< parameters.lambda_ecr_prefix >>
            export PROFILE=<< parameters.profile >>
            export FORWARDER_FUNCTION_NAME=<< parameters.forwarder_function_name >>
            unset AWS_DEFAULT_REGION # will use the region from the aws creds file
            .circleci/publish_lambda_version.sh

  prepare_for_wiz_web_task:
    description: |
      Prepare the environment for running a task in the wiz/web repo (checkout wiz, install dependencies, etc.)
    parameters:
      cache_key:
        type: string
        default: node-v6
    steps:
      - checkout
      - set-aws-creds-file
      - clone_circleci_wiztools
      - wiztools/set_wiz_cache
      - checkout-wiz-repo:
          repo: wiz
          component: web
          go_env: false
      - wiztools/ssh_install:
          access_group: docs
      - wiztools/self_hosted_restore_cache:
          key1: << parameters.cache_key >>-ae870ef-main-multiarch-{{ arch }}-wiz-repo-web-{{ checksum "wiz/web/yarn.lock" }}
          key2: << parameters.cache_key >>-ae870ef-main-multiarch-{{ arch }}-wiz-repo-web
          cache_title: restore fe-end2endtests cache
      - run:
          name: Install Wiz/Web
          no_output_timeout: 20m
          command: |
            cd wiz/web
            task install
      - wiztools/self_hosted_save_cache:
          key: << parameters.cache_key >>-ae870ef-main-multiarch-{{ arch }}-wiz-repo-web-{{ checksum "wiz/web/yarn.lock" }}
          path1: wiz/web/node_modules
          path2: /root/.cache/Cypress
          cache_title: save fe-end2endtests cache
  replicate_image_from_wiztools_dependencies:
      description: Replicate images dependencies
      steps:
        - checkout:
            path: ~/project/
        - wiztools/ssh_install:
            access_group: wiztools
        - run:
            name: clone wiztools
            command: |
              git clone https://github.com/wiz-sec/circleci-wiztools.git
        - run:
            name: create default profile
            command: |
              mkdir -p ~/.aws
              echo "[repl_aws_profile]
              aws_access_key_id = $us1_repl_access_key
              aws_secret_access_key = $us1_repl_secret_access_key
              region = $AWS_REGION" > ~/.aws/credentials
        - wiztools/install_pip_package:
            package: boto3
            version: "1.34.31"
            executor_key: python-3.10



  replicate_image_from_wiztools:
      description: Replicate images to other registries using replicator
      parameters:
        executor_name:
          type: string
          default: amd-ci
        source_registry:
          type: string
        source_package_name:
          type: string
        source_tag:
          type: string
        target_registries:
          type: string
        target_package_name:
          type: string
        target_tags:
          type: string
        datacenter:
          type: string
          default: us1
      steps:
        - wiztools/replicate_images:
            script_path: /home/circleci/project/circleci-wiztools/src/scripts/replicate_sqs/replicate.py
            source_registry: << parameters.source_registry >>
            source_package_name: << parameters.source_package_name >>
            source_tag: << parameters.source_tag >>
            target_registries: << parameters.target_registries >>
            target_package_name: << parameters.target_package_name >>
            target_tags: << parameters.target_tags >>
            datacenter: << parameters.datacenter >>
  sensor_defs_install_deps:
    steps:
      - wiztools/get_remote_file:
          sha256: d0ec15ca8c687046b708b8c247818137757d5916c4f1fbc28e5a9048e3f282d4
          target_filepath: task_linux_amd64.deb
          url: https://github.com/go-task/task/releases/download/v3.17.0/task_linux_amd64.deb
      - run:
          name: Install taskfile
          command: |
            sudo dpkg -i task_linux_amd64.deb
      - wiztools/get_remote_file:
          sha256: 29e647beeacbcc2be5f2f481e405c73bcd6d7563bd229ff924a7997b6f2edd5f
          target_filepath: ytt-linux-amd64
          url: https://github.com/vmware-tanzu/carvel-ytt/releases/download/v0.43.0/ytt-linux-amd64
      - run:
          name: Install ytt
          command: |
            mkdir -p ~/bin
            mv ytt-linux-amd64 ~/bin/ytt
            chmod +x ~/bin/ytt
            ytt version
      - wiztools/get_remote_file:
          sha256: 8afd786b3b8ba8053409c5e7d154403e2d4ed4cf3e93c237462dc9ef75f38c8d
          target_filepath: yq_linux_amd64
          url: https://github.com/mikefarah/yq/releases/download/v4.35.2/yq_linux_amd64
      - run:
          name: Install yq
          command: |
            mkdir -p ~/bin
            mv yq_linux_amd64 ~/bin/yq
            chmod +x ~/bin/yq
            yq --version
      - run:
          name: Install pipenv
          command: pip3 install pipenv==2022.11.11

  sensor_assume_role:
    parameters:
      arn_prefix:
        type: string
        default: aws
      sensor_account_id:
        type: string
      cloud:
        type: string
        default: aws
    steps:
      - run:
          name: Assume aws creds
          command: |
            if [[ "<< parameters.cloud >>" != "aws" ]]
            then
              export AWS_DEFAULT_REGION=$AWS_GOV_DEFAULT_REGION
              echo "export AWS_DEFAULT_REGION=$AWS_GOV_DEFAULT_REGION" >> $BASH_ENV # This env var interferes with running aws commands
            fi
            aws_creds=$(aws sts assume-role --role-arn arn:<< parameters.arn_prefix >>:iam::<< parameters.sensor_account_id >>:role/wizdctf --role-session-name << pipeline.id >>)
            echo "export AWS_ACCESS_KEY_ID=$(echo $aws_creds | jq -r .Credentials.AccessKeyId)" >> $BASH_ENV
            echo "export AWS_SECRET_ACCESS_KEY=$(echo $aws_creds | jq -r .Credentials.SecretAccessKey)" >> $BASH_ENV
            echo "export AWS_SESSION_TOKEN=$(echo $aws_creds | jq -r .Credentials.SessionToken)" >> $BASH_ENV

  create_ecr_repository:
    parameters:
      repository:
        type: string
      registry:
        type: string
    steps:
      - run:
          name: validate repo exists in target registry
          command: |
            export AWS_PAGER=""
            export TARGET_AWS_ECR_ACCOUNT_URL=<< parameters.registry >>/<< parameters.repository >>
            
            aws ecr describe-repositories --region $AWS_DEFAULT_REGION --repository-names  << parameters.repository >> > /dev/null 2>&1 || \
            aws ecr create-repository --region $AWS_DEFAULT_REGION --repository-name << parameters.repository >> --image-scanning-configuration scanOnPush=true
            aws ecr put-lifecycle-policy --region $AWS_DEFAULT_REGION --repository-name << parameters.repository >> --lifecycle-policy-text file://~/project/.circleci/sensor/ecr-deletion-policy.json
            # aws ecr put-replication-configuration --region $AWS_DEFAULT_REGION --replication-configuration file://~/project/.circleci/sensor/ecr-replication-config.json # Add cross region replication??? we will have a proxy so not sure if it's needed
            aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin https://$TARGET_AWS_ECR_ACCOUNT_URL
  init-terraform-workspace:
    description: |
      Prepare outcome file, terraform init, and selects the right workspace
    parameters:
      workspace:
        type: string
        default: test-eu1
      cloud:
        type: string
        default: aws
      directory:
        type: string
        default: terraform/aws-dc
      cluster_type:
        type: string
      block_rollbacks:
        type: boolean
        default: false
      cache_version:
        type: string
        default: 'v14-90f1178-main-amd64' # locally compiled tls plugin requires cache reset whenever we change the image version
      pr_mode:
        type: boolean
        description: pr_mode is used to determine if we are running in a PR or not
        default: true
      get_aws_creds_tf:
        type: boolean
        description: If true - will get AWS creds from terraform
        default: true
      runner:
        type: boolean
        default: false
      env:
        type: string
      cluster_name:
        type: string
    steps:
      - run:
          name: Calculate date checksum and backend.tf checksum
          command: |
            date +%U | tee /tmp/week
            cp ~/project/<< parameters.directory >>/backend.tf /tmp/backend.tf
      - when:
          condition: << parameters.runner >>
          steps:
            - wiztools/self_hosted_restore_cache:
                key1: tf-cache-<< parameters.cache_version >>-{{ checksum "/tmp/week" }}-{{ checksum "/tmp/backend.tf" }}
                cache_title: restore terraform cache
      - when:
          condition:
            not: << parameters.runner >>
          steps:
            - wiztools/self_hosted_restore_cache:
                cache_title: terraform modules
                key1: tf-cache-<< parameters.cache_version >>-{{ checksum "/tmp/week" }}-{{ checksum "/tmp/backend.tf" }}
      - print_ip_address
      - run:
          name: prepare to save checkpoint
          command: |
            mkdir -p ~/project/.tf_status
      - get_checkpoint:
          checkpoint: << parameters.workspace >>
          env: << parameters.env >>
          cluster_type: << parameters.cluster_type >>
          output_path: /tmp/ops_commit.txt
      - run:
          name: write last successful checkpoint to ops_commit.txt
          command: |
            touch /tmp/ops_commit.txt
            echo "ops_commit: $(cat /tmp/ops_commit.txt)"
            cat /tmp/ops_commit.txt | jq -r '.ops_commit' > .tf_status/ops_commit.txt
            ops_commit=$(cat .tf_status/ops_commit.txt)
            if [[ $ops_commit == "null" ]]; then
              echo "No ops_commit found in checkpoint - clear file"
              echo > .tf_status/ops_commit.txt
            fi
      - run:
          name: Block terraform rollback (if needed)
          command: |
            # CircleCI trick - Get this from cache
            PREVIOUS_OPS_COMMIT_FILE=.tf_status/ops_commit.txt
            mkdir -p $(dirname $PREVIOUS_OPS_COMMIT_FILE) && touch $PREVIOUS_OPS_COMMIT_FILE
            
            export previous_ops_commit="$(cat $PREVIOUS_OPS_COMMIT_FILE )"
            export BLOCK_ROLLBACKS="<< parameters.block_rollbacks >>"
            export OUTCOMEDIR=".deployment_outcome"
            bash  ~/project/.circleci/scripts/terraform_prep_outcome_file.sh
          environment:
              TF_WORKSPACE_SELECT: << parameters.workspace >>
              CURRENT_COMMIT: << pipeline.git.revision >>
      - run:
          name: set region # TODO: since this is not exported to $BASH_ENV - it probably has no effect at all
          command: |
            export AWS_DEFAULT_REGION=$(~/project/.circleci/scripts/region_by_cluster << parameters.workspace >>)
            echo "AWS_DEFAULT_REGION set to $AWS_DEFAULT_REGION"
      - when:
          condition:
            or:
              - equal: [ aws-fedtest, << parameters.cloud >> ]
              - equal: [ aws-fedstg1, << parameters.cloud >> ]
              - equal: [ terraform/universal, << parameters.directory >> ]
          steps:
            - set-aws-creds-file:
                cloud: << parameters.cloud >>
      - when:
          condition:
            and:
              - << parameters.get_aws_creds_tf >>
              - not:
                  equal: [ terraform/universal, << parameters.directory >> ]
              - or:
                  - equal: [ aws, << parameters.cloud >> ]
                  - equal: [ aws-gov, << parameters.cloud >> ]
          steps:
            - run:
                name: set-aws-creds-tf
                environment:
                  TF_VAR_cluster_type: << parameters.cluster_type >>
                command: |
                  mkdir -p ~/.aws
                  cd $(git rev-parse --show-toplevel)/terraform/modules/creds
                  terraform init
                  terraform apply -auto-approve
      - when:
            condition:
              equal: [ wiz, << parameters.cluster_type >> ]
            steps:
              - set-gcp-creds-file
      - run:
          name: Terraform init and select workspace
          command: |
            export CLOUD=<<parameters.cloud>>
            export TF_WORKSPACE_SELECT=<< parameters.workspace >>
            export TF_PLUGIN_CACHE_DIR="/tmp/.terraform/plugin-cache"
            mkdir -p "$TF_PLUGIN_CACHE_DIR"
            export WIZ_TF_DIRECTORY="<< parameters.directory >>"
            bash $(git rev-parse --show-toplevel)/.circleci/scripts/terraform-setup.sh
      - run:
          name: state replace-provider
          command: |
            bash  $(git rev-parse --show-toplevel)/tools/scripts/replace-provider/state_replace_provider.sh << parameters.pr_mode >>
      - when:
          condition: << parameters.runner >>
          steps:
            - wiztools/self_hosted_save_cache:
                key: tf-cache-<< parameters.cache_version >>-{{ checksum "/tmp/week" }}-{{ checksum "/tmp/backend.tf" }}
                path1: "/tmp/.terraform/plugin-cache"
                path2: "/root/project/<< parameters.directory >>/.terraform.lock.hcl"
                cache_title: save terraform cache
      - when:
          condition:
            not: << parameters.runner >>
          steps:
            - wiztools/self_hosted_save_cache:
                cache_title: terraform plugins
                key: tf-cache-<< parameters.cache_version >>-{{ checksum "/tmp/week" }}-{{ checksum "/tmp/backend.tf" }}
                path1: "/tmp/.terraform/plugin-cache"
                path2: ~/project/<< parameters.directory >>/.terraform.lock.hcl

  maybe_recovery_steps:
    parameters:
      dr_mode:
        type: boolean
        description: If true - will try to retain records from origin_dc statefile
        default: false
      env:
        type: string
      origin_dc:
        type: string
        description: The name of the origin DC to retain
        default: ""
      workspace:
        type: string
      fingerprint_terraform_outputs:
        type: string
    description: |
      possibly apply some DC recovery steps
    steps:
      - when:
          condition: << parameters.dr_mode >>
          steps:
            - run:
                name: ♻️ Retain state records
                environment:
                  ORIGIN_DC: << parameters.origin_dc >>
                command: bash  $(git rev-parse --show-toplevel)/tools/rto/retain_from_statefile.sh
            - add_single_ssh_key:
                fingerprint: << parameters.fingerprint_terraform_outputs >>
                host: tfoutputs
            - run:
                name: clone tf-outputs
                command: bash $(git rev-parse --show-toplevel)/.circleci/scripts/terraform-outputs-clone.sh
                environment:
                  ENV: << parameters.env >>
            - run:
                name: ♻️ Restore DynamoDB
                command: |
                  cd $(git rev-parse --show-toplevel)/terraform/aws-dc
                  terraform state list > /tmp/current_state
                  python3 $(git rev-parse --show-toplevel)/tools/rto/restore_dynamodb.py \
                    --origin_dc << parameters.origin_dc >> \
                    --new_dc << parameters.workspace >> \
                    --terraform_state_list /tmp/current_state \
                    --terraform_outputs_dir /tmp/terraform-outputs 


  terraform_outputs:
    description: Write terraform outputs to terraform-outputs repository
    parameters:
      workspace:
        type: string
      env:
        type: string
      cluster_type:
        type: string
      directory:
        type: string
      fingerprint_terraform_outputs:
        type: string
    steps:
      - add_single_ssh_key:
          fingerprint: << parameters.fingerprint_terraform_outputs >>
          host: tfoutputs
      - run:
          name: Write terraform-outputs
          command: bash ~/project/.circleci/scripts/terraform-outputs.sh
          environment:
            TF_WORKSPACE_SELECT: << parameters.workspace >>
            DIRECTORY: << parameters.directory >>
            ENV: << parameters.env >>
            CLUSTER_TYPE: << parameters.cluster_type >>

  clone_tf_outputs:
    steps:
      - add_single_ssh_key:
          fingerprint: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          host: tfoutputs
      - run:
          name: Clone terraform-outputs
          command: |
            git clone git@tfoutputs:wiz-sec/terraform-outputs.git ../terraform-outputs
            echo "export TERRAFORM_OUTPUTS_PATH=$(realpath $PWD/../terraform-outputs)" >> $BASH_ENV
            echo "export TF_VAR_TERRAFORM_OUTPUTS_PATH=$(realpath $PWD/../terraform-outputs)" >> $BASH_ENV

jobs:


  publish-lambda-version:
    environment:
      TF_VAR_account_id: "<< parameters.main_account_id >>"
    executor:
        name: ops_runner
        runner: << parameters.runner >>
    working_directory: ~/project
    parameters:
      env_name:
        type: string
        default: test
      cloud:
        type: string
        default: aws
      region:
        type: string
        default: eu-north-1
      function_name:
        type: string
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      lambda_ecr_prefix:
        type: string
        default: beyond
      package_name:
        type: string
      version_filename:
        type: string
      image_arch:
        type: string
        default: amd64
      account_id:
        type: string
      slack_channel:
        type: string
        default: test-deployments
      runner:
        type: string
        default: "dummy_runner"
      profile:
        type: string
      main_account_id:
        type: string
    steps:
      - clone_circleci_wiztools
      - wiztools/set_wiz_cache
      - wiztools/checkout_sparse:
          checkout_paths: '.circleci deployment/versions terraform/modules/env_config terraform/modules/creds terraform/modules/data terraform/modules/data-light'
          shallow: false
      - get_aws_cli
      - set-aws-creds-tf
      - publish_lambda_version:
          env_name: << parameters.env_name >>
          region: << parameters.region >>
          function_name: << parameters.function_name >>
          ecr_url: << parameters.ecr_url >>
          lambda_ecr_prefix: << parameters.lambda_ecr_prefix >>
          package_name: << parameters.package_name >>
          version_filename: << parameters.version_filename >>
          image_arch: << parameters.image_arch >>
          account_id: << parameters.account_id >>
          profile: << parameters.profile >>
          forwarder_function_name: << parameters.env_name >>-kusto-cloudwatch-forwarder
      - wiz-slack/simple_notification:
          slack_channel: << parameters.slack_channel >>
          notify_on: fail
          enable_slack_mention: false
          title: "Publish lambda version"
          content: |
            Publish lambda version failed! Check it out in the CircleCI job :circleci:

  publish-lambda-and-cloudfront-version:
    environment:
      TF_VAR_account_id: "<< parameters.account_id >>"
    executor:
        name: ops_runner
        runner: << parameters.runner >>
    working_directory: ~/project
    parameters:
      env_name:
        type: string
        default: test
      cloud:
        type: string
        default: aws
      region:
        type: string
        default: eu-north-1
      data_center:
        type: string
        default: eu3
      auth_read_role_name:
        type: string
      auth_cache_bucket:
        type: string
      function_name:
        type: string
      link_table_name:
        type: string
      cloudfront_alias:
        type: string
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      package_name:
        type: string
      version_filename:
        type: string
      auth_account_id:
        type: string
      auth0_audience:
        type: string
      auth0_domain:
        type: string
      slack_channel:
        type: string
        default: test-deployments
      runner:
        type: string
        default: "dummy_runner"
      account_id:
        type: string
      profile:
        type: string
        default: "be"
    steps:
      - checkout:
          path: ~/project
      - get_aws_cli
      - set-aws-creds-tf
      - run:
          name: Install skopeo
          command: |
            apt update
            apt install skopeo
      - run:
          name: Publish lambda version
          command: |
            export REGION=<< parameters.region >>
            export ENV_NAME=<< parameters.env_name >>
            export DATA_CENTER=<< parameters.data_center >>
            export AUTH_READ_ROLE_NAME=<< parameters.auth_read_role_name >>
            export AUTH_CACHE_BUCKET=<< parameters.auth_cache_bucket >>
            export FUNCTION_NAME=<< parameters.function_name >>
            export LINK_TABLE_NAME=<< parameters.link_table_name >>
            export CLOUDFRONT_ALIAS=<< parameters.cloudfront_alias >>
            export ECR_URL=<< parameters.ecr_url >>
            export PACKAGE_NAME=<< parameters.package_name >>
            export VERSION_FILENAME=<< parameters.version_filename >>
            export AUTH_ACCOUNT_ID=<< parameters.auth_account_id >>
            export AUTH0_AUDIENCE=<< parameters.auth0_audience >>
            export AUTH0_DOMAIN=<< parameters.auth0_domain >>
            export AWS_PROFILE=<< parameters.profile >>
            unset AWS_DEFAULT_REGION # will use the region from the aws creds file
            ./.circleci/scripts/publish_lambda_and_cloudfront_version.sh


  gitops-reconcile-wait:
    parallelism: 1
    environment:
      TF_VAR_account_id: "<< parameters.account_id >>"
    circleci_ip_ranges: false
    executor:
      name: ops_runner
      runner: << parameters.runner >>
      ecr_url: << parameters.ecr_url >>
    working_directory: ~/project
    parameters:
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      cluster_name:
        type: string
        default: test-eu1
      cluster_type:
        type: string
        default: wiz
      helmfile_log_level:
        type: string
        default: info
      gitops_engine:
        type: enum
        enum:
          - argocd
        default: argocd
      checker_version:
        type: string
        default: v1
      gitops_skip_if_no_changes:
        type: boolean
        default: false
      env_scoped_cluster:
        type: enum
        enum:
          - disabled
          - enabled
          - required
        default: disabled
      slack_channel:
        type: string
        default: test-deployments
      cloud:
        type: string
        default: aws
      notify_on:
        type: string
        default: fail
      enable_slack_mention:
        type: boolean
        default: true
      region:
        type: string
      use_cluster_type:
        type: boolean
        default: false
      block_rollbacks:
        type: boolean
        default: false
      fingerprint_terraform_outputs:
        type: string
      fingerprint_cluster_states:
        type: string
      fingerprint_cluster_states_argocd:
        type: string
      runner:
        type: string
        default: "dummy_runner"
      account_id:
        type: string
      profile:
        type: string
        default: "be"
    steps:
      - init_checker_workspace:
          cluster_name: << parameters.cluster_name >>
          cloud: << parameters.cloud >>
          cluster_type: << parameters.cluster_type >>
          region: << parameters.region >>
          use_cluster_type: << parameters.use_cluster_type >>
          profile: << parameters.profile >>
      - run_checker:
          gitops_engine: << parameters.gitops_engine >>
          env_scoped_cluster: << parameters.env_scoped_cluster >>
          gitops_skip_if_no_changes: << parameters.gitops_skip_if_no_changes >>
          checker_version: << parameters.checker_version >>
          cluster_name: << parameters.cluster_name >>
          cloud: << parameters.cloud >>
          cluster_type: << parameters.cluster_type >>
      - wiz-slack/notify_deployment:
          kind: GitOps
          slack_channel: << parameters.slack_channel >>
          env: << parameters.cluster_name >>
          outcome_path: "/mnt/ramdisk/project/.deployment_outcome"
          notify_on: << parameters.notify_on >>
          enable_slack_mention: << parameters.enable_slack_mention >>

  gitops-sources-prep:
    parallelism: 1
    executor:
      name: << parameters.executor >>
      runner: << parameters.runner_class >>-<< parameters.runner_env >>-tf
      ecr_url: << parameters.ecr_url >>
      resource_class: xlarge
    working_directory: "/mnt/ramdisk/project"
    parameters:
      env_scoped_cluster:
        type: enum
        enum:
          - disabled
          - enabled
          - required
        default: disabled
      validate_image_replication:
        type: boolean
        default: false
        description: "Whether to validate that all images exist in ECR"
      executor:
        type: enum
        enum: [ops, ops_runner]
        default: ops
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      cluster_name:
        type: string
        default: test-eu1
      cluster_type:
        type: string
        default: wiz
      gitops_engine:
        type: enum
        enum:
          - argocd
        default: argocd
      gitops_skip_if_no_changes:
        type: boolean
        default: false
      helmfile_log_level:
        type: string
        default: info
      slack_channel:
        type: string
        default: test-deployments
      cloud:
        type: string
        default: aws
      notify_on:
        type: string
        default: fail
      enable_slack_mention:
        type: boolean
        default: true
      region:
        type: string
      use_cluster_type:
        type: boolean
        default: false
      block_rollbacks:
        type: boolean
        default: false
      block_rollbacks_notify:
        type: boolean
        description: whether to notify when deployment is blocked
        default: true
      fingerprint_terraform_outputs:
        type: string
      fingerprint_cluster_states:
        type: string
      fingerprint_cluster_states_argocd:
        type: string
      runner_env:
        type: string
        default: "test"
      runner_class:
        type: string
        default: "xlarge"
      push_changes:
        type: boolean
        default: true
      deploy_groups:
        type: string
        default: ALL
        description: "Comma separated list of deploy groups to target"
    steps:
      - clone_circleci_wiztools
      - wiztools/set_wiz_cache
      - build_and_cache_go_tool:
          tool_name: argocdappgenerator
          ops_relative_tool_path: tools/argo/argocd-utils/flux2-argocd-dependson
      - run_deployer:
          env_scoped_cluster: << parameters.env_scoped_cluster >>
          cluster_name: << parameters.cluster_name >>
          cloud: << parameters.cloud >>
          cluster_type: << parameters.cluster_type >>
          helmfile_log_level: << parameters.helmfile_log_level >>
          gitops_engine: << parameters.gitops_engine >>
          gitops_skip_if_no_changes: << parameters.gitops_skip_if_no_changes >>
          block_rollbacks: << parameters.block_rollbacks >>
          fingerprint_terraform_outputs: << parameters.fingerprint_terraform_outputs >>
          fingerprint_cluster_states: << parameters.fingerprint_cluster_states >>
          fingerprint_cluster_states_argocd: << parameters.fingerprint_cluster_states_argocd >>
          push_changes: << parameters.push_changes >>
          block_rollbacks_notify: << parameters.block_rollbacks_notify >>
          deploy_groups: << parameters.deploy_groups >>
          validate_image_replication: << parameters.validate_image_replication >>
      - check_for_rerun_with_ssh
      - wiz-slack/notify_deployment:
          kind: GitOps
          slack_channel: << parameters.slack_channel >>
          env: << parameters.cluster_name >>
          outcome_path: "/mnt/ramdisk/project/.deployment_outcome"
          notify_on: << parameters.notify_on >>
          enable_slack_mention: << parameters.enable_slack_mention >>

  Update-CDN:
    parallelism: 1
    environment:
      TF_VAR_account_id: "<< parameters.account_id >>"
    executor:
      name: ops_runner
      runner: << parameters.runner >>
      ecr_url: << parameters.ecr_url >>
    working_directory: ~/project
    parameters:
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      cluster_name:
        type: string
        default: test-eu1
      env:
        type: string
      cloud:
        type: string
        default: aws
      slack_channel:
        type: string
        default: test-deployments
      vite_aws_console_origin:
        type: string
      wiz_io_customer_bucket:
        type: string
      wiz_io_customer_filepath:
        type: string
      runner:
        type: string
      account_id:
        type: string
      mode:
        type: enum
        description: whether to test the version in staging distribution before updating the final distribution
        default: legacy
        enum:
          - legacy # syncs all files to regular places
          - rc # syncs all global files to regular places, and html files to /rc/
          - global # syncs only global files (should run before updating CDN)
      block_rollbacks:
        type: boolean
        default: false
      block_rollbacks_notify:
        type: boolean
        description: whether to send a slack notification if the deployment is blocked due to rollback protection
        default: true
      final_checkpoint_status:
        type: string
        default: ready
    steps:
      - checkout
      - set-aws-creds-tf
      - check_for_rerun_with_ssh
      - run_steps_with_mutex:
          avoid_concurrent_runs: true
          mutex_id: "cdn-<< parameters.cluster_name >>"
          mutex_expiration_seconds: "120"
          wait_timeout_seconds: "600"
          steps:
          - when:
              condition:
                and:
                  - << parameters.block_rollbacks >>
                  - not: # No need to block rollbacks if in global mode because it's not overwritting html files
                      equal: [ << parameters.mode >> , global ]
              steps:
                - get_checkpoint:
                    checkpoint: cdn
                    env: << parameters.env >>
                    cluster_type: wiz
                    output_path: /tmp/checkpoint.json
                - checkout-wiz-repo:
                    repo: wiz
                    component: web
                    go_env: false
                - run:
                    name: 🔐 Protect against rollbacks
                    command: |
                      bash tools/deploy-v2/block_rollbacks.sh /tmp/checkpoint.json
                    environment:
                      SLACK_CHANNEL: << parameters.slack_channel >>
                      ENV: << parameters.env >>
                      COMPONENT: web
                      BLOCK_ROLLBACKS_NOTIFY:  << parameters.block_rollbacks_notify >>
          - deploy-to-cdn:
              cluster_name: << parameters.cluster_name >>
              vite_aws_console_origin: << parameters.vite_aws_console_origin >>
              wiz_io_customer_bucket: << parameters.wiz_io_customer_bucket >>
              wiz_io_customer_filepath: << parameters.wiz_io_customer_filepath >>
              mode: << parameters.mode >>
              env: << parameters.env >>
          - when: # save the final status to checkpoint, only if in legacy mode
              condition:
                equal: [ << parameters.mode >> , legacy ]
              steps:
              - checkpoint:
                  checkpoint: cdn
                  env: << parameters.env >>
                  status: << parameters.final_checkpoint_status >>
                  cluster_type: wiz
                  wiz_component: web
                  dc: << parameters.cluster_name >>
      - wiz-slack/simple_notification:
          slack_channel: << parameters.slack_channel >>
          notify_on: fail
          enable_slack_mention: false
          title: "Update CDN failed"
          content: |
            Update CDN failed! Check it out in the CircleCI job :circleci:

  Update-digital-trust-CDN:
    parallelism: 1
    environment:
      TF_VAR_account_id: "<< parameters.account_id >>"
    circleci_ip_ranges: false
    executor:
      name: ops_runner
      runner: << parameters.runner >>
      ecr_url: << parameters.ecr_url >>
    working_directory: ~/project
    parameters:
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      env:
        type: string
        default: test
      cloud:
        type: string
        default: aws
      slack_channel:
        type: string
        default: test-deployments
      runner:
        type: string
        default: "dummy_runner"
      vite_digital_trust_api_url:
        type: string
      vite_digital_trust_sentry_dsn:
        type: string
      account_id:
        type: string
    steps:
      - checkout
      - set-aws-creds-tf
      - deploy-digital-trust-to-cdn:
          env: << parameters.env >>
          vite_digital_trust_api_url: << parameters.vite_digital_trust_api_url >>
          vite_digital_trust_sentry_dsn: << parameters.vite_digital_trust_sentry_dsn >>
      - wiz-slack/simple_notification:
          slack_channel: << parameters.slack_channel >>
          notify_on: fail
          enable_slack_mention: false
          title: "Update Digital Trust CDN failed"
          content: |
            Update Digital Trust CDN failed! Check it out in the CircleCI job :circleci:

  diskanalyzer-orchestrator-deploy:
    parameters:
      cluster_name:
        type: string
      env:
        type: string
      slack_channel:
        type: string
        default: stage-deployments
      runner:
        type: string
        default: "dummy_runner"
    working_directory: ~/project
    circleci_ip_ranges: false
    executor:
      name: ops_runner
      runner: << parameters.runner >>
    steps:
      - checkout # must checkout to get regions file
      - set-aws-creds-file:
          cloud: << parameters.env >>
      - run:
          name: Update Kube Config
          command: |
            region=$(~/project/.circleci/scripts/region_by_cluster << parameters.cluster_name >>)
            aws eks --region $region update-kubeconfig --name << parameters.cluster_name >>
      - run:
          no_output_timeout: 30m
          name: Call update all regions
          command: |
            export CLUSTER_NAME=<< parameters.cluster_name >>
            bash .circleci/scripts/deploy_diskanalyzer_orchestrator.sh || \
            (echo "" && echo "/deploy diskanalyzer orchestrator first apply failed... Retrying... " && echo "" && \
            bash .circleci/scripts/deploy_diskanalyzer_orchestrator.sh)
      - wiz-slack/simple_notification:
          slack_channel: << parameters.slack_channel >>
          notify_on: fail
          enable_slack_mention: true
          tag_user: oncallda
          title: "Diskanalyzer orchestrator publish failed"
          content: |
            Diskanalyzer orchestrator publish failed! Check it out in the CircleCI job :circleci:

  run-rto-manager:
    parameters:
      cluster_name:
        type: string
      env:
        type: string
      account_id:
        type: string
      runner_env:
        type: string
        default: "test"
      runner_class:
        type: string
        default: "small"
      executor:
        type: enum
        enum: [ops, ops_runner]
        default: ops
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
    working_directory: ~/project
    circleci_ip_ranges: false
    executor:
      name: << parameters.executor >>
      runner: << parameters.runner_class >>-<< parameters.runner_env >>-tf
      ecr_url: << parameters.ecr_url >>
      resource_class: small
    steps:
      - checkout # must checkout to get regions file
      - set-aws-creds-tf:
          cluster_type: wiz
          branch: master
          account_id: << parameters.account_id >>
      - set_kubeconfig:
          profile: be
          datacenter: << parameters.cluster_name >>
      - run:
          no_output_timeout: 30m
          name: ♻️ Create RTO job
          command: |
            kubectl -n default create job --from=cronjob/rto-manager rto-manager-${CIRCLE_BUILD_NUM}
      - check_for_rerun_with_ssh

  multiple-neptune-e2e:
    parameters:
      cluster_name:
        type: string
      env:
        type: string
      slack_channel:
        type: string
        default: stage-deployments
      runner:
        type: string
        default: "dummy_runner"
    working_directory: ~/project
    circleci_ip_ranges: false
    executor:
      name: ops_runner
      runner: << parameters.runner >>
    steps:
      - checkout # must checkout to get regions file
      - set-aws-creds-file:
          cloud: << parameters.env >>
      - run:
          name: Update Kube Config
          command: |
            region=$(~/project/.circleci/scripts/region_by_cluster stage-eu1) #Always run the test against the stage env
            aws eks --region $region update-kubeconfig --name stage-eu1
      - run:
          name: Test dynamic Neptunes data seperation
          command: |
            cd .circleci/dynamic
            bash e2e_multiple_neptunes.sh
      - wiz-slack/simple_notification:
          slack_channel: << parameters.slack_channel >>
          notify_on: fail
          enable_slack_mention: false
          title: "Multiple Neptune E2E failed"
          content: |
            Multiple Neptune E2E failed! Check it out in the CircleCI job :circleci:

  multiple-rds-e2e:
    parameters:
      cluster_name:
        type: string
      env:
        type: string
      slack_channel:
        type: string
        default: stage-deployments
      runner:
        type: string
        default: "dummy_runner"
    working_directory: ~/project
    circleci_ip_ranges: false
    executor:
      name: ops_runner
      runner: << parameters.runner >>
    steps:
      - checkout # must checkout to get regions file
      - set-aws-creds-file:
          cloud: << parameters.env >>
      - run:
          name: Update Kube Config
          command: |
            region=$(~/project/.circleci/scripts/region_by_cluster stage-eu1) #Always run the test against the stage env
            aws eks --region $region update-kubeconfig --name stage-eu1
      - run:
          name: Test dynamic RDS data seperation
          command: |
            cd .circleci/dynamic
            bash e2e_multiple_rds.sh
      - wiz-slack/simple_notification:
          slack_channel: << parameters.slack_channel >>
          notify_on: fail
          enable_slack_mention: false
          title: "Multiple RDS E2E failed"
          content: |
            Multiple RDS E2E failed! Check it out in the CircleCI job :circleci:

  diagnose-orchestrator-test-env:
    parameters:
      env:
        type: string
      dc:
        type: string
        default: ""
      args:
        type: string
        default: ""
    working_directory: ~/project
    parallelism: 1
    executor:
      name: ops_runner
      runner: o10r-runner
    steps:
      - checkout
      - checkout-wiz-repo:
          repo: wiz
          component: outpost-diagnostics
          branch: develop
      - install_ssh_keys
      - clone_circleci_wiztools
      - wiztools/set_wiz_cache
      - go_and_git_private_repo_config
      - run:
          name: Run Tests
          no_output_timeout: 2h
          command: |
            echo -e "apiKeyAuth: $DD_API_KEY\nappKeyAuth: $DD_APP_KEY" > ~/.datadog.yaml
            sudo apt update
            sudo apt install -y python3 python3-pip
            cd wiz/outpost-diagnostics/cmd
            go mod tidy
            go run main.go --env << parameters.env >> --dc "<< parameters.dc >>" --failOnIssues --noJira << parameters.args >> --logSource kusto

      - wiz-slack/simple_notification:
          slack_channel: "orchestrator-canary"
          notify_on: fail
          title: "<< parameters.env >> << parameters.dc >> - diagnostic errors"
          tag_user: oncallda

  diagnose-orchestrator-env:
    parameters:
      env:
        type: string
      assume-role-arn:
        type: string
      tenants_bucket:
        type: string
        default: ""
      args:
        type: string
        default: ""
    working_directory: ~/project
    parallelism: 1
    executor:
        name: ops_runner
        runner: o10r-runner
    steps:
      - checkout
      - checkout-wiz-repo:
          repo: wiz
          component: outpost-diagnostics
          branch: develop
      - install_ssh_keys
      - clone_circleci_wiztools
      - wiztools/set_wiz_cache
      - run:
          name: clone oncall-scripts
          command: |
            git clone -b main https://github.com/wiz-sec/oncall-scripts.git  /tmp/oncall-scripts
      - go_and_git_private_repo_config
      - when:
          condition: << parameters.tenants_bucket >>
          steps:
          - assume_role:
              profile: "assumed_role"
              role-arn: << parameters.assume-role-arn >>
          - run:
              name: Get tenant files
              no_output_timeout: 2h
              command: |
                AC=$(aws --profile assumed_role configure get aws_access_key_id)
                SC=$(aws --profile assumed_role configure get aws_secret_access_key)
                ST=$(aws --profile assumed_role configure get aws_session_token)
                export AWS_ACCESS_KEY_ID=$AC
                export AWS_SECRET_ACCESS_KEY=$SC
                export AWS_SESSION_TOKEN=$ST

                aws sts get-caller-identity
                aws s3api get-object --bucket << parameters.tenants_bucket >> --key tenants_extended.csv /tmp/tenants_extended.csv
      - run:
          name: Run outpost-diagnostics
          no_output_timeout: 2h
          command: |
            tenants_bucket="<< parameters.tenants_bucket >>"
            if [ -z "$tenants_bucket" ]; then
              source=none
            else
              source=/tmp/tenants_extended.csv
            fi

            cd wiz/outpost-diagnostics/cmd

            go mod tidy
            go run main.go --logSource kusto --env << parameters.env >> --format=json --tenantsInfoSource=$source << parameters.args >> > /tmp/result.json
      - run:
          name: Update o10r RDS
          no_output_timeout: 2h
          command: |
            cd /tmp/oncall-scripts/orchestrator
            apt update
            apt install -y python3.10-venv
            python3 -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt
            ./o10r update /tmp/result.json


  verify-orchestrator-test-env:
    working_directory: ~/project
    parallelism: 1
    executor:
      name: ops_runner
      runner: o10r-runner
    steps:
      - checkout
      - checkout-wiz-repo:
          repo: wiz
          branch: develop
      - install_ssh_keys
      - clone_circleci_wiztools
      - wiztools/set_wiz_cache
      - go_and_git_private_repo_config
      - run:
          name: Run Tests
          no_output_timeout: 2h
          command: |
            export ENV_NAME=test AWS_DEFAULT_REGION=us-east-1 LOG_LEVEL=error
            sudo apt update
            sudo apt install -y python3 python3-pip
            cd wiz/orchestrator-test-env/wiz-assets
            go mod tidy
            if ! go run main.go validate --summary=/tmp/summary.txt; then
              echo "export CANARY_VALIDATE_SUMMARY='$(cat /tmp/summary.txt)'" >> $BASH_ENV
              exit 1
            fi

      - wiz-slack/simple_notification:
          slack_channel: "orchestrator-canary"
          notify_on: fail
          title: "Canary object scan validation failed"
          content_env: "CANARY_VALIDATE_SUMMARY"
          tag_user: oncallda

  run-end2end-suites:
    parameters:
      env:
        type: string
      slack_channel:
        type: string
        default: stage-deployments
      tenant_number:
        type: string
        default: "1"
      tag_user:
        type: string
        default: "oncallbackend"
      suites_selector:
        type: string
      test_id:
        type: string
      cluster_name:
        type: string
        default: stage-eu1
      docker_runtime:
        type: boolean
        default: true
      terraform_outputs:
        type: boolean
        default: false
      pulumi:
        type: boolean
        default: false
      aws_region:
        type: string
      runner:
        type: string
        default: "dummy_runner"
      executor:
        type: string
        default: "wiz-ci-large"
      cloud:
        type: string
        default: aws
      fingerprint_terraform_outputs:
        type: string
        default: '4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04'
      test_concurrency:
        type: integer
        default: 1
      cache_key:
        type: string
        default: v6
    working_directory: ~/project
    executor:
      name: << parameters.executor >>
      runner: << parameters.runner >>
    parallelism: 1
    steps:
      - clone_circleci_wiztools
      - wiztools/set_wiz_cache
      - when:
          condition: << parameters.docker_runtime >>
          steps:
            - setup_remote_docker
      - checkout
      - checkout-wiz-repo:
          repo: wiz
          component: end2endtests
          shallow_clone: true
      - install_ssh_keys
      - go_and_git_private_repo_config
      - when:
          condition: << parameters.terraform_outputs >>
          steps:
            - clone_tf_outputs
      - when:
          condition: << parameters.pulumi >>
          steps:
            - run:
                name: login pulumi
                command: pulumi login -c "s3://${PULUMI_STATE_BUCKET_NAME}?region=${PULUMI_STATE_BUCKET_REGION}"
            - when:
                condition:
                  not:
                    equal: [ "wiz-ci-runner", << parameters.executor >> ]
                steps:
                  - wiztools/self_hosted_restore_cache:
                      cache_title: pulumi plugins
                      key1: pulumi-plugins-{{ checksum "/home/circleci/project/wiz/end2endtests/e2eutils/pulumiutils/pulumi_plugin_versions.go" }}
            - when:
                condition:
                  equal: [ "wiz-ci-runner", << parameters.executor >> ]
                steps:
                  - wiztools/self_hosted_restore_cache:
                      key1: end2end/<< parameters.test_id >>/pulumi-plugins-{{ checksum "/home/circleci/project/wiz/end2endtests/e2eutils/pulumiutils/pulumi_plugin_versions.go" }}
                      cache_title: restore pulumi plugins cache
                      no_output_timeout: 30m
      - when:
          condition:
            equal: [ "wiz-ci-runner", << parameters.executor >> ]
          steps:
            - wiztools/self_hosted_restore_cache:
                key1: end2end/<< parameters.test_id >>/go-mod-<< parameters.cache_key >>-end2endtests-{{ checksum "/home/circleci/project/wiz/end2endtests/go.mod" }}
                key2: end2end/<< parameters.test_id >>/go-mod-<< parameters.cache_key >>-end2endtests-
                cache_title: restore end2endtests go mod cache
                no_output_timeout: 30m
      - when:
          condition:
            not:
              equal: [ "wiz-ci-runner", << parameters.executor >> ]
          steps:
            - wiztools/self_hosted_restore_cache:
                cache_title: go modules
                key1: go-mod-<< parameters.cache_key >>-end2endtests-{{ checksum "/home/circleci/project/wiz/end2endtests/go.mod" }}
                key2: go-mod-<< parameters.cache_key >>-end2endtests-
      - run:
          name: Set test environment variables
          command: |
            DC_REGION=$(cat  ~/project/deployment/common/values/dc-region-mapping.yaml | grep " <<parameters.cluster_name >>:" -m1 | awk '{print $2}')
            echo "export AWS_DEFAULT_REGION=$DC_REGION" >> $BASH_ENV
            echo "export AWS_REGION=<< parameters.aws_region >>" >> $BASH_ENV
            echo "export ENV_NAME=<< parameters.env >>" >> $BASH_ENV
            echo "export ENV=<< parameters.env >>" >> $BASH_ENV
            echo "export DC=<< parameters.cluster_name >>" >> $BASH_ENV
            export JUNIT_FILE_PATH=/tmp/tests
            echo "export JUNIT_FILE_PATH=$JUNIT_FILE_PATH" >> $BASH_ENV
            echo "export TENANT_NUMBER=<< parameters.tenant_number >>" >> $BASH_ENV
            echo "export TEST_ID=<< parameters.test_id >>" >> $BASH_ENV
            echo "export TASK_ARGS=<< parameters.suites_selector >>" >> $BASH_ENV
            echo "export TEST_CONCURRENCY=<< parameters.test_concurrency >>" >> $BASH_ENV
            mkdir -p $JUNIT_FILE_PATH
      - check_for_rerun_with_ssh
      - run:
          name: Run Tests
          no_output_timeout: 2h
          command: bash .circleci/scripts/run_e2e.sh
      - store_test_results:
          path: /tmp/tests
      - store_artifacts:
          path: /tmp/tests
      - when:
          condition:
            equal: [ "wiz-ci-runner", << parameters.executor >> ]
          steps:
            - wiztools/self_hosted_save_cache:
                key: end2end/<< parameters.test_id >>/go-mod-<< parameters.cache_key >>-end2endtests-{{ checksum "/home/circleci/project/wiz/end2endtests/go.mod" }}
                path1: /go/pkg/mod
                path2: /home/circleci/.cache/go-build
                cache_title: save end2endtests go mod cache
                no_output_timeout: 30m
            - when:
                condition: << parameters.pulumi >>
                steps:
                  - wiztools/self_hosted_save_cache:
                      key: end2end/<< parameters.test_id >>/pulumi-plugins-{{ checksum "/home/circleci/project/wiz/end2endtests/e2eutils/pulumiutils/pulumi_plugin_versions.go" }}
                      path1: /home/circleci/.pulumi/plugins
                      cache_title: save pulumi plugins cache
                      no_output_timeout: 30m
      - when:
          condition:
            not:
              equal: [ "wiz-ci-runner", << parameters.executor >> ]
          steps:
            - wiztools/self_hosted_save_cache:
                cache_title: go modules
                key: go-mod-<< parameters.cache_key >>-end2endtests-{{ checksum "/home/circleci/project/wiz/end2endtests/go.mod" }}
                path1: /go/pkg/mod
                path2: ~/.cache/go-build
            - when:
                condition: << parameters.pulumi >>
                steps:
                  - wiztools/self_hosted_save_cache:
                      cache_title: pulumi plugins
                      key: pulumi-plugins-{{ checksum "/home/circleci/project/wiz/end2endtests/e2eutils/pulumiutils/pulumi_plugin_versions.go" }}
                      path1: ~/.pulumi/plugins
      - wiz-slack/simple_notification:
          slack_channel: << parameters.slack_channel >>
          tag_user: << parameters.tag_user >>
          notify_on: fail
          enable_slack_mention: false
          title: "E2E tests failed"
          content: |
            Test **<< parameters.test_id >>** failed on env **<<parameters.env >>** ! \n Check it out in the CircleCI job :circleci:

  merger-accept-theirs:
    parameters:
      source_branch_name:
        type: string
      source_commit_ref:
        type: string
      dest_branch_name:
        type: string
        default: ${CIRCLE_BRANCH}
      slack_channel:
        type: string
        default: test-deployments
      target_folder:
        type: string
        default: "ops"
    executor: python-only
    steps:
      - prepare_ops_repository:
          checkout_branch: << parameters.source_branch_name >> # TODO: in order to get updated versions of the merger script
          target_folder: << parameters.target_folder >>
      - run: |
          git -C << parameters.target_folder >> reset --hard << parameters.source_commit_ref >>
      - run:
          name: Merge << parameters.source_commit_ref >> into << parameters.dest_branch_name >>
          command: bash ~/project/ops/.circleci/scripts/merger.sh
          environment:
            SOURCE_REF: << parameters.source_commit_ref >>
            SOURCE_BRANCH_NAME: << parameters.source_branch_name >>
            TARGET_ORIGIN: origin
            TARGET_BRANCH: << parameters.dest_branch_name >>
            COMMIT_MESSAGE: "Update << parameters.dest_branch_name >> from << parameters.source_branch_name >> (<< parameters.source_commit_ref >>)"
      - wiz-slack/simple_notification:
          slack_channel: << parameters.slack_channel >>
          notify_on: fail
          ops_path: "~/project/ops/"
          enable_slack_mention: false
          title: "Merger job failed"
          content: |
            Merger job failed! Check it out in the CircleCI job :circleci:

  update-static-data:
    parameters:
      source_commit_ref:
        type: string
      dest_branch_name:
        type: string
        default: ${CIRCLE_BRANCH}
      commit_message:
        type: string
        default: 'CircleCI: Update ${CIRCLE_BRANCH} static-data version'
      slack_channel:
        type: string
        default: test-deployments
      skip_ci:
        type: boolean
        default: false
    executor: python-only
    steps:
      - prepare_ops_repository:
          checkout_branch: << parameters.dest_branch_name >>
      - run:
          name: Checkout versions-staticdata into << parameters.dest_branch_name >>
          command: |
            cd ops
            git checkout << parameters.source_commit_ref >> deployment/versions/versions-staticdata.yaml.gotmpl
            commit_message="<< parameters.commit_message >>"
            if [ "<< parameters.skip_ci >>" == "true" ]
            then
              commit_message="[skip ci] $commit_message"
            fi
            git diff --quiet && git diff --staged --quiet || git commit -a -m "$commit_message"
            git push
      - wiz-slack/simple_notification:
          ops_path: '~/project/ops/'
          slack_channel: << parameters.slack_channel >>
          notify_on: fail
          enable_slack_mention: false
          title: "Update static data failed"
          content: |
            Update static data failed! Check it out in the CircleCI job :circleci:

  hotfix:
    circleci_ip_ranges: true
    description: hotfix a components
    executor:
      name: ops
      ecr_url: << parameters.ecr_url >>
      resource_class: small
    parameters:
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      region:
        type: string
        default: us-east-2
      cloud:
        type: string
        default: aws
      source_branch:
        type: string
        default: develop
      dest_branch:
        type: string
    steps:
      - prepare_ops_repository:
          checkout_branch: << parameters.source_branch >>
          target_folder: "."
      - run:
          name: set region # if it runs in separate process - it probably has no effect
          command: export AWS_DEFAULT_REGION=<< parameters.region >>
      - set-aws-creds-file:
          cloud: << parameters.cloud >>
      - run:
          name: Run slackbot script
          command: |
            python3 .circleci/slackbot.py \
                --dest-branch << parameters.dest_branch >> \
                --plan-id << pipeline.parameters.plan_id >> \
                --region << pipeline.parameters.dynamodb_region >> \
                --repo-path $(git rev-parse --show-toplevel)

  join:
    executor:
      name: ops_runner
      runner: general-prod-small
    description: Just a helper job
    parameters:
      env:
        type: string
        default: test
      stage:
        type: string
        default: phase1
      save_cache:
        type: boolean
        default: true
      cluster_type:
        type: string
        default: na
      checkpoint:
        type: string
        default: na
    steps:
      - run: echo "All required jobs finished successfully!"
      - wiztools/checkout_sparse:
          checkout_paths: 'tools/deploy-v2'
      - when:
          condition:
            and:
              - << parameters.save_cache >>
              - not: << pipeline.parameters.new_dc >> # we dont want to save cache for new_dc case
          steps:
            - clone_circleci_wiztools
            - wiztools/set_wiz_cache
            - run:
                name: prepare deployment status file
                command: |
                  mkdir -p /tmp/.deploy_status
                  echo $CIRCLE_SHA1 > /tmp/.deploy_status/ops_commit.txt

            - save_cache:
                key: deploy_status_v4-<< parameters.cluster_type >>-<< parameters.env >>-<< parameters.stage >>{{ .BuildNum }}-{{ epoch }}
                paths:
                - /tmp/.deploy_status
      - when:
          condition:
            not:
              equal: [ na, << parameters.checkpoint >> ]
          steps:
              - checkpoint:
                  checkpoint: << parameters.checkpoint >>
                  env: << parameters.env >>
                  status: ready
                  cluster_type: << parameters.cluster_type >>
              - checkpoint:
                  checkpoint: << parameters.checkpoint >>-post
                  env: << parameters.env >>
                  status: ready
                  cluster_type: << parameters.cluster_type >>

  post-deployment:
    executor:
        name: ops_runner
        runner: << parameters.runner >>
    parameters:
      slack_channel:
        type: string
        default: delete-me
      env:
        type: string
        default: test
      cluster_type:
        type: string
      enable_slack_mention:
        type: boolean
        default: true
      runner:
        type: string
        default: "dummy_runner"
    steps:
      - checkout:
          path: ~/project
      - attach_workspace:
          at: /tmp/outcomes
      - run:
          name: Save current commit to file
          command: echo ${CIRCLE_SHA1} > /tmp/last_successful_deployment_<< parameters.cluster_type >>.txt
      - clone_circleci_wiztools
      - wiztools/set_wiz_cache
      - wiztools/self_hosted_save_cache:
          cache_title: Save current commit file to cache
          key: circleci-deployment-<< pipeline.git.branch >>-<< parameters.cluster_type >>-{{ .BuildNum }}-{{ epoch }}
          path1: /tmp/last_successful_deployment_<< parameters.cluster_type >>.txt
      - checkpoint:
          checkpoint: post
          env: << parameters.env >>
          status: ready
          cluster_type: << parameters.cluster_type >>
      - wiz-slack/notify_deployment:
          kind: GitOps
          outcome_path: /tmp/outcomes
          slack_channel: << parameters.slack_channel >>
          env: << parameters.env >>
          enable_slack_mention: << parameters.enable_slack_mention >>

  aggregate_plans:
    circleci_ip_ranges: false
    executor:
      name: ops_runner
      runner: << parameters.runner >>
    description: sends aggregated slack message
    parameters:
      slack_channel:
        type: string
        default: delete-me
      env:
        type: string
        default: test
      stage:
        type: string
        default: phase1
      enable_slack_mention:
        type: boolean
        default: true
      cluster_type:
        type: string
        default: wiz
      runner:
        type: string
        default: ""
    steps:
      - run: 
          name: Checkout Shallow
          command: |
            /local-orbs/checkout_shallow.sh
      - clone_circleci_wiztools
      - wiztools/set_wiz_cache
      - attach_workspace:
          at: /tmp/precheck
      - restore_cache:
          key: deploy_status_v4-<< parameters.cluster_type >>-<< parameters.env >>-<< parameters.stage >>
      - run:
          name: Generate report
          no_output_timeout: 30m
          command: |
            # Create directory for the report
            mkdir -p /tmp/report

            # Set up environment variables
            export REPORTS_PATH="/tmp/precheck/<< parameters.stage >>/reports"
            if [ -f /tmp/.deploy_status/ops_commit.txt ]
            then
              export PREVIOUS_COMMIT=$(cat /tmp/.deploy_status/ops_commit.txt )
            fi
            export CURRENT_COMMIT=$CIRCLE_SHA1
            export OPS_REPO_PATH=$(pwd)
            export TITLE=<< parameters.stage >>
            export TARGET_REPORT_PATH=/tmp/report
            
            # Generate report
            cd tools/reporter
            python3 report_collector.py

            echo "Report Location: /tmp/report/report.html"
      - store_artifacts:
          path: /tmp/report
          destination: tmp/report
      - run:
          name: Prepare outcome file
          command: |
            OUTCOME_DIR="/tmp/outcomes"
            OUTCOME_FILE="$OUTCOME_DIR/outcome-gitops-<< parameters.env >>-<< parameters.stage >>.yaml"
            mkdir -p $OUTCOME_DIR
            echo "cluster_name: << parameters.env >>-<< parameters.stage >>" > $OUTCOME_FILE
            echo "current_ops_commit: $CIRCLE_SHA1"  >> $OUTCOME_FILE
            if [ -f /tmp/.deploy_status/ops_commit.txt ]
            then
              echo "previous_ops_commit: $(cat /tmp/.deploy_status/ops_commit.txt )"  >> $OUTCOME_FILE
            fi
            cat $OUTCOME_FILE
      - when: # Comment on PR only on test
          condition:
            equal: [ << parameters.stage >> , test ]
          steps:
          - wiztools/add_pr_comment:
              repo_name: ops
              message_file: /tmp/report/resource_change_counts.md
              check_existing: "true"
      - wiz-slack/notify_deployment:
          kind: All
          outcome_path: /tmp/outcomes/outcome-gitops-<< parameters.env >>-<< parameters.stage >>.yaml
          slack_channel: << parameters.slack_channel >>
          env: << parameters.env >>
          folder: terraform
          enable_slack_mention: << parameters.enable_slack_mention >>
          notify_on: approval
          artifacts_buttons_json: |
            [{"button_text":":page_with_curl: Report","artifact_path":"0/tmp/report/report.html"}]

  validate-cci-config:
    parallelism: 8
    parameters:
      env:
        type: string
    working_directory: ~/project
    executor: python-only
    steps:
      - checkout
      - wiztools/get_remote_file:
          sha256: "8adb82e5be7dfde49857ebd7c948fd8f9b10cdcdb13f71b74685dff6e6756890"
          target_filepath: /home/circleci/bin/gomplate
          url: "https://github.com/hairyhenderson/gomplate/releases/download/v4.3.0/gomplate_linux-amd64"
      - wiztools/get_remote_file:
          sha256: "9ffb344e00d15c3701481c425558e51a0f4d8737c453e2a0779add0e4a7666c9"
          target_filepath: /tmp/cci/cci.tgz
          url: "https://github.com/CircleCI-Public/circleci-cli/releases/download/v0.1.29314/circleci-cli_0.1.29314_linux_amd64.tar.gz"
      - run:
          name: install tools
          command: |
            sudo chmod 755 /home/circleci/bin/gomplate
            tar -zvxf /tmp/cci/cci.tgz  --strip-components=1 -C /tmp/cci/
            sudo mv /tmp/cci/circleci /home/circleci/bin/circleci
      - run:
          name: Test dynamic config
          command: |
            export CIRCLECI_CLI_TOKEN=${CIRCLE_TOKEN}
            export CIRCLECI_CLI_TIMEOUT=60s
            cd .circleci/dynamic
            bash test.sh
      - store_artifacts:
          path: /tmp/results

  download-wiz-terraform-provider-from-global:
    circleci_ip_ranges: true
    parameters:
      global_bucket_name:
        type: string
        default: terraform-server-global
      hash_version_file_path:
        type: string
        default: deployment/versions/wiz-terraform-provider.versions.yaml.gotmpl
      workspace_dir:
          type: string
          default: /tmp/terraform-provider
    working_directory: ~/project
    executor:
      name: ops
      ecr_url: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond # This job always run in prod context so we never use any other ecr URL
    steps:
      - checkout
      - run:
          name: Download provider folder from global s3
          command: |
            line=$(cat << parameters.hash_version_file_path >>)
            key=$(echo "${line}"| sed 's/: .*//')
            provider_hash=$(echo "${line}" | sed -e 's/.*: "\(.*\)"/\1/')
            provider_version_dir=$(aws s3 ls s3://<< parameters.global_bucket_name >>/$provider_hash | head -1 | sed 's/ *PRE //')
            echo "Provider hash to download: $provider_version_dir"
            aws s3 sync s3://<< parameters.global_bucket_name >>/$provider_version_dir "<< parameters.workspace_dir >>"
      - persist_to_workspace:
          root: << parameters.workspace_dir >>
          paths:
            - .

  wizcli_release_slack_notification:
    description: Send slack notification for WizCLI release
    executor: python-only
    working_directory: ~/project
    parameters:
      slack_channel:
        type: string
      wizcli_version:
        type: string
    steps:
      - checkout
      - run:
          name: Send slack notification for WizCLI release
          environment:
            SLACK_CHANNEL: << parameters.slack_channel >>
            WIZCLI_VERSION: << parameters.wizcli_version >>
          command: |
            pip3 install requests
            python3 .circleci/scripts/wizcli_slack_release.py

  upload-wiz-terraform-provider-to-env:
    circleci_ip_ranges: false
    executor:
      name: ops_runner
      runner: << parameters.runner >>
    parameters:
      env:
        type: string
      release_prefix:
        type: string
        default: release
      workspace_dir:
          type: string
          default: /tmp/terraform-provider
      cloud:
        type: string
        default: aws
      runner:
        type: string
        default: "dummy_runner"
    working_directory: ~/project
    steps:
      - checkout
      - attach_workspace:
          at: << parameters.workspace_dir >>
      - set-aws-creds-file:
          cloud: << parameters.cloud >>
      - run:
          name: Upload provider to s3
          command: |
            export WORKSPACE_DIR=<< parameters.workspace_dir >>
            export ENV_NAME=<< parameters.env >>
            export RELEASE_PREFIX=<< parameters.release_prefix >>
            bash .circleci/scripts/upload_tf_provider.sh
  backoffice-publish:
    executor: basic
    working_directory: ~/project
    parameters:
      env:
        type: string
      branch:
        type: string
      version-key:
        type: string
      target-branch-suffix:
        type: string
        default: ""
    steps:
      - wiztools/checkout_sparse:
          path: ~/project/ops
          checkout_paths: deployment/versions/backoffice-apps.yaml
      - add_ssh_keys:
          fingerprints:
            - '28:ad:88:26:ab:ea:18:57:c3:41:26:2c:75:b3:19:37'
      - run:
          name: Reset backoffice-apps branch
          command: |
            mkdir -pm0700 ~/.ssh
            ssh-keyscan github.com > ~/.ssh/known_hosts
            echo 'Host gitops
              Hostname github.com
              IdentityFile ~/.ssh/id_rsa_28ad8826abea1857c341262c75b31937
              IdentitiesOnly yes' > ~/.ssh/config

            branch_name="<< parameters.branch >><< parameters.target-branch-suffix >>"

            git clone -b ${branch_name} git@gitops:wiz-sec/backoffice-apps.git

            commit=$(grep "<< parameters.version-key >>" ops/deployment/versions/backoffice-apps.yaml | cut -d\" -f 2)

            cd backoffice-apps

            echo resetting branch ${branch_name} to commit ${commit}
            git reset --hard ${commit}
            git push --force

  validate-no-freeze:
    executor:
        name: ops_runner
        runner: << parameters.runner >>
    parameters:
      cluster_type:
        type: string
        default: wiz
      runner:
        type: string
        default: "dummy_runner"
      env:
        type: string
    steps:
      - wiztools/checkout_sparse:
          checkout_paths: '.circleci/scripts/validate_no_freeze.py tools/deploy-v2'
      - validate_no_freeze:
          cluster_type: << parameters.cluster_type >>
      - checkpoint:
          checkpoint: start
          env: << parameters.env >>
          status: ready
          cluster_type: << parameters.cluster_type >>

  merger-no-diverge:
    executor: python-only
    description: Performs a simple merge without merge-commit. Fails if dest branch diverged.
    parameters:
      source_ref:
        description: either branch name or commit sha
        type: string
      dest_branch_name:
        type: string
      slack_channel:
        type: string
        default: devops-alerts
    steps:
      - prepare_ops_repository:
          checkout_branch: << parameters.dest_branch_name >>
          target_folder: /tmp/ops
      - run:
          name: Merge << parameters.source_ref >> to << parameters.dest_branch_name >>
          command: |
            cd /tmp/ops
            if (git merge-base --is-ancestor HEAD << parameters.source_ref >> ); then
              git rebase << parameters.source_ref >>
              git push origin << parameters.dest_branch_name >>
            else
              echo "[WARN] Destination branch << parameters.dest_branch_name >> has diverged"
               # This will fail if dest branch diverged from source branch
               #   - To manually resolve it - perform reset --hard on destination branch
              exit -1
            fi

  # TODO - Delete this job. Seems like we don't call this job anywhere. For now I'm commenting it out...
  #build-and-push-image-acr:
  #  description: build docker image
  #  executor:
  #    name: << parameters.executor_name >>
  #  parameters:
  #    tags:
  #      type: string
  #    build_path:
  #      type: string
  #      description: path to directory with dockerfile
  #    acr_url:
  #      type: string
  #      default: $WIZIOPUBLIC_URL
  #    acr_username:
  #      type: string
  #      default: $WIZIOPUBLIC_SP_ID
  #    acr_password:
  #      type: string
  #      default: $WIZIOPUBLIC_SP_PASSWORD
  #    dockerfile:
  #      type: string
  #      default: Dockerfile
  #    image_name:
  #      type: string
  #      default: my_image
  #    executor_name:
  #      type: string
  #      default: python-only
  #    skip_wizcli_scan:
  #      type: boolean
  #      default: false
  #  steps:
  #    - checkout
  #    - when:
  #        condition:
  #          not:
  #            equal: [<<parameters.executor_name>>, 'ubuntu-arm']
  #        steps:
  #          - setup_remote_docker
  #    - run:
  #        name: build image << parameters.image_name >>
  #        command: |
  #          echo "<< parameters.acr_password >>" | docker login "<< parameters.acr_url >>" --username "<< parameters.acr_username >>" --password-stdin
  #          CACHE_IMAGE=<< parameters.acr_url >>/<< parameters.image_name >>:latest
  #          docker pull $CACHE_IMAGE || true
  #          cd << parameters.build_path >>
  #          find . -name "*Dockerfile*" -exec sed -i "s/CHANGE_ME_GIT_COMMIT/<<pipeline.git.revision>>/g" {} \;
  #          docker buildx build . \
  #                      --progress=plain \
  #                      --build-arg BUILDKIT_INLINE_CACHE=1 \
  #                      --cache-from $CACHE_IMAGE \
  #                      -t << parameters.image_name >>:<< pipeline.git.revision >> \
  #                      -f << parameters.dockerfile >>
  #    - when:
  #        condition:
  #          not:
  #            equal: [<<parameters.executor_name>>, 'ubuntu-arm']
  #        steps:
  #          - wizcli_run:
  #              wizcli_params: '--no-style --log=/tmp/scan.log docker scan --image << parameters.image_name >>:<< pipeline.git.revision >>  --policy "Wiz policy"'
  #              ignore_failures: <<parameters.skip_wizcli_scan>>
  #    - when:
  #        condition:
  #          equal: [ develop, << pipeline.git.branch >> ]
  #        steps:
  #          - push_to_acr:
  #              registry_url: << parameters.acr_url >>
  #              acr_username: << parameters.acr_username >>
  #              acr_password: << parameters.acr_password >>
  #              local_image: << parameters.image_name >>:<< pipeline.git.revision >>
  #              repository: << parameters.image_name >>
  #              tags: << parameters.tags >>
  #

  backup-grafana-alerts:
    executor:
      name: ops_runner
      runner: prod-tf
    description: exports all grafana alerts into ops/monitor
    environment:
      TF_VAR_account_id: "<< parameters.account_id >>"
    parameters:
      account_id:
        type: string
        default: "096476340703"
      checkout_branch:
        type: string
        default: main
      target_folder:
        type: string
        default: /tmp/ops-grafana
      region:
        type: string
        default: us-east-1
      cluster_name:
        type: string
        default: monitor-prod-us1
      cloud:
        type: string
        default: aws
      directory:
        type: string
        default: grafana
        description: The directory to export the dashboards and alerts into
      slack_channel:
        type: string
        default: alerts-devops
      grafana_url:
        type: string
        description: The URL of the grafana instance to connect to
      grafana_token_secret_name:
        type: string
        description: The secret name that holds the token for auth
        default: "prod/amg/grafana-backup-api-key"
    steps:
      - checkout
      - add_single_ssh_key:
          fingerprint: 'd0:b8:13:4c:bc:72:34:df:69:6d:08:18:dd:70:ed:d7'
          host: gitgrafana
      - run:
          name: git config - checkout etc..
          command: |
            git clone -b << parameters.checkout_branch >> git@gitgrafana:wiz-sec/monitor-backup.git  << parameters.target_folder >>
            cd << parameters.target_folder >>
            git config user.email "circleci@wiz.io"
            git config user.name "CircleCI"
      - set-aws-creds-tf
      - check_for_rerun_with_ssh
      - run:
          name: exports all grafana alerts
          environment:
            GRAFANA_PATH: << parameters.target_folder >>
            GRAFANA_URL: << parameters.grafana_url >>
            GRAFANA_TOKEN_SECRET_NAME: << parameters.grafana_token_secret_name >>
          command: |
            sleep 5
            # without sleep this step will fail instantly due to previous step background: true
            bash ~/project/monitor/scripts/clean.sh
            python3 ~/project/monitor/scripts/export_grafana.py --alerts --dashboards --directory << parameters.directory >>
      - run:
          name: git add, output diffs and push
          command: |
            cd << parameters.target_folder >>
            bash ~/project/monitor/scripts/monitor-backup.sh
      - wiz-slack/simple_notification:
          slack_channel: << parameters.slack_channel >>
          notify_on: fail
          enable_slack_mention: false
          title: "Grafana backup failed"
          content: |
            Grafana backup failed! Check it out in the CircleCI job :circleci:

  backup-datadog-dashboards:
    executor: ops
    description: exports all datadog dashboards
    parameters:
      checkout_branch:
        type: string
        default: main
      target_folder:
        type: string
        default: /tmp/monitor-backup
      slack_channel:
        type: string
        default: alerts-devops
    steps:
      - checkout
      - add_single_ssh_key:
          fingerprint: 'd0:b8:13:4c:bc:72:34:df:69:6d:08:18:dd:70:ed:d7'
          host: gitmonitor
      - run:
          name: git config - checkout etc..
          command: |
            git clone -b << parameters.checkout_branch >> git@gitmonitor:wiz-sec/monitor-backup.git  << parameters.target_folder >>
            cd << parameters.target_folder >>
            git config user.email "circleci@wiz.io"
            git config user.name "CircleCI"
      - wiztools/self_hosted_restore_cache:
          cache_title: go modules
          key1: dd-backup-go-mod-v1-{{checksum "monitor/scripts/Datadog/dashboards/backup/go.mod"}}
      - run:
          name: exports datadog dashboards
          environment:
              FOLDER_PATH: << parameters.target_folder >>/datadog
          command: |
            mkdir -p $FOLDER_PATH
            cd ~/project/monitor/scripts/Datadog/dashboards/backup
            export GOFLAGS=-mod=mod
            go run .
      - run:
          name: save to git
          command: |
            cd << parameters.target_folder >>/datadog
            git add .
            git diff --quiet && git diff --staged --quiet || git commit -a -m "[circleci] datadog dashboards backup"
            git push
      - wiztools/self_hosted_save_cache:
          cache_title: go modules
          key: dd-backup-go-mod-v1-{{ checksum "monitor/scripts/Datadog/dashboards/backup/go.mod"}}
          path1: /go/pkg/mod
      - wiz-slack/simple_notification:
          slack_channel: << parameters.slack_channel >>
          notify_on: fail
          enable_slack_mention: false
          title: "Datadog dashboard backup"
          content: |
            Datadog dashboard backup failed! Check it out in the CircleCI job :circleci:

  scan-vm:
    executor:
      runner: << parameters.runner >>
      name: python-only-runner
    description: triggers a scan on a single vm
    parameters:
      runner:
        type: string
        default: scan-vm
      env_name:
        type: string
        default: ""
      datacenter:
        type: string
        default: "none"
      tenant_id:
        type: string
        default: ""
      connector_id:
        type: string
        default: ""
      vm_id:
        type: string
        default: ""
      environment_name:
        type: string
        default: ""
      cloud:
        type: string
        default: aws
      sender:
        type: string
        default: ""
      slack_channel:
        type: string
        default: "vms-and-scans-trail"
    steps:
      - checkout
      - get_aws_cli
      - get_kubectl
      - set-aws-creds-file:
          cloud: << parameters.cloud >>
      - set_aws_iamuser_cred_from_context:
          prefix: "SCANVM_"
          profile_name: eks-access
      - set_kubeconfig:
          datacenter: << parameters.datacenter >>
          profile: eks-access
      - run:
          name: prep payload
          command: |
            echo '{"schedulingType":"OnDemand","tenantId": "<< parameters.tenant_id >>","connectorId": "<< parameters.connector_id >>" ,"byVMs":{"vmIds": [{"objectType": "CloudPlatform/VirtualMachine","externalID": { "externalID": "<< parameters.vm_id >>" }}]}}' > /tmp/payload.json
      - kubectl_exec:
          deployment: utils-ops
          cmd: /home/wiz/grpcurl -d "`cat /tmp/payload.json`" -plaintext diskanalyzer-coordinator.default.svc.cluster.local:3000 rpc.DiskAnalyzerCoordinator/TriggerScan
          result_path: /tmp/exec_result
      - wiz-slack/simple_notification:
          slack_channel: << parameters.slack_channel >>
          title: "CircleCI VM Scan was triggered by << parameters.sender >>"
          content: |
            Parameters used:
            > Environment: << parameters.environment_name >>
            > Datacenter: << parameters.datacenter >>
            > TenantID: << parameters.tenant_id >>
            > ConnectorID: << parameters.connector_id >>
            > MachineID: << parameters.vm_id >>
          slack_username: << parameters.sender >>
      - run:
          name: result
          command: |
            cat /tmp/exec_result | jq .
            scanId=$(cat /tmp/exec_result | jq '.scanId' --raw-output)
            echo "link to datadog: "
            echo "https://app.datadoghq.com/logs?query=@scanID:${scanId}"
            echo "triggered by << parameters.sender >>"

  reset-integration-envs:
    description: Resets integration envs in wiz and ops repos
    executor: ops
    parameters:
      slack_channel:
        type: string
        default: alerts-devops
    steps:
      - prepare_ops_repository:
          checkout_branch: << pipeline.parameters.integration_env >>
          target_folder: ops
      - run:
          name: Reset integration env in ops repo
          command: |
            cd ops
            git reset --hard origin/develop
            git commit --allow-empty -m "[RESET INTEGRATION BY BOT]" -m "--circle_set:force_lambdas_deployment --circle_set:terraform-aws-env --circle_set:terraform-aws-account --circle_set:terraform-aws-dc"
            git push -f origin << pipeline.parameters.integration_env >>
      # Note: We assume that we only want to reset ops repo at the time of writing
      #       this. If we will want to reset also wiz repo we can uncomment below.
      # - add_single_ssh_key:
      #     fingerprint: '47:7c:b1:ee:8c:86:a5:24:21:93:7c:6e:af:7e:0c:da'
      #     host: wiz
      # - run:
      #     name: Clone wiz repo
      #     command: |
      #       git clone -b << pipeline.parameters.integration_env >> git@wiz:wiz-sec/wiz.git wiz
      # - run:
      #     name: Reset integration env in wiz repo
      #     command: |
      #       cd wiz
      #       git reset --hard origin/develop
      #       git push -f origin << pipeline.parameters.integration_env >>
      - wiz-slack/simple_notification:
          slack_channel: << parameters.slack_channel >>
          notify_on: fail
          enable_slack_mention: false
          title: "Reset integration envs"
          ops_path: ops/
          content: |
            Reset integration envs failed! Check it out in the CircleCI job :circleci:

  dummy:
    executor: basic
    steps:
      - run: "echo dummy"

  notify:
    executor: python-only
    parameters:
      slack_channel:
        default: test-slack
        type: string
      notify_on:
        default: always
        type: string
      title:
        default: ""
        type: string
      content:
        default: ""
        type: string
      circle_link:
        default: "${CIRCLE_BUILD_URL}"
        type: string
    steps:
      - checkout
      - wiz-slack/simple_notification:
          slack_channel: << parameters.slack_channel >>
          notify_on: << parameters.notify_on >>
          enable_slack_mention: false
          title: << parameters.title >>
          circle_link: << parameters.circle_link >>
          content: |
            << parameters.content >>

  purge_sqs:
    environment:
      TF_VAR_account_id: "<< parameters.account_id >>"
    executor:
      name: ops-python-only-runner
      runner: << parameters.runner >>
    parameters:
      env_name:
        type: string
      dc_name:
        type: string
      dc_region:
        type: string
      dcs:
        type: string
      ignore_queues:
        type: string
        default: dummy-queue1,dummy-queue2
      queues:
        type: string
        default: "x"
      dry_run:
        type: boolean
        default: true
      runner:
        type: string
        default: "dummy_runner"
      account_id:
        type: string
    steps:
      - checkout
      - set-aws-creds-tf
      - run: pip3 install boto3
      - run:
          name: purge DLQS in << parameters.dc_name >>
          environment:
            queues: << parameters.queues >>
            ignore_queues: << parameters.ignore_queues >>
            dc_name: << parameters.dc_name >>
            AWS_REGION: << parameters.dc_region >>
            AWS_PROFILE: "be"
            env_name: << parameters.env_name >>
            dry_run: << parameters.dry_run >>
          command: python3 tools/scripts/sqs/purge.py

  backup_cluster_states:
    executor:
      name: ops_runner
      runner: test-tf
    parameters:
      fingerprint_cluster_states_argocd:
        type: string
        default: 'cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d'
      must:
        type: string
        default: "stam"
    steps:
      - checkout
      - add_single_ssh_key:
          fingerprint: << parameters.fingerprint_cluster_states_argocd >>
          host: cluster_states_argocd
      - run:
          name: Backup cluster states
          command: tools/scripts/backup_cluster_states.sh
      - check_for_rerun_with_ssh


  reset_cluster_states:
    executor:
      name: ops-python-only-runner
      runner: << parameters.runner >>
    parameters:
      branch_name:
        type: string
      dry_run:
        type: boolean
        default: true
      runner:
        type: string
        default: "dummy_runner"
      fingerprint_cluster_states_argocd:
        type: string
        default: 'cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d'
    steps:
      - checkout
      - add_single_ssh_key:
          fingerprint: << parameters.fingerprint_cluster_states_argocd >>
          host: cluster_states_argocd
      - run:
          name: Reset cluster states in in << parameters.branch_name >>
          environment:
            BRANCH: << parameters.branch_name >>
            DRY_RUN: << parameters.dry_run >>
          command: tools/scripts/reset_cluster_states.sh 7 << parameters.branch_name >>

  karpenter_nodes_rollout:
    executor:
      name: ops_runner
      runner: << parameters.runner >>
    parameters:
      env_name:
        type: string
      dc_name:
        type: string
      dc_region:
        type: string
      dcs:
        type: string
      dry_run:
        type: boolean
        default: true
      node_type_exclude:
        type: string
        default: infra-ng
      runner:
        type: string
        default: "dummy_runner"
    steps:
      - checkout
      - set-aws-creds-file
      - run:
          name: Starting karpenter nodes rollout for << parameters.dc_name >>
          environment:
            dc_name: << parameters.dc_name >>
            AWS_REGION: << parameters.dc_region >>
            env_name: << parameters.env_name >>
            dry_run: << parameters.dry_run >>
            NODE_TYPE_EXCLUDE: << parameters.node_type_exclude >>
          command: |
           export AWS_PAGER=""
           chmod +x ./tools/scripts/update-eks-ami-karpenter/node-rollout-karpenter.sh
           ./tools/scripts/update-eks-ami-karpenter/node-rollout-karpenter.sh

  karpenter_ami_update:
    circleci_ip_ranges: false
    executor:
      name: ops_runner
      runner: << parameters.runner >>
      ecr_url: << parameters.ecr_url >>
    environment:
      TF_VAR_account_id: "<< parameters.account_id >>"
    parameters:
      cluster_name:
        type: string
      ecr_url:
        type: string
      dry_run:
        type: boolean
        default: true
      runner:
        type: string
        default: "dummy_runner"
      account_id:
        type: string
      cluster_type:
        type: string
        default: "wiz"
      profile:
        type: string
        default: "be"
    working_directory: ~/project
    steps:
      - prepare_ops_repository:
          checkout_branch: << pipeline.git.branch >>
          target_folder: "."
      - set-aws-creds-tf:
          cluster_type: << parameters.cluster_type >>
      - check_for_rerun_with_ssh
      - run:
          name: run karpenter ami nodes update
          environment:
            cluster_name: << parameters.cluster_name >>
            dry_run: << parameters.dry_run >>
          no_output_timeout: 15m
          command: |
            export profile=<< parameters.profile >>
            chmod +x ./tools/scripts/update-eks-ami-karpenter/node-ami-update.sh
            ./tools/scripts/update-eks-ami-karpenter/node-ami-update.sh

  run_forker:
    executor:
      name: python-only-runner
      runner: << parameters.runner >>
    description: run forker
    parameters:
      dry_run:
        type: boolean
        default: true
      runner:
        type: string
        default: "ops-test-deployment"
    steps:
      - checkout
      - cached_pip_install:
          relative_path: tools/forker
      - run:
          name: export github token to env variable
          command: |
            echo "export GITHUB_APP_TOKEN=\"${TF_VAR_GITHUB_MISC_TF_DEPLOY_KEYS_TOKEN}\"" >> $BASH_ENV
      - run:
          name: 🔱 run forker
          command: |
            mkdir -pm0700 ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            cd tools/forker
            python3 forker.py --github_token_env=GITHUB_APP_TOKEN --dry_run=<< parameters.dry_run >>
      - check_for_rerun_with_ssh

  check-env-config-format:
    executor:
      name: python-only-runner
      runner: << parameters.runner >>
    parameters:
      env:
        type: string
        default: all
      runner:
        type: string
        default: wiz-test-1-deployment
    steps:
      - checkout
      - clone_circleci_wiztools
      - wiztools/set_wiz_cache
      - check_for_rerun_with_ssh
      - yaml_fmt_env_config:
          env: << parameters.env >>
          relative_path: ~/project/tools/scripts/devops-tools

  rotate-amg-api-key:
    executor:
      name: python-only-runner
      runner: << parameters.runner >>
    parameters:
      region:
        type: string
      secret_name:
        type: string
      workspaceid:
        type: string
      runner:
        type: string
      api_key_name:
        type: string
      key_role:
        type: string
        default: "VIEWER"
    steps:
      - checkout
      - set-aws-creds-file:
          cloud: aws
      - check_for_rerun_with_ssh
      - run_python_script:
          relative_path: tools/scripts/amazon-managed-grafana
          pip_requirement: true
          script_name: "api-key-rotate.py"
          script_args: "--region << parameters.region >> --secret-name << parameters.secret_name >> --workspaceid << parameters.workspaceid >> --api-key-name << parameters.api_key_name >> --api-key-role << parameters.key_role >>"

  block_workflow_runner:
    parameters:
      timeout_minutes:
        type: string
        default: "10"
        description: "How many minutes to wait before giving up."
      only-on-branch:
        type: string
        default: "*"
        description: "Only queue on specified branch"
      queue_only_older_workflows:
        type: boolean
        default: false
        description: "Queue only pipelines older than the one running now"
      runner:
        type: string
    executor:
      name: python-only-runner
      runner: << parameters.runner >>
    steps:
      - queue/until_front_of_line:
          timeout_minutes: <<parameters.timeout_minutes >>
          only-on-branch: <<parameters.only-on-branch>>
          queue_only_older_workflows: <<parameters.queue_only_older_workflows>>



  deploy-help:
    parallelism: 1
    environment:
      TF_VAR_account_id: "<< parameters.account_id >>"
    circleci_ip_ranges: false
    executor:
      name: ops_runner
      runner: << parameters.runner >>
      ecr_url: << parameters.ecr_url >>
    working_directory: ~/project
    parameters:
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      cluster_name:
        type: string
        default: test-eu1
      cluster_type:
        type: string
        default: wiz
      cloud:
        type: string
        default: aws
      region:
        type: string
      runner:
        type: string
        default: "dummy_runner"
      service_list:
        type: string
      use_cluster_type:
        type: boolean
        default: false
      account_id:
        type: string
      profile:
        type: string
        default: "be"
      action:
        type: string
        default: "sync"
      dry_run:
        type: boolean
        default: true
    steps:
      - init_checker_workspace:
          cluster_name: << parameters.cluster_name >>
          cloud: << parameters.cloud >>
          cluster_type: << parameters.cluster_type >>
          region: << parameters.region >>
          use_cluster_type: << parameters.use_cluster_type >>
          profile: << parameters.profile >>
      - deploy_helper:
          cluster_name: << parameters.cluster_name >>
          cluster_type: << parameters.cluster_type >>
          action: << parameters.action >>
          service_list: << parameters.service_list >>
          dry_run: << parameters.dry_run >>

  pagerduty_stats:
    executor:
      name: ops_runner
      runner: << parameters.runner >>
    parameters:
      teams_ids:
        type: string
      days:
        type: integer
        default: 1
      runner:
        type: string
        default: "dummy_runner"
      team_name:
        type: string
        default: "DevOps"
      slack_channel:
        type: string
        default: "pagerduty-stats-reports"
    steps:
      - checkout
      - run:
          name: PagerDuty stats
          environment:
            DAYS: << parameters.days >>
            TEAMS_IDS: << parameters.teams_ids >>
          command: |
            mkdir -p /tmp/report
            python3 ~/project/tools/pagerduty-stats/pagerduty-stats.py
      - store_artifacts:
          path: /tmp/report
          destination: tmp/report
      - wiz-slack/simple_notification:
          slack_channel: << parameters.slack_channel >>
          title: "*<< parameters.team_name >> - PagerDuty Stats report is ready*"
          content: |
            Report is ready:
            > Team: << parameters.team_name >>
            > Days: << parameters.days >>
          artifacts_buttons_json: |
            [{"button_text":":page_with_curl: Report","artifact_path":"0/tmp/report/report.html"}]

  notify-upcoming-integration-env-resets:
    executor:
      name: ops_runner
      runner: integration-tf
    steps:
      - wiztools/checkout_sparse:
          checkout_paths: '.circleci/scripts/**'
      - run:
          name: Install Dependencies
          command: |
            pip3 install boto3 requests
      - run:
          name: Run Integration Reset Notification
          command: |
            cd .circleci/scripts
            python integration_auto_reset.py --notify
      - wiz-slack/simple_notification:
          slack_channel: integration
          notify_on: fail
          title: "Integration Environment Reset Notification Failed"
          content: "Failed to generate integration environment reset notification"

  auto-reset-integration-envs:
    executor:
      name: ops_runner
      runner: integration-tf
    steps:
      - wiztools/checkout_sparse:
          checkout_paths: '.circleci/scripts/**'
      - run:
          name: Install Dependencies
          command: |
            pip3 install boto3 requests
      - run:
          name: Reset Integration Environments
          command: |
            cd .circleci/scripts
            python integration_auto_reset.py
      - wiz-slack/simple_notification:
          slack_channel: integration
          notify_on: fail
          title: "Integration Environment Reset Failed"
          content: "Failed to reset integration environments"

  download-wiz-cli-gpg:
    executor:
      name: ops_runner
      runner: << parameters.runner >>
    working_directory: ~/project
    parameters:
      runner:
          type: string
          default: << parameters.runner >>
    steps:
      - checkout:
          path: ~/project
      - wizcli_gpg_download
  sync-ops-image-version:
    executor: 
      name: python-only-runner
      runner: << parameters.runner >>
    parameters:
      runner:
        type: string
      slack_channel:
        type: string
        default: test-ami-updates
      dry_run:
        type: boolean
        default: false
    steps:
      - checkout
      - run:
          environment:
            DRY_RUN: << parameters.dry_run >>
          name: "Sync ops image version"
          command: |
            root_path=$(git rev-parse --show-toplevel)
            cd $root_path
            bash tools/ami-bakery/scripts/sync_ops_image_version.sh
      - when:
          condition:
            not: << parameters.dry_run >>
          steps:
            - wiz-slack/simple_notification:
                slack_channel: << parameters.slack_channel >>
                notify_on: success
                enable_slack_mention: false
                title: "New Ops image version sync"
                content: |
                  :github-merged: New Ops image version sync was successful.
            - wiz-slack/simple_notification:
                slack_channel: << parameters.slack_channel >>
                notify_on: fail
                enable_slack_mention: true
                title: "New Ops image version sync"
                content: |
                  :github-denied: New Ops image version sync has failed.
  bake-ami:
    executor: 
      name: python-only-runner
      runner: << parameters.runner >>
    parameters: 
      ami_name:
        type: string
      file:
        type: string
      image_type:
        type: string
        default: commercial
      image_directory:
        type: string
      extra_vars:
        type: string
      aws_region:
        type: string
        default: us-gov-west-1
      runner:
        type: string
      aws_partition:
        type: string
        default: gov
      slack_channel:
        type: string
        default: test-ami-updates
      dry_run:
        type: boolean
        default: false
      save_ami_id_to_workspace:
        type: boolean
        default: false
    steps:
      - checkout
      - get_aws_cli
      - get_packer
      - run:
          name: Set AWS credentials for Packer
          command: |
            if [ << parameters.aws_partition >> == "gov" ]; then
              echo 'export AWS_ACCESS_KEY_ID=${GOV_AMIS_CTX_AWS_ACCESS_KEY_ID}' >> $BASH_ENV
              echo 'export AWS_SECRET_ACCESS_KEY=${GOV_AMIS_CTX_AWS_SECRET_ACCESS_KEY}' >> $BASH_ENV
            else
              echo 'export AWS_ACCESS_KEY_ID=${COMMERCIAL_AMIS_CTX_AWS_ACCESS_KEY_ID}' >> $BASH_ENV
              echo 'export AWS_SECRET_ACCESS_KEY=${COMMERCIAL_AMIS_CTX_AWS_SECRET_ACCESS_KEY}' >> $BASH_ENV
            fi
            echo 'export AWS_DEFAULT_REGION=<< parameters.aws_region >>' >> $BASH_ENV
            echo 'export AWS_REGION=<< parameters.aws_region >>' >> $BASH_ENV
      - run:
          name: "create images/ versions file"
          command: |
            root_path=$(git rev-parse --show-toplevel)
            cd $root_path/tools/ami-bakery/scripts
            pip3 install -r image_versions_reqs.txt
            python3 image_versions.py -p $root_path -t << parameters.image_type >> > /tmp/image_versions.yaml
            cat /tmp/image_versions.yaml
      - bake:
          step_name: 🧾 bakery validate
          ami_name: << parameters.ami_name >>
          file: << parameters.file >>
          extra_vars: << parameters.extra_vars >>
          command: validate
          image_directory: << parameters.image_directory >>
      - when:
          condition:
            and:
              - not:
                  equal: [ << parameters.image_directory >> , fips ]
          steps:
            - run:
                name: "Check if kubernetes_version exists in eks_extended_info_aws.yaml"
                command: |
                  root_path=$(git rev-parse --show-toplevel)
                  cd $root_path/tools/scripts/update-eks-ami
                  kubernetes_version=$(echo << parameters.extra_vars >> | sed -n 's/.*kubernetes_version=\([0-9.]*\).*/\1/p' | tr '.' '_')
                  yq -e '.addons.'$kubernetes_version eks_extended_info_aws.yaml || { echo "eks_extended_info_aws.yaml does not contain $kubernetes_version version"; circleci-agent step halt; exit 0; }
      - when:
          condition: << parameters.dry_run >>
          steps:
            - bake:
                step_name: 🥮 bakery build with skip_create_ami
                ami_name: << parameters.ami_name >>
                file: << parameters.file >>
                extra_vars: << parameters.extra_vars >>
                command: build
                image_directory: << parameters.image_directory >>
      - when:
          condition:
            not: << parameters.dry_run >>
          steps:
            - bake:
                step_name: 🥮 bakery build
                ami_name: << parameters.ami_name >>
                file: << parameters.file >>
                extra_vars: << parameters.extra_vars >>
                command: build
                image_directory: << parameters.image_directory >>
            - run:
                name : "Set AMI ID and Subscription ID for WizCLI scan"
                command: |
                  echo "export AMI_ID=\$(jq -r '.builds[0].artifact_id | split(\",\")[] | select(startswith(\"$AWS_REGION\")) | split(\":\")[1]' /tmp/manifest.json)" >> $BASH_ENV
                  if [ << parameters.aws_partition >> == "gov" ]; then
                    echo 'export AMI_SUBSCRIPTION_ID=623053250147' >> $BASH_ENV
                    echo 'export CONNECTOR_NAME=AWS-Gov-Organization' >> $BASH_ENV
                  else
                    echo 'export AMI_SUBSCRIPTION_ID=609594173164' >> $BASH_ENV
                    echo 'export CONNECTOR_NAME=AWS-Prod-Organization' >> $BASH_ENV
                  fi
            - wizcli_run:
                wizcli_params: '--no-style vm-image scan --id $AMI_ID --region << parameters.aws_region >> --subscriptionId $AMI_SUBSCRIPTION_ID --connectorName $CONNECTOR_NAME'
                ignore_failures: true # switch to false after testing
            - check_for_rerun_with_ssh
            - wiz-slack/simple_notification:
                slack_channel: << parameters.slack_channel >>
                notify_on: success
                enable_slack_mention: false
                title: "New AMI built for << parameters.ami_name >>"
                content: |
                  :ec2_ami: New AMIs built. Please check CircleCI logs for AMI IDs.
            - wiz-slack/simple_notification:
                slack_channel: << parameters.slack_channel >>
                notify_on: fail
                enable_slack_mention: true
                title: "AMI << parameters.ami_name >> failed to build"
                content: |
                  :ec2_ami: AMI failed to build.
      - when:
          condition:
            and:
              - << parameters.save_ami_id_to_workspace >>
              - not: << parameters.dry_run >>
          steps:
            - run:
                name: "Save AMI ID to workspace"
                command: |
                  mkdir -p /tmp/workspace
                  if [ -z "${AMI_ID}" ]; then
                    echo "AMI_ID is empty. Exiting..."
                    exit 1
                  fi
                  echo "${AMI_ID}" > /tmp/workspace/${CIRCLE_WORKFLOW_ID}-<< parameters.ami_name >>.txt
            - persist_to_workspace:
                root: /tmp/workspace
                paths:
                    - "**"

  wait-for-jobs-and-update-yaml:
    executor:
      name: ops_runner
      runner: << parameters.runner >>
    working_directory: ~/project
    parameters:
      runner:
        type: string
        default: << parameters.runner >>
      yaml_file_to_update:
        type: string
        default: ""
      nested_key_to_search:
        type: string
        default: ""
      value_to_replace:
        type: string
        default: ""
      push_changes:
        type: boolean
        default: false
      branch_to_push_changes:
          type: string
          default: "develop"
    steps:
      - checkout:
          path: ~/project
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: get values from workspace
          command: |
            VALUE_TO_REPLACE=`cat /tmp/workspace/*${CIRCLE_WORKFLOW_ID}* | tr '\n' ',' | sed '$ s/.$//'`
            echo "export VALUE_TO_REPLACE=$VALUE_TO_REPLACE" >> $BASH_ENV
      - get_or_update_yaml:
          yaml_file_to_update: << parameters.yaml_file_to_update >>
          nested_key_to_search: << parameters.nested_key_to_search >>
          value_to_replace: $VALUE_TO_REPLACE
      - when:
          condition: << parameters.push_changes >>
          steps:
            - run:
                name: "Push changes to << parameters.yaml_file_to_update >>"
                command: |
                  git config user.email "circleci@wiz.io"
                  git config user.name "CircleCI"
                  git diff << parameters.yaml_file_to_update >>
                  git add << parameters.yaml_file_to_update >>
                  git commit -m "update ami yaml using workflow https://app.circleci.com/pipelines/workflows/$CIRCLE_WORKFLOW_ID"
                  git push --set-upstream origin << parameters.branch_to_push_changes >>


  aws-custom-ami:
    circleci_ip_ranges: true
    parameters:
      vpc_id:
        type: string
        default: vpc-07a70cc3285f1be5f
      subnet_id:
        type: string
        default: subnet-03d1dbe6913ac98df
      security_group_id:
        type: string
        default: sg-0283fabaa674a205c
      aws_region:
        type: string
        default: us-gov-west-1
      k8s_version:
        type: string
        default: "1.21"
      is_gpu: 
        type: string
        default: "0"
      is_arm64: 
        type: string
        default: "0"
      executor_name:
        type: string
        default: python-only
      cloud:
        type: string
        default: aws-gov
      public_visible:
        type: boolean
        default: false
    executor: << parameters.executor_name >>
    steps:
      - checkout:
          path: ~/project
      - add_single_ssh_key:
          fingerprint: '08:96:7b:fc:6b:e1:72:c7:57:43:0c:9a:bc:18:05:94'
          host: 'custom-amis'
      - get_aws_cli
      - get_packer
      - run:
          name: Set AWS credentials for Packer
          command: |
            if [ << parameters.cloud >> == "aws-gov" ] || [ << parameters.cloud >> == "gov" ]; then
              echo 'export AWS_ACCESS_KEY_ID=${GOV_AMIS_CTX_AWS_ACCESS_KEY_ID}' >> $BASH_ENV
              echo 'export AWS_SECRET_ACCESS_KEY=${GOV_AMIS_CTX_AWS_SECRET_ACCESS_KEY}' >> $BASH_ENV
              echo 'export AWS_DEFAULT_REGION=<< parameters.aws_region >>' >> $BASH_ENV
            else
              echo 'export AWS_ACCESS_KEY_ID=${COMMERCIAL_AMIS_CTX_AWS_ACCESS_KEY_ID}' >> $BASH_ENV
              echo 'export AWS_SECRET_ACCESS_KEY=${COMMERCIAL_AMIS_CTX_AWS_SECRET_ACCESS_KEY}' >> $BASH_ENV
              echo 'export AWS_DEFAULT_REGION=<< parameters.aws_region >>' >> $BASH_ENV
            fi
      - run:
          environment:
            K8S_VERSION: << parameters.k8s_version >>
            AWS_REGION: << parameters.aws_region >>
            SUBNET_ID: << parameters.subnet_id >>
            VPC_ID: << parameters.vpc_id >>
            SECURITY_GROUP_ID: << parameters.security_group_id >>
            is_gpu: << parameters.is_gpu >>
            is_arm64: << parameters.is_arm64 >>
            PUBLIC_VISIBLE: << parameters.public_visible >>
          name: Build AMI if newer version of base image.
          command: |
            echo "building AMI"
            bash ~/project/.circleci/scripts/build_ami.sh
  ####################################
  ### Create bootstrap-rde machine ###
  ####################################
  create-bootstrap-rde-machine:
    parameters:    
      rde_name:
        type: string
        default: bootstrap-rde-001
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
    working_directory: ~/project
    executor:
      name: ops_runner
      runner: bootstrap-rde
    steps:
      - checkout
      - run:
          name: terraform workspace select
          environment:
            username: << parameters.rde_name >> 
          command: |
            cd terraform/rde
            terraform init
            terraform workspace select << parameters.rde_name >> || terraform workspace new << parameters.rde_name >>
      - run:
          name: terraform destroy
          command: |
            cd ~/project/terraform/rde
            terraform destroy -var="name=<< parameters.rde_name >>" -var="user_email=david.vashdi@wiz.io" -auto-approve 
      - run:
          name: terraform plan - from new image
          environment:
            username: << parameters.rde_name >> 
          command: |
            cd terraform/rde
            terraform plan -var="name=<< parameters.rde_name >>" -var="user_email=david.vashdi@wiz.io" -input=false -out=tfplan
      - run:
          name: terraform apply - from new image
          command: |
            cd terraform/rde
            terraform apply tfplan
      - run:
          name: add-tags exclude_from_automated_shut_down
          command: |
            instance_id=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=<< parameters.rde_name>>-rde" --query "Reservations[*].Instances[*].InstanceId" --output text)
            aws --region eu-north-1 ec2 create-tags --resources $instance_id --tags Key=exclude_from_automated_shut_down,Value=true
      
  #####################################
  ### Destroy bootstrap-rde machine ###
  #####################################
  destroy-bootstrap-rde-machine:
    parameters:    
      rde_name:
        type: string
        default: bootstrap-rde-001
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
    working_directory: ~/project
    executor:
      name: ops_runner
      runner: bootstrap-rde
    steps:
      - checkout
      - run:
          name: terraform workspace select
          environment:
            username: << parameters.rde_name >> 
          command: |
            cd terraform/rde
            terraform init
            terraform workspace select << parameters.rde_name >> || terraform workspace new << parameters.rde_name >>
      - run:
          name: terraform destroy
          command: |
            cd ~/project/terraform/rde
            terraform destroy -var="name=<< parameters.rde_name >>" -var="user_email=david.vashdi@wiz.io" -auto-approve 

  ##########################
  ### Test bootstrap-rde ###
  ##########################
  test-bootstrap-rde:
    parameters:
      slack_channel:
        type: string
        default: rde-bootstrap
      rde_name:
        type: string
        default: bootstrap-rde-001
      wiz_branch:
        type: string
        default: develop
      ops_branch:
        type: string
        default: develop
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond    
      timeout_minutes:
        type: string
        default: "10"
        description: "How many minutes to wait before giving up."
      timeout_action:
        type: enum
        default: "fail"
        enum: ["fail", "cancel"]
        description: "Action to take on timeout: fail (default) or cancel workflows"
      only-on-branch:
        type: string
        default: "*"
        description: "Only queue on specified branch"
      queue_only_older_workflows:
        type: boolean
        default: false
        description: "Queue only pipelines older than the one running now"
    working_directory: ~/project
    executor:
      name: ops_runner
      runner: bootstrap-rde
    steps:
      - queue/until_front_of_line:
          timeout_minutes: <<parameters.timeout_minutes >>
          timeout_action: <<parameters.timeout_action>>
          only-on-branch: <<parameters.only-on-branch>>
          queue_only_older_workflows: <<parameters.queue_only_older_workflows>>
      - checkout
      - configure-rde:
          task: init
          username: << parameters.rde_name >>
      - configure-rde:
          task: gitpat
          username: << parameters.rde_name >>
      - configure-rde:
          task: pull_branches_bootstrap
          wiz_branch: << parameters.wiz_branch >>
          ops_branch: << parameters.ops_branch >>
          username: << parameters.rde_name >>
      - configure-rde:
          task: checkout_repo
          repo_name: ops
          repo_commit: << pipeline.git.revision >>
          username: << parameters.rde_name >>
      - configure-rde:
          task: wzupdate
          username: << parameters.rde_name >>
      - configure-rde:
          task: bootstrap
          username: << parameters.rde_name >>
      - configure-rde:
          task: checkout_repo
          repo_name: ops
          repo_commit: develop
          username: << parameters.rde_name >>
      - prepare_ops_repository:
          checkout_branch:  develop
          target_folder: ~/wiz-sec/ops-for-rde
      - run:
          name: update RDE branch
          command: |
            cd ~/wiz-sec/ops-for-rde
            git checkout rde-bootstrap
            git merge << pipeline.git.revision >>
            git push
      - run:
          name: cleanup_bootstrap
          environment:
            username: << parameters.rde_name >>
          command: |
            bash ~/project/.circleci/scripts/configure-rde.sh cleanup_bootstrap 
          when: always
      - wiz-slack/simple_notification:
          slack_channel: << parameters.slack_channel >>
          notify_on: fail
          enable_slack_mention: false
          title: "Test RDE bootstrap"
          content: |
            Test RDE bootstrap failed! Check it out in the CircleCI job :circleci: \n run the following command to connect to the machine, (make sure you run gimme-aws-creds -p rde): \n  \`rdename=bootstrap-rde-001; rm -rf ~/\$rdename-template.ssh ; aws secretsmanager get-secret-value --secret-id \$rdename-rde-private-key --profile rde --region eu-north-1 | jq -r .SecretString > ~/\$rdename-template.ssh  ; chmod 400 ~/\$rdename-template.ssh ; ssh -i ~/\$rdename-template.ssh ubuntu@\$rdename.rde.wiz.io;\`
  terraform-cd-engine:
    executor:
      name: ops_runner
      ecr_url: << parameters.ecr_url >>
      runner: << parameters.runner >>
    parameters:
      executor:
        type: string
        default: ops
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      runner:
        type: string
      cluster:
        type: string
        default: us2
      lock_state:
        type: string
        default: "true"
    steps:
      - run: 
          name: Checkout Shallow
          command: |
            /local-orbs/checkout_shallow.sh
      - set-aws-creds-file:
          cloud: cd-fedtest
      - check_for_rerun_with_ssh
      - run: 
          name: Terraform plan
          no_output_timeout: 30m
          command: |
            ./terraform/cd-engine/plan.sh fedtest << parameters.cluster >>
          environment:
            LOCK_STATE: << parameters.lock_state >>

  db-patch-job:
    executor:
      name: ops_runner
      runner: << parameters.runner >>
      ecr_url: << parameters.ecr_url >>
    description: run db patch 
    environment:
      TF_VAR_account_id: "<< parameters.account_id >>"
    parameters:
      datacenter:
        type: string
      command:
        type: string
      cloud:
        type: string
        default: aws
      runner:
        type: string
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      account_id:
        type: string
      cluster_type:
        type: string
        default: "wiz"
      profile:
        type: string
        default: be
    steps:
      - checkout
      - get_aws_cli
      - set-aws-creds-tf:
          cluster_type: << parameters.cluster_type >>
      - run:
          name: check for rerun with ssh
          no_output_timeout: 121m
          command: bash $(git rev-parse --show-toplevel)/.circleci/scripts/check_ssh.sh
      - run:
          name: install requierments
          command: |
            cd $(git rev-parse --show-toplevel)/tools/db-patch
            pip install -r requirements.txt
      - run:
          name: run patch.py  << parameters.command >>
          no_output_timeout: 120m
          command: |
            cluster_name=$(echo <<parameters.datacenter >> | awk -F "-" '{print $1"-"$2}')
            DC_REGION=$(cat $(git rev-parse --show-toplevel)/deployment/common/values/dc-region-mapping.yaml | grep " $cluster_name:" -m1 | awk '{print $2}')
            cd $(git rev-parse --show-toplevel)/tools/db-patch
            << parameters.command >> --region $DC_REGION --profile << parameters.profile >>
      - wiz-slack/simple_notification:
          slack_channel: db-maintenance
          notify_on: fail
          enable_slack_mention: false
          title: "db-patch failed in << parameters.datacenter >>"
          content: |
            @oncalldevops \n db-patch failed for << parameters.datacenter >>

  db-patch-delete-snapshot-job:
    executor:
      name: ops_runner
      runner: << parameters.runner >>
      ecr_url: << parameters.ecr_url >>
    description: run db patch 
    environment:
      TF_VAR_account_id: "<< parameters.account_id >>"
    parameters:
      datacenter:
        type: string
      command:
        type: string
      cloud:
        type: string
        default: aws
      runner:
        type: string
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      region:
        type: string
        default: "commercial"
      env:
        type: string
        default: "test"
      account_id:
        type: string
      cluster_type:
        type: string
        default: "wiz"
      profile:
        type: string
        default: be
    steps:
      - checkout
      - get_aws_cli
      - set-aws-creds-tf:
          cluster_type: << parameters.cluster_type >>
      - run:
          name: check for rerun with ssh
          no_output_timeout: 121m
          command: bash $(git rev-parse --show-toplevel)/.circleci/scripts/check_ssh.sh
      - run:
          name: install requierments
          no_output_timeout: 120m
          command: |
            cd $(git rev-parse --show-toplevel)/tools/db-patch
            pip install -r requirements.txt
      - run:
          name: run patch.py  << parameters.command >>
          no_output_timeout: 120m
          command: |
            ENV=$(echo << parameters.datacenter >> | awk -F "-" '{print $1}')
            if [[ << parameters.env >> == "gov" ]] ; then
              ALL_REGIONS="us-gov-west-1 us-gov-east-1"
            else
              ALL_REGIONS=$(cat $(git rev-parse --show-toplevel)/deployment/common/values/dc-region-mapping.yaml  | yq '.wiz' |  grep $ENV  | sort -k 2 -u | grep -v gov | awk '{print $2}')
            fi
            cd $(git rev-parse --show-toplevel)/tools/db-patch
            for DC_REGION in $ALL_REGIONS ; do
              << parameters.command >> --region $DC_REGION --profile << parameters.profile >>
            done
      - wiz-slack/simple_notification:
          slack_channel: db-maintenance
          notify_on: fail
          enable_slack_mention: false
          title: "db-patch-snapshot-deletion failed in << parameters.datacenter >>"
          content: |
            @oncalldevops \n db-patch-snapshot-deletion failed for << parameters.datacenter >>


  update-db-patch-version-in-env-config:
    executor:
      name: ops_runner
      runner: << parameters.runner >>
      ecr_url: << parameters.ecr_url >>
    description: run db patch update 
    parameters:
      datacenter:
        type: string
      env:
        type: string
      cloud:
        type: string
        default: aws
      patch_version:
        type: string
      db_type:
        type: string
      runner:
        type: string
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
    steps:
      - prepare_ops_repository:
          checkout_branch: << pipeline.git.branch >> #will be develop
          target_folder: "."
      - get_aws_cli
      - run:
          name: check for rerun with ssh
          no_output_timeout: 121m
          command: bash $(git rev-parse --show-toplevel)/.circleci/scripts/check_ssh.sh
      - run_python_script:
          relative_path: tools/db-patch
          pip_requirement: true
          script_name: "updateEnvConfig.py"
          script_args: "--datacenter << parameters.datacenter >> --patch-version << parameters.patch_version >> --db-type << parameters.db_type >>"
      - run:
          name: push changes to back to git
          command: |
            git config user.email "circleci@wiz.io"
            git config user.name "CircleCI"
            num_of_git_changes=$(git status --porcelain=v1 2>/dev/null | wc -l)
            if [[ $num_of_git_changes == "0" ]] ; then 
              echo no need to commit
            else
              current_date=$(date +'%d-%m-%Y')
              echo need to commit changes
              git status
              git checkout -b devops/WZ-15713/db-patch-<< parameters.datacenter >>-<< parameters.patch_version >>--<<pipeline.git.revision>>
              git add terraform/modules/env_config/<< parameters.env >>.yaml
              git commit -m "[skip ci] modify db patch version in env-config for << parameters.datacenter >> to << parameters.patch_version >>"
              git push --set-upstream origin devops/WZ-15713/db-patch-<< parameters.datacenter >>-<< parameters.patch_version >>--<<pipeline.git.revision>>
            fi 
      - create_pr_from_branch:
          feature_branch: devops/WZ-15713/db-patch-<< parameters.datacenter >>-<< parameters.patch_version >>--<<pipeline.git.revision>>
          base_branch: develop
          title: "devops/WZ-15713/db-patch - << parameters.datacenter >>-<< parameters.patch_version >> -"
          body: "This PR was created by circleci for db-maintenance"
          repo: ops
          label: dbpatch
      - slack/notify:
            channel: db-maintenance
            custom: |
              {
                "blocks": [
                  {
                    "type": "header",
                    "text": {
                      "type": "plain_text",
                      "text": "db-maintenance",
                      "emoji": true
                    }
                  },
                  {
                    "type": "section",
                    "fields": [
                      {
                        "type": "mrkdwn",
                        "text": "PR URL: $PR_URL"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "All open PRs: https://github.com/wiz-sec/ops/pulls?q=is%3Apr+is%3Aopen+devops/WZ-15713/db-patch"
                      }
                    ]
                  }
                ]
              }
            event: pass
      - wiz-slack/simple_notification:
          slack_channel: db-maintenance
          notify_on: fail
          enable_slack_mention: false
          title: "db-patch failed in << parameters.datacenter >>"
          content: |
            @oncalldevops \n db-patch failed for << parameters.datacenter >>, please contact Devops team


  restart-dals:
    executor:
      name: ops_runner
      runner: << parameters.runner >>
      ecr_url: << parameters.ecr_url >>
    description: run db patch 
    environment:
      TF_VAR_account_id: "<< parameters.account_id >>"
    parameters:
      datacenter:
        type: string
      env:
        type: string
      cloud:
        type: string
        default: aws
      runner:
        type: string
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      dals_to_reset:
        type: string
      account_id:
        type: string
      cluster_type:
        type: string
        default: "wiz"
      profile:
        type: string
        default: be
    steps:
      - checkout
      - get_aws_cli
      - get_kubectl
      - set-aws-creds-tf:
          cluster_type: << parameters.cluster_type >>
      - set_kubeconfig:
          profile: << parameters.profile >>
          datacenter: << parameters.datacenter >>
      - run:
          name: check for rerun with ssh
          no_output_timeout: 121m
          command: bash $(git rev-parse --show-toplevel)/.circleci/scripts/check_ssh.sh
      - run:
          name: reset << parameters.dals_to_reset >> dals
          no_output_timeout: 30m
          command: |
            bash  $(git rev-parse --show-toplevel)/tools/db-patch/restartAllDals.sh << parameters.dals_to_reset >>
      - wiz-slack/simple_notification:
          slack_channel: db-maintenance
          notify_on: fail
          enable_slack_mention: false
          title: "db-patch failed in << parameters.datacenter >>"
          content: |
            @oncalldevops \n db-patch failed for << parameters.datacenter >>

  db-resize-job:
    executor:
      name: ops_runner
      runner: << parameters.runner >>
      ecr_url: << parameters.ecr_url >>
    description: run db resize
    environment:
      TF_VAR_account_id: "<< parameters.account_id >>"
    parameters:
      datacenter:
        type: string
      command:
        type: string
      cloud:
        type: string
        default: aws
      class_size:
        type: string
      runner:
        type: string
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      db_type:
        type: string
        default: rds
      profile:
        type: string
        default: be
      account_id:
        type: string
      cluster_type:
        type: string
        default: wiz
      push_metrics_endpoint:
        type: string
        default: http://prometheus-server.default.svc.cluster.local/api/v1/write
    steps:
      - clone_circleci_wiztools
      - wiztools/set_wiz_cache
      - checkout
      - get_aws_cli
      - cached_pip_install:
          relative_path: tools/db-handler
      - get_kubectl
      - set-aws-creds-tf:
          cluster_type: << parameters.cluster_type >>
      - run:
          name: update EKS cluster_name
          no_output_timeout: 121m
          command: |
            cluster_name=$(echo <<parameters.datacenter >> | awk -F "-" '{print $1"-"$2}')
            echo "export EKS_CLUSTER=$cluster_name" >> "$BASH_ENV"
            source "$BASH_ENV"
      - set_kubeconfig:
          profile: << parameters.profile >>
          datacenter: $EKS_CLUSTER
      - run:
          name: check for rerun with ssh
          no_output_timeout: 121m
          command: bash $(git rev-parse --show-toplevel)/.circleci/scripts/check_ssh.sh
      - run:
          name: push db_resize_trigger metric
          command: |
            export cluster_name=$(echo <<parameters.datacenter >> | awk -F "-" '{print $1"-"$2}')
            echo "db_resize_trigger{cluster_name=\"$cluster_name\",ops_cluster=\"prod\",dc=\"<<parameters.datacenter >>\"} 1" \
            | wiz-prometheus-push-metrics -url << parameters.push_metrics_endpoint >>
      - run:
          name: run dbResize.py  << parameters.command >>
          no_output_timeout: 120m
          command: |
            cluster_name=$(echo <<parameters.datacenter >> | awk -F "-" '{print $1"-"$2}')
            DC_REGION=$(cat $(git rev-parse --show-toplevel)/deployment/common/values/dc-region-mapping.yaml | grep " $cluster_name:" -m1 | awk '{print $2}')
            cd $(git rev-parse --show-toplevel)/tools/db-handler
            << parameters.command >> --region $DC_REGION --profile << parameters.profile >>
      - wiz-slack/simple_notification:
          slack_channel: db-maintenance
          notify_on: fail
          enable_slack_mention: false
          title: "*DB Resize Operation failed*"
          content: |
            @oncalldevops \n << parameters.db_type >> - << parameters.datacenter >> - << parameters.class_size >>
      - when:
          condition:
            and:
            - equal: [ neptune, << parameters.db_type >> ]
            - matches:
                pattern: (.*update-reader.*)$
                value: << parameters.command >>
          steps:
          - run:
              name: resume scaleobject in case of failure
              no_output_timeout: 30m
              command: |
                bash  $(git rev-parse --show-toplevel)/tools/db-handler/pauseScaledobject.sh false
              when: on_fail

  update-db-size-in-env-config:
    executor:
      name: ops_runner
      runner: << parameters.runner >>
      ecr_url: << parameters.ecr_url >>
    description: run db resize
    parameters:
      datacenter:
        type: string
      cluster:
        type: string
      env:
        type: string
      cloud:
        type: string
        default: aws
      class_size:
        type: string
      db_type:
        type: string
      runner:
        type: string
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
    steps:
      - prepare_ops_repository:
          checkout_branch: develop
          target_folder: "."
      - get_aws_cli
      - set-aws-creds-file:
          cloud: << parameters.cloud >>
      - run:
          name: check for rerun with ssh
          no_output_timeout: 121m
          command: bash $(git rev-parse --show-toplevel)/.circleci/scripts/check_ssh.sh
      - run_python_script:
          relative_path: tools/db-handler
          pip_requirement: true
          script_name: "updateEnvConfig.py"
          script_args: '--datacenter << parameters.datacenter >> --cluster << parameters.cluster >> --class "<< parameters.class_size >>" --db-type << parameters.db_type >>'
      - run:
          name: push changes to back to git
          command: |
            git config user.email "circleci@wiz.io"
            git config user.name "CircleCI"
            num_of_git_changes=$(git status --porcelain=v1 | grep env_config || true | wc -l | tr -d ' ')
            if [[ "$num_of_git_changes" -eq 0 ]] ; then
              echo "No changes to commit, the env config file is already up to date"
              circleci-agent step halt
            else
              current_date=$(date +'%d-%m-%Y')
              echo need to commit changes
              git status
              git checkout -b devops/WZ-15713/db-resize-<< parameters.datacenter >>-<<pipeline.git.revision>>
              git add terraform/modules/env_config/<< parameters.env >>.yaml
              git commit -m "[skip ci] modify << parameters.db_type >> db size in env-config for << parameters.datacenter >> to << parameters.class_size >>"
              git push --set-upstream origin devops/WZ-15713/db-resize-<< parameters.datacenter >>-<<pipeline.git.revision>>
            fi
      - create_pr_from_branch:
          feature_branch: devops/WZ-15713/db-resize-<< parameters.datacenter >>-<<pipeline.git.revision>>
          base_branch: develop
          title: "devops/WZ-15713/resize-db - << parameters.datacenter >> - << parameters.class_size >>"
          body: "This PR was created by circleci for db-resize"
          repo: ops
          label: dbresize
      - run:
          name: get slack user id
          command: |
            cd $(git rev-parse --show-toplevel)/.circleci/scripts
            pip3 install boto3
            python3 get_slack_user.py
            echo "export SLACK_USERID=\"$(cat /tmp/slack_user.txt)\"" >> $BASH_ENV
      - slack/notify:
            channel: db-maintenance
            custom: |
              {
                "blocks": [
                  {
                    "type": "header",
                    "text": {
                      "type": "plain_text",
                      "text": ":white_check_mark: DB Resize Operation",
                      "emoji": true
                    }
                  },
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "FYI: @oncalldevops\n\n*The db resize operation for* `<<parameters.db_type>>` *-* `<<parameters.cluster>>` *has successfully completed.*\n\nPlease review and merge the following PR to finalize the process.\n\n*Pull Request:* <$PR_URL|View and Merge the PR>\n\n *All open PRs:* <https://github.com/wiz-sec/ops/pulls?q=is%3Apr+is%3Aopen+devops/WZ-15713/resize-db|View all open PRs>\n\n*Job Link:* <https://app.circleci.com/pipelines/workflows/$CIRCLE_WORKFLOW_ID|Click here>\n\nTriggered by <@$SLACK_USERID>"
                    }
                  }
                ]
              }
            event: pass
      - wiz-slack/simple_notification:
          slack_channel: db-maintenance
          notify_on: fail
          enable_slack_mention: false
          title: "*DB Resize Operation failed*"
          content: |
            @oncalldevops \n << parameters.db_type >> - << parameters.datacenter >> - << parameters.class_size >>

  pause-scale-graph-ingestor:
    executor:
      name: ops_runner
      runner: << parameters.runner >>
      ecr_url: << parameters.ecr_url >>
    description: pause scale graph ingestor
    environment:
      TF_VAR_account_id: "<< parameters.account_id >>"
    parameters:
      datacenter:
        type: string
      env:
        type: string
      cloud:
        type: string
        default: aws
      pause:
        type: boolean
      runner:
        type: string
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      account_id:
        type: string
      cluster_type:
        type: string
        default: wiz
      profile:
        type: string
        default: be
    steps:
      - checkout
      - get_aws_cli
      - get_kubectl
      - set-aws-creds-tf:
          cluster_type: << parameters.cluster_type >>
      - set_kubeconfig:
          profile: << parameters.profile >>
          datacenter: << parameters.datacenter >>
      - run:
          name: check for rerun with ssh
          no_output_timeout: 121m
          command: bash $(git rev-parse --show-toplevel)/.circleci/scripts/check_ssh.sh
      - run:
          name: modify scaleobject
          no_output_timeout: 30m
          command: |
            bash  $(git rev-parse --show-toplevel)/tools/db-handler/pauseScaledobject.sh << parameters.pause >>
      - wiz-slack/simple_notification:
          slack_channel: db-maintenance
          notify_on: fail
          enable_slack_mention: false
          title: "scaleobject modification failed in << parameters.datacenter >>"
          content: |
            @oncalldevops \n scaleobject modification failed for << parameters.datacenter >>
  db-restart-job:
    executor:
      name: ops_runner
      runner: << parameters.runner >>
      ecr_url: << parameters.ecr_url >>
    description: run db restart
    environment:
      TF_VAR_account_id: "<< parameters.account_id >>"
    parameters:
      datacenter:
        type: string
      command:
        type: string
      cloud:
        type: string
        default: aws
      runner:
        type: string
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      db_type:
        type: string
        default: rds
      profile:
        type: string
        default: be
      account_id:
        type: string
      cluster_type:
        type: string
        default: wiz
    steps:
      - checkout
      - get_aws_cli
      - get_kubectl
      - set-aws-creds-tf:
          cluster_type: << parameters.cluster_type >>
      - set_kubeconfig:
          profile: << parameters.profile >>
          datacenter: << parameters.datacenter >>
      - run:
          name: check for rerun with ssh
          no_output_timeout: 121m
          command: bash  $(git rev-parse --show-toplevel)/.circleci/scripts/check_ssh.sh
      - run:
          name: run dbRestart.py  << parameters.command >>
          no_output_timeout: 120m
          command: |
            cluster_name=$(echo <<parameters.datacenter >> | awk -F "-" '{print $1"-"$2}')
            DC_REGION=$(cat $(git rev-parse --show-toplevel)/deployment/common/values/dc-region-mapping.yaml | grep " $cluster_name:" -m1 | awk '{print $2}')
            cd $(git rev-parse --show-toplevel)/tools/db-handler
            << parameters.command >> --region $DC_REGION --profile << parameters.profile >>
      - wiz-slack/simple_notification:
          slack_channel: db-maintenance
          notify_on: fail
          enable_slack_mention: false
          title: "db-restart failed in << parameters.datacenter >>"
          content: |
            @oncalldevops \n db-restart failed for << parameters.datacenter >>
      - when:
         condition:
           and:
           - equal: [ neptune, << parameters.db_type >> ]
           - matches:
               pattern: (.*update-reader.*)$
               value: << parameters.command >>
         steps:
         - run:
             name: resume scaleobject in case of failure
             no_output_timeout: 30m
             command: |
               bash  $(git rev-parse --show-toplevel)/tools/db-handler/pauseScaledobject.sh false
             when: on_fail
  delete-monitors-silence:
    parameters:
      grafana_url:
        type: string
        default: ""
      runner:
        type: string
        default: ""
    executor:
      name: ops_runner
      runner: << parameters.runner >>
    steps:
      - checkout
      - run_python_script:
          step_name: "Delete Grafana silence"
          relative_path: .circleci/scripts/monitoring-silence
          pip_requirement: true
          script_name: "monitoring-management.py"
          script_args: "--grafana_url << parameters.grafana_url >> --action delete_grafana_silence"
      - run_python_script:
          step_name: "Delete DataDog downtime"
          relative_path: .circleci/scripts/monitoring-silence
          pip_requirement: true
          script_name: "monitoring-management.py"
          script_args: "--action delete_dd_downtime"
  trigger_upload_docs:
    executor: python-only
    parameters:
      dry_run:
          type: enum
          default: "true"
          enum: ["true", "false"]
    steps:
      - checkout
      - run:
          name: Trigger upload-docs
          command: |
            wiz_commit=$(cat wiz_commit.txt| xargs)
            export DRY_RUN=<< parameters.dry_run >>
            export OUTCOME_FILE=/tmp/docs_outcome
            bash .circleci/scripts/trigger_upload_docs.sh $wiz_commit
            export WORKFLOW_LINK=$(cat $OUTCOME_FILE | grep 'Workflow Link:' | cut -d ' ' -f 3)
            echo "export WORKFLOW_LINK=${WORKFLOW_LINK}" >> $BASH_ENV
      - wiz-slack/simple_notification:
          slack_channel: test-docs-repo-notification
          notify_on: fail
          enable_slack_mention: false
          title: "Upload docs failed"
          content: |
            Workflow link is: ${WORKFLOW_LINK}
      - wiz-slack/simple_notification:
          slack_channel: test-docs-repo-notification
          notify_on: success
          enable_slack_mention: false
          title: "Upload docs succeded"
          content: |
             Workflow link is: ${WORKFLOW_LINK}
  greenlight:
    description: "Run greenlight tests"
    parameters:
      env:
        type: string
      slack_channel:
        type: string
        default: stage-deployments
      tag_user:
        type: string
        default: "oncallbackend"
      test_envs:
        type: string
        default: ""
      test_id:
        type: string
      packages:
        type: string
        default: comma separated list of packages
      cluster_name:
        type: string
        default: stage-eu1
      aws_region:
        type: string
      runner:
        type: string
        default: "dummy_runner"
      executor:
        type: string
        default: "e2e_runner"
      cache_key:
        type: string
        default: v6
      wiz_branch:
        type: string
        default: ""
      scanned_account:
        type: string
        default: "491085391936"
      install_azure_cli:
        type: boolean
        default: false
      clone_terraform_outputs:
        type: boolean
        default: false
      test_concurrency:
        type: integer
        default: 1
    executor:
      name: << parameters.executor >>
      runner: << parameters.runner >>
    environment:
      # We want the tests to use their own credentials
      ARM_CLIENT_ID: ""
      ARM_TENANT_ID: ""
      ARM_CLIENT_SECRET: ""
      ARM_SUBSCRIPTION_ID: ""
    steps:
      - clone_circleci_wiztools
      - wiztools/set_wiz_cache
      - wiztools/checkout_shallow
      - when:
          # This is compiling the tests
          condition:
            not:
              equal: [ "", "<<parameters.wiz_branch>>" ]
          steps:
            - checkout-wiz-repo: # TODO: Maybe we can simply download the binary of the test
                repo: wiz
                branch: << parameters.wiz_branch >>
                component: greenlight
                shallow_clone: false
            - install_ssh_keys
            - go_and_git_private_repo_config
            - wiztools/self_hosted_restore_cache:
                key1: greenlight/<< parameters.test_id >>/go-mod-<< parameters.cache_key >>-{{ checksum "~/project/wiz/greenlight/go.mod" }}
                key2: greenlight/<< parameters.test_id >>/go-mod-<< parameters.cache_key >>-
                cache_title: restore end2endtests go mod cache
                no_output_timeout: 30m
            - run:
                name: Compile tests
                environment: &greenlight_environment
                  GOFLAGS: "-mod=mod"
                  GOMODCACHE: "/tmp/go/pkg/mod"
                  GOCACHE: "/tmp/go/build"
                  GOCACHE_DISK_DIR: "/tmp/go-cache"
                  GOCACHEPROG: "go-cacher --verbose"
                  GOTOOLCHAIN: "local" # make sure we use whatever go version that is on the image
                  GOCACHE_CACHE_KEY: go/v1
                  AWS_WEB_IDENTITY_TOKEN_FILE: "" # override so it won't take precedence over the profile
                command: |
                  cd wiz/greenlight && go test -o /tmp/greenlight.test -c << parameters.packages >>
            - wiztools/self_hosted_save_cache:
                key: greenlight/<< parameters.test_id >>/go-mod-<< parameters.cache_key >>-{{ checksum "~/project/wiz/greenlight/go.mod" }}
                path1: /tmp/go/pkg/mod
                cache_title: save greenlight go mod cache
                no_output_timeout: 30m    
      - when:
          condition: << parameters.clone_terraform_outputs >>
          steps:
            - clone_tf_outputs    
      - set-aws-creds-tf:
          cluster_type: wiz
          branch: e2e
          account_id: "318269784329"
      - set_kubeconfig:
          profile: be
          datacenter: << parameters.cluster_name >>
      - set_kubeconfig_py:
          profile: be
          datacenter: << parameters.cluster_name >>
      - when:
          condition: << parameters.install_azure_cli >>
          steps:
          - wiztools/install_pip_package:
              package: azure-cli
              version: "2.67.0"
              executor_key: greenlight
              self_hosted: true        
      - run:
          name: Set test environment variables
          environment:
            AWS_REGION: << parameters.aws_region >>
            ENV: << parameters.env >>
            DC: << parameters.cluster_name >>
            TEST_ID: << parameters.test_id >>
          command: |
            bash .circleci/scripts/greenlight_prep.sh        
      - run:
          name: Run Tests
          no_output_timeout: 2h
          environment: *greenlight_environment
          command: |
            cd wiz/greenlight
            cd << parameters.packages >>
            gotestsum --format=standard-verbose \
                      --junitfile /tmp/test-results/unit-tests.xml --raw-command -- \
              go tool test2json -t /tmp/greenlight.test -test.v -test.parallel << parameters.test_concurrency >>
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/artifacts
      - wiz-slack/simple_notification:
          slack_channel: << parameters.slack_channel >>
          tag_user: << parameters.tag_user >>
          notify_on: fail
          enable_slack_mention: false
          title: "E2E tests failed"
          content: |
            Test **<< parameters.test_id >>** failed on env **<<parameters.env >>** ! \n This test runs on environments: **<< parameters.test_envs >>** \n Check it out in the CircleCI job :circleci:
      - check_for_rerun_with_ssh
  cleanup_old_images:
    docker:
      - image: cimg/aws:2023.06
    resource_class: small
    parameters:
      ecr_env:
        type: string
      region:
        type: string
      dry_run:
        type: boolean
        default: true
      cutoff_age:
        type: integer
        default: 30
    steps:
      - checkout
      - run:
          name: cleanup old images
          environment:
            FETCHER_REGION: us-east-2
          command: |
            cd tools/cleaner
            export ECR_ENV=<<parameters.ecr_env>>
            export DRY_RUN=<<parameters.dry_run>>
            export CUTOFF_AGE=<<parameters.cutoff_age>>
            export TARGET_REGION=<<parameters.region>>
            pip3 install -r requirements.txt
            ./cleaner.sh
  eks_ami_update_job: 
    executor:
      name: ops_runner
      runner: << parameters.runner >>
      ecr_url: << parameters.ecr_url >>
    environment:
      TF_VAR_account_id: "<< parameters.account_id >>"
    parameters:
      eks_script_parameter:
        type: string
      arn_prefix:
        type: string
        default: aws
      cluster_name:
        type: string
      ecr_url:
        type: string   
      runner:
        type: string
        default: "dummy_runner"
      account_id:
        type: string
      cluster_type:
        type: string
        default: "wiz"
      profile:
        type: string
        default: "be"
    working_directory: ~/project
    steps:
      - prepare_ops_repository:
          checkout_branch: << pipeline.git.branch >>
          target_folder: "."
      - set-aws-creds-tf:
          cluster_type: << parameters.cluster_type >>
      - check_for_rerun_with_ssh
      - run_python_script:
          relative_path: tools/scripts/update-eks-ami
          pip_requirement: true
          script_name: "update_eks_ami_and_addons.py"
          script_args: "-p << parameters.profile >> --arn-prefix << parameters.arn_prefix >> --cluster << parameters.cluster_name >> << parameters.eks_script_parameter >>"

  eks_ami_update_job_notify:
    parameters:
      slack_channel:
        type: string
        default: "eks-ami-update"
      slack_message_body:
        type: string
      slack_message_header:
        type: string
      message_type:
        type: string
        default: plain_text
    working_directory: ~/project
    executor:
      name: python-only
    steps:
      - slack/notify:
            channel: << parameters.slack_channel >>
            custom: |
              {
                "blocks": [
                  {
                    "type": "header",
                    "text": {
                      "type": "plain_text",
                      "text": "<< parameters.slack_message_header >>",
                      "emoji": true
                    }
                  },
                  {
                    "type": "section",
                    "fields": [
                      {
                        "type": "<< parameters.message_type >>",
                        "text": "<< parameters.slack_message_body >>"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "https://app.circleci.com/pipelines/github/wiz-sec/ops?branch=eks-ami-update"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "https://us1.grafana.wiz.io/d/adtigeveztvk0d/ami-versions?orgId=1&var-DC=test-.%2A"
                      }
                    ]
                  }
                ]
              }
            event: pass
  lock_eks_ami_addons_versions:
    environment:
      TF_VAR_account_id: "<< parameters.account_id >>"
    parameters:
      arn_prefix:
        type: string
        default: aws
      slack_channel:
        type: string
        default: eks-ami-update
      runner:
        type: string
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      account_id:
        type: string
      cluster_type:
        type: string
        default: "wiz"
      profile:
        type: string
        default: "be"
      checkout_branch:
        type: string
        default: develop
      feature_branch:
        type: string
        default: devops/WZ-29764/update-and-lock-eks-ami-addons-<< parameters.arn_prefix >>-<<pipeline.git.revision>>
      push_to_origin:
        type: boolean
        default: true
    working_directory: ~/project
    executor:
      name: ops_runner
      runner: << parameters.runner >>
      ecr_url: << parameters.ecr_url >>
    steps:
      - prepare_ops_repository:
          checkout_branch: << parameters.checkout_branch >>
          target_folder: "."
      - set-aws-creds-tf:
          cluster_type: << parameters.cluster_type >>
      - run_python_script:
          relative_path: tools/scripts/update-eks-ami
          pip_requirement: true
          script_name: "lock-ami-versions.py"
          script_args: "-p << parameters.profile >> --write-to-file --arn-prefix << parameters.arn_prefix >>"
      - wiz-slack/simple_notification:
          slack_channel: "eks-ami-update"
          notify_on: fail
          enable_slack_mention: false
          title: "Lock AMI versions failed"
          content: |
            Locking AMI versions failed for << parameters.arn_prefix >>. Please check the logs for more information.
      - push_changes_to_git_branch:
          branch_name: << parameters.feature_branch >>
          commit_message: Update EKS AMI versions - << parameters.arn_prefix >> - <<pipeline.git.revision>>
          git_add_path: tools/scripts/update-eks-ami
          slack_channel: << parameters.slack_channel >>
          push_to_origin: << parameters.push_to_origin >>





  write_eks_values_to_env_config: 
    parameters:
      arn_prefix:
        type: string
        default: aws
      cluster_name:
        type: string
      values_to_update:
        type: string #all / ami / addons / karpenter
        default: "all"
      env_config_file:
        type: string #test / stage / prod / default
      cluster_type:
        type: string #deafult / wiz / monitor / ops / global
        default: wiz
      eks_version:
        type: string #1.24 / 1.25
        default: "0"
      slack_channel:
        type: string
        default: eks-ami-update
      slack_message_header:
        type: string
        default: "new EKS AMI and addons from aws"
      slack_message_link:
        type: string
        default: "https://github.com/wiz-sec/ops/pulls?q=is%3Apr+is%3Aopen+devops/WZ-29764"
      runner:
        type: string
      checkout_branch:
        type: string
        default: << pipeline.git.branch >>
      feature_branch:
        type: string
        default: devops/WZ-29764/update-eks-ami-addons-<< parameters.env_config_file >>-<<pipeline.git.revision>>
      push_to_origin:
        type: boolean
        default: true
      trigger_ami_env:
        type: string
        default: "none"
      open_pr:
        type: boolean
        default: true
    working_directory: ~/project
    executor:
      name: ops_runner
      runner: << parameters.runner >>
    steps:
      - prepare_ops_repository:
          checkout_branch: << parameters.checkout_branch >>
          target_folder: "."
      - run:
          name: check for rerun with ssh
          no_output_timeout: 121m
          command: bash $(git rev-parse --show-toplevel)/.circleci/scripts/check_ssh.sh
      - run_python_script:
          relative_path: tools/scripts/update-eks-ami
          pip_requirement: true
          script_name: "update_ami_values_in_env_config.py"
          script_args: "--eks-version << parameters.eks_version >> --env-config-file << parameters.env_config_file >> --cluster-type << parameters.cluster_type >> --cluster << parameters.cluster_name >> --arn-prefix << parameters.arn_prefix >> --values-to-update << parameters.values_to_update >>"
      - push_changes_to_git_branch:
          branch_name: << parameters.feature_branch >>
          commit_message: Updating EKS AMI yaml on commit <<pipeline.git.revision>>
          git_add_path: terraform/modules/env_config
          slack_channel: << parameters.slack_channel >>
          push_to_origin: << parameters.push_to_origin >>
      - run:
          name: check if trigger ami env
          command: |
            if [[ << parameters.trigger_ami_env >> != "none" ]]; then
              echo $(date) > $(git rev-parse --show-toplevel)/.circleci/.triggers/ami_update/<< parameters.trigger_ami_env >>
              git add $(git rev-parse --show-toplevel)/.circleci/.triggers/ami_update/<< parameters.trigger_ami_env >>
              git commit -m "add trigger for ami update: << parameters.trigger_ami_env >>"
              git push
            fi
      - when:
          condition:
            equal: [ true, << parameters.open_pr >> ]
          steps:
            - create_pr_from_branch:
                feature_branch: << parameters.feature_branch >>
                base_branch: develop
                title: "devops/WZ-29764 - merge << parameters.env_config_file >>-<< parameters.values_to_update >> eks ami update versions"
                body: "This PR was created by circleci for updating and locking EKS AMI versions"
                repo: ops
                label: amiupdate
            - slack/notify:
                  channel: << parameters.slack_channel >>
                  custom: |
                    {
                      "blocks": [
                        {
                          "type": "header",
                          "text": {
                            "type": "plain_text",
                            "text": "<< parameters.slack_message_header >>",
                            "emoji": true
                          }
                        },
                        {
                          "type": "section",
                          "fields": [
                            {
                              "type": "mrkdwn",
                              "text": "PR URL: $PR_URL"
                            },
                            {
                              "type": "mrkdwn",
                              "text": "All open PRs: << parameters.slack_message_link >>"
                            }
                          ]
                        }
                      ]
                    }
                  event: pass



  trigger_workflow:
    executor:
      name: ops_runner
      runner: << parameters.runner >>
      ecr_url: << parameters.ecr_url >>
    parameters:
      trigger_branch:
        type: string
      trigger_parameter:
        type: string
      circle_set_param:
        type: string
        default: ""
      repository:
        type: string
        default: ops
      runner:
        type: string
        default: "dummy_runner"
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      slack_message_header:
        type: string
        default: "triggered workflow"
      slack_message_body:
        type: string
        default: "triggered workflow"
      slack_channel:
        type: string
        default: "Channel_not_exist_will_not_send_message"
    steps:
      - run:
          name: Run scheduled workflow
          command: |
            DATARAW=$(echo '{
              "branch": "<< parameters.trigger_branch >>",
                "parameters": {
                  "<< parameters.trigger_parameter >>": true,
                  "run_trigger_workflow": false,
                  "circle_set": "<< parameters.circle_set_param >>"
              }
            }' | jq 'del(.parameters.circle_set | select(. == ""))')

            curl --location --request POST 'https://circleci.com/api/v2/project/github/wiz-sec/<< parameters.repository >>/pipeline' \
            --header 'Content-Type: application/json' \
            -u "${CIRCLE_TOKEN}:" \
            --data-raw "$DATARAW"
      - slack/notify:
            channel: << parameters.slack_channel >>
            custom: |
              {
                "blocks": [
                  {
                    "type": "header",
                    "text": {
                      "type": "plain_text",
                      "text": "<< parameters.slack_message_header >>",
                      "emoji": true
                    }
                  },
                  {
                    "type": "section",
                    "fields": [
                      {
                        "type": "plain_text",
                        "text": "<< parameters.slack_message_body >>"
                      }
                    ]
                  }
                ]
              }
            event: pass
  run-fe-end2end-tests:
    parameters:
      env:
        type: string
      dc:
        type: string
        description: "full dc name, eg: stage-eu1"
      slack_channel:
        type: string
        default: stage-deployments
      test_schema:
        type: boolean
        default: true
      auth_vendor:
        type: enum
        enum: ["auth0", "cognito"]
        default: cognito
      runner:
        type: string
    working_directory: ~/project
    executor:
      name: cypress-web
      runner: << parameters.runner >>
    parallelism: 8
    environment:
      CLUSTER_NAME: "<< parameters.dc >>"
      ENV: "<< parameters.env >>"
      CREDENTIALS_REGULAR_AUTH_VENDOR: << parameters.auth_vendor >>
    steps:
      - prepare_for_wiz_web_task
      - when:
          condition: << parameters.test_schema >>
          steps:
            - run: cd wiz/web && task test:e2e:client-server-schema-in-sync
      - run:
          name: End to End tests
          command: |
            cd wiz/web
            SKIP_FORMATTING=1 task codegen:gql
            task test:e2e:ops:run

      - wiz-slack/simple_notification:
          slack_channel: on-call-frontend
          tag_user: "oncallfrontend"
          notify_on: fail
          enable_slack_mention: false
          title: "E2E tests failed"
          content: |
            Test **FE E2E** failed on env **<<parameters.env >>** ! \n Check it out in the CircleCI job :circleci:


  test-web-preview:
    parameters:
      env:
        type: string
      dc:
        type: string
        description: "full dc name, eg: stage-eu1"
      slack_channel:
        type: string
      auth_vendor:
        type: enum
        enum: ["auth0", "cognito"]
        default: cognito
      runner:
        type: string
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
    executor:
      name: cypress-web
      runner: << parameters.runner >>
      ecr_url: << parameters.ecr_url >>
    environment:
      CLUSTER_NAME: "<< parameters.dc >>"
      ENV: "<< parameters.env >>"
      CREDENTIALS_REGULAR_AUTH_VENDOR: << parameters.auth_vendor >>
    steps:
      - prepare_for_wiz_web_task
      - run: 
          name: Test schema
          command: cd wiz/web && task test:e2e:client-server-schema-in-sync
      - wiz-slack/simple_notification:
          slack_channel: << parameters.slack_channel >>
          notify_on: fail
          enable_slack_mention: false
          title: "Preview test failed [<<parameters.env >>]"
          content: |
            Web preview test failed on env **<<parameters.env >>** ! \n Check it out in the CircleCI job :circleci:

  gitops-reconcile-wait-and-publish-lambdas:
    parallelism: 1
    environment:
      TF_VAR_account_id: "<< parameters.account_id >>"
    circleci_ip_ranges: false
    executor:
      name: ops_runner
      runner: << parameters.runner >>
      ecr_url: << parameters.ecr_url >>
    working_directory: ~/project
    parameters:
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      cluster_name:
        type: string
        default: test-eu1
      cluster_type:
        type: string
        default: wiz
      helmfile_log_level:
        type: string
        default: info
      gitops_engine:
        type: enum
        enum:
          - argocd
        default: argocd
      env_scoped_cluster:
        type: enum
        enum:
          - disabled
          - enabled
          - required
        default: disabled
      checker_version:
        type: string
        default: v1
      gitops_skip_if_no_changes:
        type: boolean
        default: false
      slack_channel:
        type: string
        default: test-deployments
      cloud:
        type: string
        default: aws
      notify_on:
        type: string
        default: fail
      enable_slack_mention:
        type: boolean
        default: true
      region:
        type: string
      use_cluster_type:
        type: boolean
        default: false
      block_rollbacks:
        type: boolean
        default: false
      fingerprint_terraform_outputs:
        type: string
      fingerprint_cluster_states:
        type: string
      fingerprint_cluster_states_argocd:
        type: string
      runner:
        type: string
        default: "dummy_runner"
      account_id:
        type: string
      profile:
        type: string
        default: "be"

      apollo_env:
        type: string
        default: ""
      apollo_verification:
        type: boolean
        default: false    

      env_name:
        type: string
        default: test
      lambda_ecr_prefix:
        type: string
        default: beyond
      image_arch:
        type: string
        default: amd64
      data_center:
        type: string
        default: test-eu4
      netscanner-serverless: *bool_false
      netscanner-screenshot: *bool_false
      secrets-validator-serverless: *bool_false
      netscanner-account_id:
        type: string
        default: dummy
      netscanner-image-arch:
        type: string
        default: dummy
      secrets-validator-account_id:
        type: string
        default: dummy
      secrets-validator-image-arch:
        type: string
        default: dummy
      auth-pretoken: *bool_false
      auth-presignup: *bool_false
      auth-msg: *bool_false
      auth-account_id:
        type: string
        default: dummy
      webhook-gateway: *bool_false
      webhook-gateway-account_id:
        type: string
        default: dummy
      webhook-gateway-image_arch: 
        type: string
        default: dummy
      lambdas_deployment:
        type: boolean
        default: false
    steps:
      - init_checker_workspace:
          cluster_name: << parameters.cluster_name >>
          cloud: << parameters.cloud >>
          cluster_type: << parameters.cluster_type >>
          region: << parameters.region >>
          use_cluster_type: << parameters.use_cluster_type >>
          profile: << parameters.profile >>
      - run_checker:
          gitops_engine: << parameters.gitops_engine >>
          env_scoped_cluster: << parameters.env_scoped_cluster >>
          gitops_skip_if_no_changes: << parameters.gitops_skip_if_no_changes >>
          cluster_name: << parameters.cluster_name >>
          cloud: << parameters.cloud >>
          cluster_type: << parameters.cluster_type >>
          checker_version: << parameters.checker_version >>

      # Send message to slack channel "apollo-build-notifications"
      - when:
          condition: << parameters.apollo_verification >>
          steps:
            - run:
                name: Apollo schema validation
                environment:
                  SLACK_CHANNEL: C0889TCNQAX
                command: |
                  # Run python verification
                  python3 ./.circleci/scripts/apollo-varient-validation.py --variant "wiz-<< parameters.env_name >>-graph@<< parameters.cluster_name >>"

      - when:
          condition: << parameters.netscanner-serverless >>
          steps:
            - publish_lambda_version: &publish_lambda_version
                env_name: << parameters.env_name >>
                region: << parameters.region >>
                ecr_url: << parameters.ecr_url >>
                lambda_ecr_prefix: << parameters.lambda_ecr_prefix >>
                function_name: "netscanner-<< parameters.env_name >>-<< parameters.data_center >>-lambda-v2"
                forwarder_function_name: << parameters.env_name >>-<< parameters.data_center >>-kusto-cloudwatch-forwarder-netscanner
                account_id: << parameters.netscanner-account_id >>
                package_name: "netscanner-serverless-lambda"
                version_filename: "netscanner-serverless"
                image_arch: << parameters.netscanner-image-arch >>
                profile: "netscanner"
      
      # (2) netscanner-screenshot
      - when:
          condition: << parameters.netscanner-screenshot >>
          steps:
            - publish_lambda_version: 
                <<: *publish_lambda_version
                function_name: "netscanner-screenshot-<< parameters.env_name >>-<< parameters.data_center >>-lambda-v2"
                account_id: << parameters.netscanner-account_id >>
                package_name: "netscanner-screenshot-lambda"
                version_filename: "netscanner-screenshot"
                profile: "netscanner"
                image_arch: << parameters.netscanner-image-arch >>

      # (3) auth-pretoken
      - when:
          condition: << parameters.auth-pretoken >>
          steps:
            - publish_lambda_version:
                <<: *publish_lambda_version
                function_name: "auth-pretoken-<< parameters.env_name >>-<< parameters.data_center >>-lambda"
                forwarder_function_name: << parameters.env_name >>-<< parameters.data_center >>-kusto-cloudwatch-forwarder-auth
                account_id: << parameters.auth-account_id >>
                package_name: "auth-pretoken"
                version_filename: "auth-pretoken"
                profile: "auth"
                image_arch: << parameters.image_arch >>	
      
      # (4) auth-msg
      - when:
          condition: << parameters.auth-msg >>
          steps:
            - publish_lambda_version:
                <<: *publish_lambda_version
                function_name: "auth-msg-<< parameters.env_name >>-<< parameters.data_center >>-lambda"
                forwarder_function_name: << parameters.env_name >>-<< parameters.data_center >>-kusto-cloudwatch-forwarder-auth
                account_id: << parameters.auth-account_id >>
                package_name: "auth-msg"
                version_filename: "auth-msg"
                profile: "auth"
                image_arch: << parameters.image_arch >>

      # (5) auth-presignup
      - when:
          condition: << parameters.auth-presignup >>
          steps:
            - publish_lambda_version:
                <<: *publish_lambda_version
                function_name: "auth-presignup-<< parameters.env_name >>-<< parameters.data_center >>-lambda"
                forwarder_function_name: << parameters.env_name >>-<< parameters.data_center >>-kusto-cloudwatch-forwarder-auth
                account_id: << parameters.auth-account_id >>
                package_name: "auth-presignup"
                version_filename: "auth-presignup"
                profile: "auth"
                image_arch: << parameters.image_arch >>
      
      # (6) webhook-gateway
      - when:
          condition: << parameters.webhook-gateway >>
          steps:
            - publish_lambda_version:
                <<: *publish_lambda_version
                function_name: "webhook-gateway-<< parameters.env_name >>-<< parameters.data_center >>-lambda"
                forwarder_function_name: << parameters.env_name >>-<< parameters.data_center >>-kusto-cloudwatch-forwarder
                account_id: << parameters.webhook-gateway-account_id >>
                package_name: "webhook-gateway"
                version_filename: "webhook-gateway"
                image_arch: << parameters.webhook-gateway-image_arch >>
                profile: "be"

      # (7) secrets-validator-serverless
      - when:
          condition: << parameters.secrets-validator-serverless >>
          steps:
            - publish_lambda_version:
                <<: *publish_lambda_version
                function_name: "secrets-validator-<< parameters.env_name >>-<< parameters.data_center >>-lambda"
                account_id: << parameters.netscanner-account_id >>
                package_name: "secrets-validator-serverless-lambda"
                version_filename: "secrets-validator-serverless"
                profile: "netscanner"
                image_arch: << parameters.secrets-validator-image-arch >>

      # Notifiy when there are lambda deployments
      - when:
          condition: << parameters.lambdas_deployment >>
          steps:
            - wiz-slack/simple_notification:
                slack_channel: << parameters.slack_channel >>
                notify_on: fail
                enable_slack_mention: false
                title: "GitOps/Publish lambda version failure"
                content: |
                  GitOps / Publish lambdas for << parameters.data_center >> failed! Check it out in the CircleCI job :circleci:


      # Notifiy when there are no lambda deployments
      - when:
          condition:
            not: << parameters.lambdas_deployment >>
          steps:
          - wiz-slack/notify_deployment:
              kind: GitOps
              slack_channel: << parameters.slack_channel >>
              env: << parameters.cluster_name >>
              outcome_path: /mnt/ramdisk/project/.deployment_outcome
              notify_on: << parameters.notify_on >>
              enable_slack_mention: << parameters.enable_slack_mention >>
  scan-ami:
    executor:
      name: ops_runner
      runner: << parameters.runner >>
      ecr_url: << parameters.ecr_url >>
    description: scan ami
    parameters:
      cluster_type:
        type: string
        default: wiz
      cloud:
        type: string
        default: aws
      scan_account_id:
        type: string
        default: "229870817538"
      region:
        type: string
        default: "us-east-2"
      profile:
        type: string
      runner:
        type: string
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      ami_owner_account_id:
        type: string
      source_ami_name:
        type: string
      role_arn:
        type: string
      shared_accounts:
        type: string
        default: "1234567890"
      project_name:
        type: string
      destination_ami_name:
        type: string
      extra_accounts:
        type: string
        default: ""
    steps:
      - checkout
      - get_aws_cli
      - set-aws-creds-role:
          init: true
          role_arn: << parameters.role_arn >>
          profile_name: << parameters.profile >>
      - clone_circleci_wiztools        
      - run:
          name: store ami id for << parameters.source_ami_name >>
          command: |
            # Get all AMI ids match the name and account given
            ami_ids=$(aws --profile << parameters.profile >> --region << parameters.region >> ec2 describe-images --owners << parameters.ami_owner_account_id >> --filters "Name=name,Values=<< parameters.source_ami_name >>" --query 'Images[*].ImageId')
            # Check if we have more than one image
            num_of_images=$(echo $ami_ids | jq 'length')
            if [ $num_of_images -gt 1 ]; then
              echo "Multiple images found for << parameters.source_ami_name >>"
              echo $ami_ids | jq
              exit 1
            fi
            # Save the AMI id to the environment
            ami_id=$(echo $ami_ids | jq '.[]' -r)
            mkdir /tmp/import-ami
            echo $ami_id > /tmp/import-ami/ami.txt
            export AMI_ID=$ami_id
            echo "export AMI_ID=\"${ami_id}\"" >> $BASH_ENV
            echo using AMI_ID: $ami_id
      - get_all_accounts:
          cloud: << parameters.cloud >>
          variable_name: SHARED_ACCOUNTS
      - run:
          name: add extra account_id to SHARED_ACCOUNTS
          command: |
            ALL_SHARED_ACCOUNTS="$SHARED_ACCOUNTS << parameters.extra_accounts >>"
            echo "export SHARED_ACCOUNTS=\"${ALL_SHARED_ACCOUNTS}\"" >> $BASH_ENV
      - run_python_script:
          no_output_timeout: 60m
          relative_path: tools/import-AMIs
          pip_requirement: true
          script_name: "init-publish-AMI.py"
          script_args: "--profile << parameters.profile >> --region << parameters.region >> --source-ami-id $AMI_ID --cmk-alias << parameters.project_name>>-ami-key --destination-ami-name << parameters.destination_ami_name >> --shared-accounts \"$SHARED_ACCOUNTS\" --dry-run true" 
      - wizcli_run:
          cloud: << parameters.cloud >>
          ignore_failures: false
          wizcli_params: "vm-image scan --id $AMI_ID --region << parameters.region >> --subscriptionId << parameters.scan_account_id >>"
      - persist_to_workspace:
            root: /tmp/import-ami
            paths:
              - ami.txt
      - check_for_rerun_with_ssh


  publish-ami:
    executor:
      name: ops_runner
      runner: << parameters.runner >>
      ecr_url: << parameters.ecr_url >>
    description: publish ami to local
    parameters:
      cluster_type:
        type: string
        default: wiz
      region:
        type: string
        default: "us-east-2"
      cloud:
        type: string
        default: aws
      scan_account_id:
        type: string
        default: "229870817538"
      profile:
        type: string
        default: be
      runner:
        type: string
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      ami_owner_account_id:
        type: string
      source_ami_name:
        type: string
      destination_ami_name:
        type: string  
      role_arn:
        type: string
      shared_accounts:
        type: string
        default: "1234567890"
      project_name:
        type: string
      extra_accounts:
        type: string
        default: ""
    steps:
      - checkout
      - get_aws_cli
      - set-aws-creds-role:
          init: true
          role_arn: << parameters.role_arn >>
          profile_name: << parameters.profile >>
      - clone_circleci_wiztools
      - wiztools/set_wiz_cache
      - attach_workspace:
            at: /tmp/import-ami
      - run:
          name: read ami id from workspace
          command: |
            ami_id=$(cat /tmp/import-ami/ami.txt)
            echo "export AMI_ID=\"${ami_id}\"" >> $BASH_ENV
            echo using AMI_ID: $ami_id
      - get_all_accounts:
          cloud: << parameters.cloud >>
          variable_name: SHARED_ACCOUNTS
      - run:
          name: add extra account_id to SHARED_ACCOUNTS
          command: |
            ALL_SHARED_ACCOUNTS="$SHARED_ACCOUNTS << parameters.extra_accounts >>"
            echo "export SHARED_ACCOUNTS=\"${ALL_SHARED_ACCOUNTS}\"" >> $BASH_ENV
      - run_python_script:
          no_output_timeout: 60m
          relative_path: tools/import-AMIs
          pip_requirement: true
          script_name: "init-publish-AMI.py"
          script_args: "--profile << parameters.profile >> --region << parameters.region >> --source-ami-id $AMI_ID --source-ami-region << parameters.region >> --cmk-alias << parameters.project_name>>-ami-key --destination-ami-name << parameters.destination_ami_name >> --shared-accounts \"$SHARED_ACCOUNTS\" --dry-run false" 
      - run:
          name: search all results
          command: |
            if [ "<< parameters.region >>" == "us-gov-west-1" ]; then
              all_regions="us-gov-west-1 us-gov-east-1"
            else
              all_regions=$(python -c "import boto3; print(' '.join(boto3.Session(region_name='<< parameters.region >>', profile_name='<< parameters.profile >>').get_available_regions('ec2')))")
            fi
            # echo "All regions: $all_regions"
            for region in $all_regions; do
            echo "searching in $region"
              echo "search success in $region.log"
              #check if $region.log file exist
              if [ -f /tmp/ami-import/$region.log ]; then
                region_success=$(cat /tmp/ami-import/$region.log | grep "AMI published successfully" | wc -l)
                if [ $region_success -eq 0 ]; then
                  echo "AMI did not published successfully in $region" >> /tmp/ami-import/error.log
                fi
              else
                echo "Could not find $region.log" >> /tmp/ami-import/error.log
              fi
            done
      - store_artifacts:
            path: /tmp/ami-import
      - run:
          name: print error log
          command: |
            if [ -f /tmp/ami-import/error.log ]; then
              cat /tmp/ami-import/error.log
              exit 1
            fi
      - check_for_rerun_with_ssh

  publish-all-lambdas:
    description: |
      Allows publishing lambda versions for DC level lambdas.
      To add a new lambda, add the required parameters and a new step.
    environment:
      TF_VAR_account_id: "<< parameters.account_id >>"
    executor:
        name: ops_runner
        runner: << parameters.runner >>
    working_directory: ~/project
    parameters:
      env_name:
        type: string
        default: test
      cloud:
        type: string
        default: aws
      region:
        type: string
        default: eu-north-1
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      lambda_ecr_prefix:
        type: string
        default: beyond
      image_arch:
        type: string
        default: amd64
      slack_channel:
        type: string
        default: test-deployments
      data_center:
        type: string
      runner:
        type: string
        default: "dummy_runner"

      netscanner-serverless: *bool_false
      netscanner-screenshot: *bool_false
      secrets-validator-serverless: *bool_false
      netscanner-account_id:
        type: string
      netscanner-image-arch:
        type: string
      secrets-validator-account_id:
        type: string
      secrets-validator-image-arch:
          type: string
      auth-pretoken: *bool_false
      auth-presignup: *bool_false
      auth-msg: *bool_false
      auth-account_id:
        type: string

      webhook-gateway: *bool_false
      webhook-gateway-account_id:
        type: string
      webhook-gateway-image_arch: 
        type: string
      account_id:
        type: string
    steps:
      - checkout
      - set-aws-creds-tf
      # (1) netscanner-serverless
      - when:
          condition: << parameters.netscanner-serverless >>
          steps:
            - publish_lambda_version: &publish_lambda_version
                env_name: << parameters.env_name >>
                region: << parameters.region >>
                ecr_url: << parameters.ecr_url >>
                lambda_ecr_prefix: << parameters.lambda_ecr_prefix >>
                function_name: "netscanner-<< parameters.env_name >>-<< parameters.data_center >>-lambda-v2"
                forwarder_function_name: << parameters.env_name >>-<< parameters.data_center >>-kusto-cloudwatch-forwarder-netscanner
                account_id: << parameters.netscanner-account_id >>
                package_name: "netscanner-serverless-lambda"
                version_filename: "netscanner-serverless"
                image_arch: << parameters.netscanner-image-arch >>
                profile: "netscanner"
      
      # (2) netscanner-screenshot
      - when:
          condition: << parameters.netscanner-screenshot >>
          steps:
            - publish_lambda_version: 
                <<: *publish_lambda_version
                function_name: "netscanner-screenshot-<< parameters.env_name >>-<< parameters.data_center >>-lambda-v2"
                account_id: << parameters.netscanner-account_id >>
                package_name: "netscanner-screenshot-lambda"
                version_filename: "netscanner-screenshot"
                profile: "netscanner"
                image_arch: << parameters.netscanner-image-arch >>

      # (3) auth-pretoken
      - when:
          condition: << parameters.auth-pretoken >>
          steps:
            - publish_lambda_version:
                <<: *publish_lambda_version
                function_name: "auth-pretoken-<< parameters.env_name >>-<< parameters.data_center >>-lambda"
                forwarder_function_name: << parameters.env_name >>-<< parameters.data_center >>-kusto-cloudwatch-forwarder-auth
                account_id: << parameters.auth-account_id >>
                package_name: "auth-pretoken"
                version_filename: "auth-pretoken"
                profile: "auth"
                image_arch: << parameters.image_arch >>	
      
      # (4) auth-msg
      - when:
          condition: << parameters.auth-msg >>
          steps:
            - publish_lambda_version:
                <<: *publish_lambda_version
                function_name: "auth-msg-<< parameters.env_name >>-<< parameters.data_center >>-lambda"
                forwarder_function_name: << parameters.env_name >>-<< parameters.data_center >>-kusto-cloudwatch-forwarder-auth
                account_id: << parameters.auth-account_id >>
                package_name: "auth-msg"
                version_filename: "auth-msg"
                profile: "auth"
                image_arch: << parameters.image_arch >>

      # (5) auth-presignup
      - when:
          condition: << parameters.auth-presignup >>
          steps:
            - publish_lambda_version:
                <<: *publish_lambda_version
                function_name: "auth-presignup-<< parameters.env_name >>-<< parameters.data_center >>-lambda"
                forwarder_function_name: << parameters.env_name >>-<< parameters.data_center >>-kusto-cloudwatch-forwarder-auth
                account_id: << parameters.auth-account_id >>
                package_name: "auth-presignup"
                version_filename: "auth-presignup"
                profile: "auth"
                image_arch: << parameters.image_arch >>

      # (6) webhook-gateway
      - when:
          condition: << parameters.webhook-gateway >>
          steps:
            - publish_lambda_version:
                <<: *publish_lambda_version
                function_name: "webhook-gateway-<< parameters.env_name >>-<< parameters.data_center >>-lambda"
                forwarder_function_name: << parameters.env_name >>-<< parameters.data_center >>-kusto-cloudwatch-forwarder
                account_id: << parameters.webhook-gateway-account_id >>
                package_name: "webhook-gateway"
                version_filename: "webhook-gateway"
                image_arch: << parameters.webhook-gateway-image_arch >>
                profile: "be"

      # (7) secrets-validator-serverless
      - when:
          condition: << parameters.secrets-validator-serverless >>
          steps:
            - publish_lambda_version:
                <<: *publish_lambda_version
                function_name: "secrets-validator-<< parameters.env_name >>-<< parameters.data_center >>-lambda"
                account_id: << parameters.netscanner-account_id >>
                package_name: "secrets-validator-serverless-lambda"
                version_filename: "secrets-validator-serverless"
                profile: "netscanner"
                image_arch: << parameters.secrets-validator-image-arch >>

      - wiz-slack/simple_notification:
          slack_channel: << parameters.slack_channel >>
          notify_on: fail
          enable_slack_mention: false
          title: "Publish lambda version"
          content: |
            Publish lambdas for << parameters.data_center >> failed! Check it out in the CircleCI job :circleci:
  create-monitor-tenant:
    parameters:
      env_name:
        type: string
        default: ""
      dc_region:
        type: string
        default: ""
      dc_name:
        type: string
        default: ""
      dcs:
        type: string
        default: "test-eu3"
      runner:
        type: string
        default: "dummy_runner"
    working_directory: ~/project
    executor:
      name: ops_runner
      runner: << parameters.runner >>
    steps:
      - checkout
      - check_for_rerun_with_ssh
      - run:
          name: Set AWS credentials
          command: |
              echo 'export AWS_ACCESS_KEY_ID=${TF_AWS_ACCESS_KEY_ID}' >> $BASH_ENV
              echo 'export AWS_SECRET_ACCESS_KEY=${TF_AWS_SECRET_ACCESS_KEY}' >> $BASH_ENV
              echo 'export AWS_DEFAULT_REGION=<< parameters.dc_region >>' >> $BASH_ENV
      - run:
          environment:
            ENV: << parameters.env_name >>
            DC_NAME: << parameters.dc_name >>
            DC_REGION: << parameters.dc_region >>
          name: Create monitor and verification tenants
          no_output_timeout: 20m
          command: |
              echo "Creating Tenants"
              bash ~/project/.circleci/scripts/create-monitor-tenant-temp.sh
              echo "$(cat /tmp/tenants/user_pools.txt)"
      - run:
          name: Set AWS credentials - Auth
          command: |
              echo 'export AWS_ACCESS_KEY_ID=${COGNITO_AWS_ACCESS_KEY_ID}' >> $BASH_ENV
              echo 'export AWS_SECRET_ACCESS_KEY=${COGNITO_AWS_SECRET_ACCESS_KEY}' >> $BASH_ENV
              echo 'export AWS_DEFAULT_REGION=<< parameters.dc_region >>' >> $BASH_ENV
              source $BASH_ENV
      - run:
          environment:
            ENV: << parameters.env_name >>
            DC_NAME: << parameters.dc_name >>
            DC_REGION: << parameters.dc_region >>
          name: Update monitor and verification users
          command: |
            echo "Updating Users"
            bash ~/project/.circleci/scripts/create-monitor-users.sh
  add-monitors-silence:
    parameters:
      grafana_url:
        type: string
        default: ""
      runner:
        type: string
        default: ""
    executor:
      name: ops_runner
      runner: << parameters.runner >>
    steps:
      - checkout
      - run_python_script:
          step_name: "Add Grafana silence"
          relative_path: .circleci/scripts/monitoring-silence
          pip_requirement: true
          script_name: "monitoring-management.py"
          script_args: "--grafana_url << parameters.grafana_url >> --action add_grafana_silence"
      - run_python_script:
          step_name: "Add DataDog downtime"
          relative_path: .circleci/scripts/monitoring-silence
          pip_requirement: true
          script_name: "monitoring-management.py"
          script_args: "--action add_dd_downtime"
  create-tenants:
    environment:
      TF_VAR_account_id: "<< parameters.account_id >>"
    parameters:
      env_name:
        type: string
        default: ""
      dc_region:
        type: string
        default: ""
      dc_name:
        type: string
        default: ""
      dcs:
        type: string
        default: "test-eu3"
      username:
        type: string
        default: ""
      runner:
        type: string
        default: "dummy_runner"
      account_id:
        type: string
      profile:
        type: string
        default: "be"
      slack_channel:
        type: string
        default: "wiz-neptune-team"
    working_directory: ~/project
    executor:
      name: ops_runner
      runner: << parameters.runner >>
    steps:
      - checkout
      - check_for_rerun_with_ssh
      - set-aws-creds-tf
      - run:
          name: validate creds in context
          command: |
            suffix=<< parameters.account_id >>
            full_var_name="COGNITO_AWS_ACCESS_KEY_ID_${suffix}"
            echo "Checking if $full_var_name is set in context"
            env | grep -q $full_var_name
            if [ $? -ne 0 ]; then
                echo "${full_var_name} is not set"
                echo "No AWS credentials found for account ${suffix} - $full_var_name"
                echo "Please add auth cred to terraform-vars-<env> context"
                echo "Find more detail here - https://www.notion.so/wizio/How-to-add-backend-account-9eca3bfa2a60488ba2e5e7bcf84d97e3?pvs=4#9ed433441df145f091a7565cda73b352"
                exit 1
            fi
            echo "$full_var_name is set"
            full_var_name="COGNITO_AWS_SECRET_ACCESS_KEY_${suffix}"
            echo "Checking if $full_var_name is set in context"
            env | grep -q $full_var_name
            if [ $? -ne 0 ]; then
                echo "${full_var_name} is not set"
                echo "No AWS credentials found for account ${suffix} - $full_var_name"
                echo "Please add auth cred to terraform-vars-<env> context"
                echo "Find more detail here - https://www.notion.so/wizio/How-to-add-backend-account-9eca3bfa2a60488ba2e5e7bcf84d97e3?pvs=4#9ed433441df145f091a7565cda73b352"
                exit 1
            fi
            echo "$full_var_name is set"
      - run:
          environment:
            ENV: << parameters.env_name >>
            DC_NAME: << parameters.dc_name >>
            DC_REGION: << parameters.dc_region >>
            USERNAME: << parameters.username >>
            AWS_PROFILE: << parameters.profile >>
          name: Create monitor and verification tenants
          no_output_timeout: 20m
          command: |
              echo "Creating Tenants"
              bash ~/project/.circleci/scripts/create-monitor-tenant.sh
              echo "$(cat /tmp/tenants/user_pools.txt)"
      - run:
          environment:
            ENV: << parameters.env_name >>
            DC_NAME: << parameters.dc_name >>
            DC_REGION: << parameters.dc_region >>
          name: Update monitor and verification users (Auth Account)
          command: |
            suffix=<< parameters.account_id >>

            # Dynamic env var by account id
            ACCESS_KEY_ID_ENV_VAR="COGNITO_AWS_ACCESS_KEY_ID_${suffix}"
            SECRET_ACCESS_KEY_ENV_VAR="COGNITO_AWS_SECRET_ACCESS_KEY_${suffix}"

            # Into needed environment var
            echo 'export AWS_ACCESS_KEY_ID=${!ACCESS_KEY_ID_ENV_VAR}' >> $BASH_ENV
            echo 'export AWS_SECRET_ACCESS_KEY=${!SECRET_ACCESS_KEY_ENV_VAR}' >> $BASH_ENV
            echo 'export AWS_DEFAULT_REGION=<< parameters.dc_region >>' >> $BASH_ENV
            source $BASH_ENV

            echo "Updating Users"
            bash ~/project/.circleci/scripts/create-monitor-users.sh
      - when:
          condition:
            equal: [ prod, << parameters.env_name >> ]
          steps:
            - wiz-slack/simple_notification:
                slack_channel: << parameters.slack_channel >>
                notify_on: success
                enable_slack_mention: false
                circle_link: ""
                title: "New production DC"
                content: |
                  Hi Neptune team,
                  > We’ve added a new production DC.
                  > Please add this cluster to your internal monitoring.
                  > -----------------------------------------------------
                  > - Account: << parameters.account_id >>
                  > - Region:  << parameters.dc_region >>
                  > - Cluster Name: << parameters.env_name >>-<< parameters.dc_name >>-archmodel
                  > -----------------------------------------------------
                  > Thank you :pray:
  onprem_agent_rootfs_package_publish:
    parameters:
      runner:
        type: string
      space_delimited_dc_list:
        type: string
      env:
        type: string
      account:
        type: string
      account_id:
        type: string
      replicateLatest:
        type: string
        default: "false"
    docker:
      - image: 197171649850.dkr.ecr.eu-west-1.amazonaws.com/beyond/external/aws-cli:2.15.17-main-multiarch
    resource_class: wiz-sec/<< parameters.runner >>
    working_directory: ~/project
    steps:
      - checkout
      - run:
          name: install python
          command: |
            pip3 install boto3
            pip3 install PyYAML
      - check_for_rerun_with_ssh
      - run:
          name: Publish Onprem Agent rootfs package
          environment:
            DC_LIST: << parameters.space_delimited_dc_list >>
            ENV: << parameters.env >>
            ACCOUNT: << parameters.account >>
            ACCOUNT_ID: << parameters.account_id >>
            REPLICATE_LATEST: << parameters.replicateLatest >>
          command: bash ~/project/.circleci/scripts/sensor/publish_disk_scanner_linux.sh
      - wiz-slack/simple_notification:
          slack_channel: onprem-agent-deployments
          notify_on: always
          enable_slack_mention: false
          title: "Onprem Agent rootfs package publishing"
          content: |
            Onprem Agent rootfs package publishing to << parameters.account >> account. Check it out in the CircleCI job :circleci 
  publish_outpost_lite_image:
    parallelism: 1
    executor:
      name: replicator
      resource_class: small
    parameters:
      image_name:
        type: string
    steps:
      - checkout
      - setup_remote_docker
      - ecr_docker_login:
          region: $AWS_REGION
          aws_ecr_account_url: $AWS_ECR_ACCOUNT_URL
          aws_access_key: $AWS_ACCESS_KEY_ID
          aws_access_key_secret: $AWS_SECRET_ACCESS_KEY
      - run:
          name: Prepare << parameters.image_name >> version
          command: |
            export VERSION_FILE="deployment/versions/<< parameters.image_name >>.versions.yaml.gotmpl"
            export SOURCE_VERSION_TAG=$(grep "outpostLiteRunner" "${VERSION_FILE}" | sed 's/outpostLiteRunner.*: "\(.*\)"/\1/')-multiarch
            export FULL_LATEST_VERSION_TAG=$(grep "latestVersion" "${VERSION_FILE}" | sed 's/latestVersion: "\(.*\)"/\1/')
            export BASE_LATEST_VERSION_TAG=$(grep "baseVersion" "${VERSION_FILE}" | sed 's/baseVersion: "\(.*\)"/\1/')

            branch="<< pipeline.git.branch >>"
            if [ "$branch" == "master" ]; then
              latest_suffix=""
            elif [ "$branch" == "develop" ]; then
              latest_suffix="-test"
            else
              latest_suffix="-${branch}"
            fi

            latest_version=${BASE_LATEST_VERSION_TAG}-latest${latest_suffix}

            echo "export SOURCE_VERSION_TAG=$SOURCE_VERSION_TAG" >> $BASH_ENV
            echo "export FULL_LATEST_VERSION_TAG=$FULL_LATEST_VERSION_TAG" >> $BASH_ENV
            echo "export LATEST_VERSION_TAG=$latest_version" >> $BASH_ENV
      - replicate_image_from_wiztools_dependencies
      - replicate_image_from_wiztools: &replicate_params
          source_registry: azure-wizio
          source_package_name: << parameters.image_name >>
          source_tag: $SOURCE_VERSION_TAG
          target_registries: azure-wizio azure-registrywizio
          target_package_name: << parameters.image_name >>
          target_tags: $LATEST_VERSION_TAG $FULL_LATEST_VERSION_TAG
      # WZ-17021 - back compat for customers using the old image
      - when:
          condition:
            equal: [<< parameters.image_name >>, "outpost-lite-runner-container-registry"]
          steps:
          - replicate_image_from_wiztools:
              <<: *replicate_params
              target_package_name: outpost-lite-runner
  personal-environment: 
    parameters:
      account_id:
        type: string
        default: "859607572276"
      playground_name:
        type: string
        default: personalenvironment-eu1
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
    working_directory: ~/project
    executor:
      name: ops_runner
      runner: bootstrap-rde
    steps:
      - checkout
      - run:
          name : Terraform check formatting
          command: terraform fmt -check -recursive -diff ~/project/terraform
      - run:
          name: terraform select (or create) new workspace
          command: |
            cd terraform/personal-environment
            terraform init
            terraform workspace select << parameters.playground_name >> || terraform workspace new << parameters.playground_name >>
      - run:
          name: Terraform validate
          command: terraform validate    
      - check_for_rerun_with_ssh
      - run:
          name: terraform plan
          command: |
            cd terraform/personal-environment
            terraform plan -lock=false -var="account_id=<< parameters.account_id >>" -input=false -out=tfplan
      - when:
          condition:
            equal: [ develop , << pipeline.git.branch >> ]
          steps:
            - run:
                name: terraform apply
                command: |
                  cd terraform/personal-environment
                  terraform apply tfplan
  promote-public-image:
    parallelism: 1
    executor:
      name: replicator
    working_directory: ~/project
    parameters:
      env:
        type: string
      component:
        type: string
      version_file_key:
        type: string
      major_tag_suffix:
        type: string
        default: ""
    steps:
      - checkout
      - setup_remote_docker
      - setup_docker:
          region: $AWS_REGION
          aws_ecr_account_url: $AWS_ECR_ACCOUNT_URL
          aws_access_key: $AWS_ACCESS_KEY_ID
          aws_access_key_secret: $AWS_SECRET_ACCESS_KEY
      - run:
          name: Promote << parameters.component >>
          command: |
              export SOURCE_REGISTRY="$AWS_ECR_ACCOUNT_URL/beyond"
              export PATCH_VERSION="<< pipeline.number >>"
              bash .circleci/scripts/promote_public_image.sh << parameters.component >> << parameters.version_file_key >> << parameters.major_tag_suffix >>
              echo "export PATCH_VERSION=${PATCH_VERSION}" >> $BASH_ENV
              SOURCE_IMAGE_TAG=$(cat /tmp/source_image_tag)
              echo "export SOURCE_IMAGE_TAG=${SOURCE_IMAGE_TAG}" >> $BASH_ENV
      - run:
          name: Get image tags for slack message
          command: |
              source .circleci/scripts/promote_public_image.sh
              base_version=$(get_semver_version << parameters.component >> << parameters.version_file_key >>)
              export PATCH_IMAGE_VERSION="$base_version.$PATCH_VERSION"
              export MINOR_IMAGE_VERSION="$base_version<< parameters.major_tag_suffix >>"
              echo $PATCH_IMAGE_VERSION
              echo $MINOR_IMAGE_VERSION
              echo "export PATCH_IMAGE_VERSION=${PATCH_IMAGE_VERSION}" >> $BASH_ENV
              echo "export MINOR_IMAGE_VERSION=${MINOR_IMAGE_VERSION}" >> $BASH_ENV
      - wiz-slack/simple_notification:
          slack_channel: promote-public-image-<< parameters.env >>
          notify_on: success
          enable_slack_mention: false
          title: "Promote << parameters.component >> image"
          content: |
            Promote << parameters.component >> image tags:\n Patch tag: ${PATCH_IMAGE_VERSION}\n Minor tag: ${MINOR_IMAGE_VERSION}\n Source image tag: ${SOURCE_IMAGE_TAG}

  publish_service_to_acr:
    description: export service from a given commit to acr with a given tag
    parallelism: 1
    executor:
      name: replicator
    parameters:
      env: 
        type: string
      customer_facing_folder:
        type: string
      component:
        type: string
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      publish_to_customers:
        type: string
        default: "false"
      version_to_publish:
        type: string
      version_commit_sha:
        type: string
      patch_major:
        type: string
        default: "enable"
    working_directory: ~/project
    steps:
      - checkout
      - setup_remote_docker
      - setup_docker:
          region: $AWS_REGION
          aws_ecr_account_url: $AWS_ECR_ACCOUNT_URL
          aws_access_key: $AWS_ACCESS_KEY_ID
          aws_access_key_secret: $AWS_SECRET_ACCESS_KEY
      - run:
          name: Promote << parameters.component >> image 
          description: |
              This step will promote the image from ecr to acr with the given tag
              the tag will be read from the vesion file and version mapping file
          command: |
              export IMAGE_PUBLISH_COMMIT_SHA="<< parameters.version_commit_sha >>"
              export IMAGE_PUBLISH_FULL_VERSION="<< parameters.version_to_publish >>"
              export SOURCE_REGISTRY="<< parameters.ecr_url >>" 
              export COMPONENT="<< parameters.component >>" 
              export CUSTOMER_FACING_FOLDER="<< parameters.customer_facing_folder >>"
              export ENV="<< parameters.env >>"
              export PUBLISH_TO_CUSTOMERS="<< parameters.publish_to_customers >>"
              export PATCH_MAJOR="<< parameters.patch_major >>"
              bash .circleci/scripts/publish_customer_facing_service_image.sh 
  prepare-machine-rde:
    parameters:
      createimage:
        type: boolean
        default: true
      slack_channel:
        type: string
        default: rde-template
      vanilaimageid:
        type: string
        default: ami-0f6ba4a35c933ca7c # amazon/ubuntu/images/hvm-ssd-gp3/ubuntu-noble-24.04-amd64-server-20250214, consult https://cloud-images.ubuntu.com/locator/ec2 for latest eu-north-1 AMI ID
      vscode_workspace_branch:
        type: string
        default: master
      wiz_branch:
        type: string
        default: develop
      ops_branch:
        type: string
        default: rde-bootstrap
      rde_name:
        type: string
        default: rde-template-base-002
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
    working_directory: ~/project
    executor:
      name: ops_runner
      runner: bootstrap-rde
    steps:
      - checkout
      - run:
          name: set variables
          command: |
            COMMITID="${CIRCLE_SHA1:0:10}"
            IMAGE_NAME="ami-rde-$COMMITID"
            IMAGE_ID=$(aws ec2 describe-images --region eu-north-1 --filters "Name=name,Values=$IMAGE_NAME" | jq -r '.Images[].ImageId')
            echo "export IMAGE_NAME=\"${IMAGE_NAME}\"" >> $BASH_ENV
            echo "export IMAGE_ID=\"${IMAGE_ID}\"" >> $BASH_ENV
      - run:
          name: print variables
          command: |
            echo IMAGE_NAME: $IMAGE_NAME
            echo IMAGE_ID: $IMAGE_ID
      - run:
          name: terraform select (or create) new workspace
          environment:
            username: << parameters.rde_name >>
            vscode_workspace_branch: << parameters.vscode_workspace_branch >>
          command: |
            cd terraform/rde
            terraform init
            terraform workspace select << parameters.rde_name >> || terraform workspace new << parameters.rde_name >>
      - run:
          name: terraform destroy
          command: |
            cd terraform/rde
            terraform destroy -var="name=<< parameters.rde_name >>" -var="user_email=david.vashdi@wiz.io" -auto-approve
      - run:
          name: terraform plan
          environment:
            username: << parameters.rde_name >>
            vscode_workspace_branch: << parameters.vscode_workspace_branch >>
          command: |
            cd terraform/rde
            terraform plan -var="name=<< parameters.rde_name >>" -var="ami_id=<< parameters.vanilaimageid >>" -var="user_email=david.vashdi@wiz.io" -input=false -out=tfplan
      - run:
          name: terraform apply
          command: |
            cd terraform/rde
            terraform apply tfplan
      - run:
          name: wait 0.5 min
          command: |
            sleep 30
      - configure-rde:
          task: init
          username: << parameters.rde_name >>
      - configure-rde:
          task: gitpat
          username: << parameters.rde_name >>
      - configure-rde:
          task: clonevs
          username: << parameters.rde_name >>
          vscode_workspace_branch: << parameters.vscode_workspace_branch >>
      - configure-rde:
          task: clone_all_repos
          username: << parameters.rde_name >>
          wiz_branch: << parameters.wiz_branch >>
          ops_branch: << parameters.ops_branch >>
      - configure-rde:
          task: wzupdate
          username: << parameters.rde_name >>
      - configure-rde:
          task: additional_setup_steps
          username: << parameters.rde_name >>
      - configure-rde:
          task: helm-deps-all
          username: << parameters.rde_name >>
      - configure-rde:
          task: background_build
          username: << parameters.rde_name >>
      - configure-rde:
          task: bootstrap
          username: << parameters.rde_name >>
      - configure-rde:
          task: populate
          username: << parameters.rde_name >>
      - run:
          name: wait 30 min
          command: |
            echo wait for 30 min
            for i in `seq 1 30` ; do
              echo "[$i/30] - sleeping 1 minute..."
              sleep 60
            done
      - configure-rde:
          task: warmup
          username: << parameters.rde_name >>
      - configure-rde:
          task: cleanup
          username: << parameters.rde_name >>
      - when:
          condition: << parameters.createimage >>
          steps:
            - configure-rde:
                task: createimage
                username: << parameters.rde_name >>
      - run:
          name: terraform destroy
          command: |
            cd terraform/rde
            terraform destroy -var="name=<< parameters.rde_name >>" -var="user_email=david.vashdi@wiz.io" -auto-approve
      - wiz-slack/simple_notification:
          slack_channel: rde-template
          notify_on: fail
          enable_slack_mention: false
          title: "Build RDE machine failed"
          content: |
            Build RDE failed! Please check it out in the CircleCI job :circleci: \n run the following command to connect to the machine, (make sure you run gimme-aws-creds -p rde): \n  \`rdename=rde-template-base-002; rm -rf ~/\$rdename-template.ssh ; aws secretsmanager get-secret-value --secret-id \$rdename-rde-private-key --profile rde --region eu-north-1 | jq -r .SecretString > ~/\$rdename-template.ssh  ; chmod 400 ~/\$rdename-template.ssh ; ssh -i ~/\$rdename-template.ssh ubuntu@\$rdename.rde.wiz.io;\`


  create-new-rde-machine:
    parameters:
      vscode_workspace_branch:
        type: string
        default: master
      rde_name:
        type: string
        default: rde-template-base-validator-001
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
    working_directory: ~/project
    executor:
      name: ops_runner
      runner: bootstrap-rde
    steps:
      - checkout
      - run:
          name: terraform workspace select
          environment:
            username: << parameters.rde_name >>
            vscode_workspace_branch: << parameters.vscode_workspace_branch >>
          command: |
            bash ~/project/.circleci/scripts/configure-rde.sh waitforimage
            cd terraform/rde
            terraform init
            terraform workspace select << parameters.rde_name >> || terraform workspace new << parameters.rde_name >>
      - run:
          name: terraform destroy
          command: |
            cd ~/project/terraform/rde
            terraform destroy -var="name=<< parameters.rde_name >>" -var="user_email=david.vashdi@wiz.io" -auto-approve
      - run:
          name: terraform plan - from new image
          environment:
            username: << parameters.rde_name >>
            vscode_workspace_branch: << parameters.vscode_workspace_branch >>
          command: |
            bash ~/project/.circleci/scripts/configure-rde.sh waitforimage
            cd terraform/rde
            terraform plan -var="name=<< parameters.rde_name >>" -var="user_email=david.vashdi@wiz.io" -input=false -out=tfplan
      - run:
          name: terraform apply - from new image
          command: |
            cd terraform/rde
            terraform apply tfplan
      - run:
          name: wait 15 min
          command: |
            echo wait for 15 min
            for i in `seq 1 15` ; do
              echo "[$i/15] - sleeping 1 minute..."
              sleep 60
            done
      - configure-rde:
          task: validate-image
          username: << parameters.rde_name >>
      - configure-rde:
          task: copy-images
          username: << parameters.rde_name >>
      - configure-rde:
          task: deleteoldimages
          username: << parameters.rde_name >>
      - run:
          name: terraform destroy
          command: |
            cd ~/project/terraform/rde
            terraform destroy -var="name=<< parameters.rde_name >>" -var="user_email=david.vashdi@wiz.io" -auto-approve
      - wiz-slack/simple_notification:
          slack_channel: rde-template
          notify_on: fail
          enable_slack_mention: false
          title: "Validate RDE machine failed"
          content: |
            Build RDE failed! Please check it out in the CircleCI job :circleci: \n run the following command to connect to the machine, (make sure you run gimme-aws-creds -p rde): \n  \`rdename=<< parameters.rde_name >>; rm -rf ~/\$rdename-template.ssh ; aws secretsmanager get-secret-value --secret-id \$rdename-rde-private-key --profile rde --region eu-north-1 | jq -r .SecretString > ~/\$rdename-template.ssh  ; chmod 400 ~/\$rdename-template.ssh ; ssh -i ~/\$rdename-template.ssh ubuntu@\$rdename.rde.wiz.io;\`
      - wiz-slack/simple_notification:
          slack_channel: rde-template
          notify_on: success
          enable_slack_mention: false
          title: "Validate RDE machine success"
          content: |
             :white_check_mark: A new RDE template is was created successfully :white_check_mark:

  rdo-connect-script-upload:
    working_directory: ~/project
    executor:
      name: ops_runner
      runner: test-tf
    steps:
      - checkout
      - run:
          name: upload rdo-connect script
          command: |
            echo "Uploading rdo-connect script to s3"

            export $(printf "AWS_ACCESS_KEY_ID=%s AWS_SECRET_ACCESS_KEY=%s AWS_SESSION_TOKEN=%s" \
            $(aws sts assume-role \
            --role-arn arn:aws:iam::229870817538:role/test-ops-tf \
            --role-session-name UploadRDOScript \
            --query "Credentials.[AccessKeyId,SecretAccessKey,SessionToken]" \
            --output text))

            aws s3 cp tools/scripts/rde/ode-connect-config.sh s3://rde-dev-scripts/ode-connect-config.sh
  execute-rds-backup-script:
    executor:
      name: ops_runner
      runner: << parameters.runner >>
      ecr_url: << parameters.ecr_url >>
    description: run rds backup 
    parameters:
      datacenter:
        type: string
      command_to_exec:
        type: string
      cloud:
        type: string
        default: aws
      assume-role-arn:
        type: string
      runner:
        type: string
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      slack_notification:
        type: boolean
        default: true
      notification_content:
        type: string
    steps:
      - checkout
      - get_aws_cli
      - get_kubectl
      - set-aws-creds-file:
          cloud: << parameters.cloud >>
      - assume_role: 
          profile: "assumed_role"
          role-arn: << parameters.assume-role-arn >>
      - run:
          name: set default region and profile 
          command: |
            AC=$(aws --profile assumed_role configure get aws_access_key_id)
            SC=$(aws --profile assumed_role configure get aws_secret_access_key)
            ST=$(aws --profile assumed_role configure get aws_session_token)
            echo "export AWS_ACCESS_KEY_ID=$AC" >> $BASH_ENV
            echo "export AWS_SECRET_ACCESS_KEY=$SC" >> $BASH_ENV
            echo "export AWS_SESSION_TOKEN=$ST" >> $BASH_ENV
      - set_kubeconfig:
          datacenter: << parameters.datacenter >>
          profile: assumed_role
      - check_for_rerun_with_ssh
      - kubectl_exec_online:
          deployment: utils-backup
          namespace: backup
          cmd:  << parameters.command_to_exec >>
      - when:
          condition: << parameters.slack_notification >>
          steps:
            - wiz-slack/simple_notification:
                slack_channel: rds-backups
                notify_on: fail
                enable_slack_mention: false
                title: "rds-backup failed in << parameters.datacenter >>"
                content: << parameters.notification_content >>


  copy-rds-backup-scripts:
    executor:
      name: ops_runner
      runner: << parameters.runner >>
      ecr_url: << parameters.ecr_url >>
    description: copy script to utils-backup
    parameters:
      datacenter:
        type: string
      cloud:
        type: string
        default: aws
      assume-role-arn:
        type: string
      runner:
        type: string
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
    steps:
      - checkout
      - get_aws_cli
      - get_kubectl
      - set-aws-creds-file:
          cloud: << parameters.cloud >>
      - check_for_rerun_with_ssh
      - assume_role: 
          profile: "assumed_role"
          role-arn: << parameters.assume-role-arn >>
      - run:
          name: set default region and profile 
          command: |
            AC=$(aws --profile assumed_role configure get aws_access_key_id)
            SC=$(aws --profile assumed_role configure get aws_secret_access_key)
            ST=$(aws --profile assumed_role configure get aws_session_token)
            echo "export AWS_ACCESS_KEY_ID=$AC" >> $BASH_ENV
            echo "export AWS_SECRET_ACCESS_KEY=$SC" >> $BASH_ENV
            echo "export AWS_SESSION_TOKEN=$ST" >> $BASH_ENV
      - set_kubeconfig:
          datacenter: << parameters.datacenter >>
          profile: assumed_role
      - run:
          name: copy files to utils-backup
          no_output_timeout: 120m
          command: |
            utils_backup_pod_name=$(kubectl -n backup get pod --no-headers -o custom-columns=":metadata.name")
            kubectl -n backup cp $(git rev-parse --show-toplevel)/tools/rds-backup/scripts/rds-backup $utils_backup_pod_name:/home/wiz
      - wiz-slack/simple_notification:
          slack_channel: rds-backups
          notify_on: fail
          enable_slack_mention: false
          title: "rds-backup failed in << parameters.datacenter >>"
          content: |
            @oncalldevops \n failed to copy rds-backup files to << parameters.datacenter >>, please contact Devops team
  sync_s3_sensor_definitions:
    environment:
      TF_VAR_account_id: "<< parameters.account_id >>"
    circleci_ip_ranges: false
    executor:
      name: ops-python-only-runner
      runner: << parameters.runner >>
      version: "3.10-main-amd64"
      ecr_url: << parameters.ecr_url >>
    working_directory: ~/project
    parameters:
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      env_name:
        type: string
      space_delimited_dc_list:
        type: string
      cloud:
        type: string
        default: aws
      arn_prefix:
        type: string
        default: aws
      sensor_defs_branch:
        type: string
      paths_to_override:
        type: string
        default: ""
      runner:
        type: string
        default: "dummy_runner"
      account:
        type: string
      account_id:
        type: string
    steps:
      - checkout
      - sensor_defs_install_deps # TODO: Implement cache
      - add_single_ssh_key:
          fingerprint: '7e:05:b0:bc:d0:15:21:82:cb:cd:ab:e7:66:de:39:47'
          host: sensor-defs
      - run:
          name:
          command: |
            git clone -b << parameters.sensor_defs_branch >> git@sensor-defs:wiz-sec/sensor-defs.git
      - run:
          name: Build hacks (fixed-srand lib)
          command: |
            cd sensor-defs
            task compile-hacks
      - run:
          name: Integrate latest sensor versions into versions.yaml
          command: |
            jq 'to_entries | map(select(.key != "__main__") | {tag: .key, version: .value}) | { "latest-sensor-versions": . }' sensor/sensor_version.txt | yq e -P - > sensor-defs/definitions/versions.yaml
            cat sensor-defs/definitions/versions.yaml
      - run:
          name: Run yaml customizations
          command: |
            cd sensor-defs
            pipenv install
            echo "HSM: $sensor_hsm_clientId $sensor_hsm_keyvault_url $sensor_hsm_key_name"
            if [[ -n "$sensor_hsm_clientId" ]]; then
              echo "set hsm credentials"
              export AZURE_CLIENT_ID=$sensor_hsm_clientId
              export AZURE_CLIENT_SECRET=$sensor_hsm_clientSecret
              export AZURE_TENANT_ID=$sensor_hsm_tenantId

              # az login --service-principal -u $hsm_sign_key_clientId -p $hsm_sign_key_clientSecret --tenant $hsm_sign_key_tenantId
              export DEFS_SIG_HSM_NAME=$sensor_hsm_keyvault_url
              export DEFS_SIG_HSM_KEY=$sensor_hsm_key_name
            fi
            LAST_MASTER_COMMIT=$(git merge-base origin/master HEAD)
            CONTENT_COMMIT=$(git log --format=%h -1 $LAST_MASTER_COMMIT -- definitions/)
            CONTENT_VERSION=$(git rev-list --count --first-parent $CONTENT_COMMIT)
            task run -- --output /tmp/defs --package --content-version $CONTENT_VERSION
      - set-aws-creds-tf
      - get_aws_cli
      - run:
          name: Sync s3 buckets
          environment:
            DC_LIST: << parameters.space_delimited_dc_list >>
            PATHS_TO_OVERRIDE: << parameters.paths_to_override >>
            ENV: << parameters.env_name >>
            ACCOUNT: << parameters.account >>
            PROFILE: "sensor"
          command: bash ~/project/.circleci/scripts/sensor/publish_sensor_defs.sh
      - wiz-slack/simple_notification:
          slack_channel: sensor-defs-cd
          notify_on: fail
          enable_slack_mention: false
          title: "Sensor definitions replication"
          content: |
            Sensor definitions replication failed on << parameters.env_name >>-<< parameters.account >>! Check it out in the CircleCI job :circleci:

  sync_s3_sensor_definitions_fed:
    circleci_ip_ranges: true
    executor:
      name: python-only
      resource_class: xlarge
    working_directory: ~/project
    parameters:
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      env_name:
        type: string
      space_delimited_dc_list:
        type: string
        default: " "
      cloud:
        type: string
        default: aws
      arn_prefix:
        type: string
        default: aws
      sensor_defs_branch:
        type: string
      paths_to_override:
        type: string
        default: ""
      runner:
        type: string
        default: "dummy_runner"
      account:
        type: string
      account_id:
        type: string
    steps:
      - checkout
      - sensor_defs_install_deps # TODO: Implement cache
      - add_single_ssh_key:
          fingerprint: '7e:05:b0:bc:d0:15:21:82:cb:cd:ab:e7:66:de:39:47'
          host: sensor-defs
      - run:
          name:
          command: |
            git clone -b << parameters.sensor_defs_branch >> git@sensor-defs:wiz-sec/sensor-defs.git
      - run:
          name: Build hacks (fixed-srand lib)
          command: |
            cd sensor-defs
            task compile-hacks
      - run:
          name: Integrate latest sensor versions into versions.yaml
          command: |
            jq 'to_entries | map(select(.key != "__main__") | {tag: .key, version: .value}) | { "latest-sensor-versions": . }' sensor/sensor_version.txt | yq e -P - > sensor-defs/definitions/versions.yaml
            cat sensor-defs/definitions/versions.yaml
      - run:
          name: Run yaml customizations
          command: |
            cd sensor-defs
            pyenv install 3.10.14 #TODO move to deps
            pyenv global 3.10.14
            pip3 install pipenv==2022.11.11
            pipenv install

            echo "HSM: $sensor_hsm_clientId $sensor_hsm_keyvault_url $sensor_hsm_key_name"
            if [[ -n "$sensor_hsm_clientId" ]]; then
              echo "set hsm credentials"
              export AZURE_CLIENT_ID=$sensor_hsm_clientId
              export AZURE_CLIENT_SECRET=$sensor_hsm_clientSecret
              export AZURE_TENANT_ID=$sensor_hsm_tenantId

              # az login --service-principal -u $hsm_sign_key_clientId -p $hsm_sign_key_clientSecret --tenant $hsm_sign_key_tenantId
              export DEFS_SIG_HSM_NAME=$sensor_hsm_keyvault_url
              export DEFS_SIG_HSM_KEY=$sensor_hsm_key_name
            fi

            LAST_MASTER_COMMIT=$(git merge-base origin/master HEAD)
            CONTENT_COMMIT=$(git log --format=%h -1 $LAST_MASTER_COMMIT -- definitions/)
            CONTENT_VERSION=$(git rev-list --count --first-parent $CONTENT_COMMIT)
            task run -- --output /tmp/defs --package --content-version $CONTENT_VERSION

      - set-aws-creds-file:
          cloud: << parameters.cloud >>

      - get_aws_cli
      - run:
          name: Sync s3 buckets
          environment:
            DC_LIST: << parameters.space_delimited_dc_list >>
            PATHS_TO_OVERRIDE: << parameters.paths_to_override >>
            ENV: << parameters.env_name >>
            ACCOUNT: << parameters.account >>
            PROFILE: "sensor-defs"
          command: |
            export AWS_DEFAULT_REGION=us-gov-west-1
            bash ~/project/.circleci/scripts/sensor/publish_sensor_defs.sh

      - wiz-slack/simple_notification:
          slack_channel: sensor-defs-cd
          notify_on: fail
          enable_slack_mention: false
          title: "Sensor definitions replication"
          content: |
            Sensor definitions replication failed on << parameters.env_name >>-<< parameters.account >>! Check it out in the CircleCI job :circleci:

  publish_internal_sensor_image:
    parallelism: 1
    executor:
      name: replicator
      resource_class: small
    working_directory: ~/project
    parameters:
      sensor_account_id:
        type: string
        default: "442784308900"
      slack_channel:
        type: string
        default: sensor-ci
      region:
        type: string
        default: us-east-2
      dry_run_mode:
        type: string
        default: "true"
      image_name:
        type: string
        default: sensor
      version_file:
        type: string
        default: sensor/sensor_internal_version.txt
      fips_version:
        type: string
        default: fips
    steps:
      - checkout
      - setup_remote_docker
      - ecr_docker_login:
          region: $AWS_REGION
          aws_ecr_account_url: $AWS_ECR_ACCOUNT_URL
          aws_access_key: $AWS_ACCESS_KEY_ID
          aws_access_key_secret: $AWS_SECRET_ACCESS_KEY

      - run:
          name: Publish internal sensor image to ACR (for DA/outpost)
          command: |
            export VERSION_FILE="<< parameters.version_file >>"
            export IMAGE_NAME="<< parameters.image_name >>"
            export DRY_RUN="<< parameters.dry_run_mode >>"
            export TARGET_IMAGE_NAME="sensor-da"
            bash .circleci/sensor/publish_sensor_image.sh

      - run:
          name: Prepare Sensor internal FIPS version
          command: |
            export VERSION_FILE="<< parameters.version_file >>"
            export SOURCE_VERSION_TAG=$(jq -r '.<< parameters.fips_version >>' "${VERSION_FILE}")
            echo "export SOURCE_VERSION_TAG=$SOURCE_VERSION_TAG" >> $BASH_ENV
      - when:
          condition:
            not:
              equal: [ "true", << parameters.dry_run_mode >> ]
          steps:
            - replicate_image_from_wiztools_dependencies
            - replicate_image_from_wiztools:
                source_registry: azure-wiziosensor
                source_package_name: << parameters.image_name >>
                source_tag: $SOURCE_VERSION_TAG
                target_registries: wiz-fedtest wiz-fedramp azure-wizfedramp-v2 azure-registryfedrampwizio
                target_package_name: sensor-da
                target_tags: $SOURCE_VERSION_TAG << parameters.fips_version >>
      - wiz-slack/simple_notification:
          slack_channel: << parameters.slack_channel >>
          notify_on: fail
          enable_slack_mention: false
          title: "Sensor Internal Image Publish Failed"
          content: |
            Sensor Image Publish Failed! Check it out in the CircleCI job :circleci:

  publish_sensor_image:
    parallelism: 1
    executor:
      name: replicator
      resource_class: small
    working_directory: ~/project
    parameters:
      sensor_account_id:
        type: string
        default: "442784308900"
      slack_channel:
        type: string
        default: sensor-ci
      region:
        type: string
        default: us-east-2
      dry_run_mode:
        type: string
        default: "true"
      image_name:
        type: string
        default: sensor
      version_file:
        type: string
        default: sensor/sensor_version.txt
      current_main_version:
        type: string
        default: v1 # TODO: read this dynamically from the version file
    steps:
      - checkout
      - setup_remote_docker
      - ecr_docker_login:
          region: $AWS_REGION
          aws_ecr_account_url: $AWS_ECR_ACCOUNT_URL
          aws_access_key: $AWS_ACCESS_KEY_ID
          aws_access_key_secret: $AWS_SECRET_ACCESS_KEY

      - run:
          name: Publish sensor image ECR (and preview tag)
          command: |
            export VERSION_FILE="<< parameters.version_file >>"
            export IMAGE_NAME="<< parameters.image_name >>"
            export DRY_RUN="<< parameters.dry_run_mode >>"
            bash .circleci/sensor/publish_sensor_image.sh

      - run:
          name: Prepare Sensor FIPs version
          command: |
            export VERSION_FILE=<< parameters.version_file >>
            export SOURCE_VERSION_TAG=$(jq -r '.<< parameters.current_main_version >>' "${VERSION_FILE}")
            echo "export SOURCE_VERSION_TAG=$SOURCE_VERSION_TAG" >> $BASH_ENV
      - when:
          condition:
            not:
              equal: [ "true", << parameters.dry_run_mode >> ]
          steps:
            - replicate_image_from_wiztools_dependencies
            - replicate_image_from_wiztools:
                source_registry: azure-wiziosensor
                source_package_name: << parameters.image_name >>
                source_tag: $SOURCE_VERSION_TAG
                target_registries: wiz-fedtest wiz-fedramp azure-wizfedramp-v2 azure-registryfedrampwizio wiz-demo wiz-gov
                target_package_name: << parameters.image_name >>
                target_tags: $SOURCE_VERSION_TAG << parameters.current_main_version >>
      - wiz-slack/simple_notification:
          slack_channel: << parameters.slack_channel >>
          notify_on: fail
          enable_slack_mention: false
          title: "Sensor Image Publish Failed"
          content: |
            Sensor Image Publish Failed! Check it out in the CircleCI job :circleci:

  publish_sensor_chart:
    parallelism: 1
    executor:
      name: ops
      resource_class: small
    working_directory: ~/project
    parameters:
      sensor_account_id:
        type: string
        default: "442784308900"
      slack_channel:
        type: string
        default: sensor-ci
      region:
        type: string
        default: us-east-2
      dry_run_mode:
        type: string
        default: "true"
      cloud:
        type: string
        default: aws
    steps:
      - checkout
      - run:
          name: Authenticate to ECRs for helm
          command: aws ecr get-login-password --region << parameters.region >> | helm registry login --username AWS --password-stdin $AWS_ECR_ACCOUNT_URL
      - when:
          condition:
            or:
              - equal: [ aws-fedtest, << parameters.cloud >> ]
              - equal: [ aws-fedstg1, << parameters.cloud >> ]
              - equal: [ aws-fedstg2, << parameters.cloud >> ]
              - equal: [ aws-fedramp, << parameters.cloud >> ]
          steps:
            - set-aws-creds-file:
                 cloud: << parameters.cloud >>
      - when:
          condition:
            and:
              - not:
                  equal: [ aws-fedtest, << parameters.cloud >> ]
              - not:
                  equal: [ aws-fedstg1, << parameters.cloud >> ]
              - not:
                  equal: [ aws-fedstg2, << parameters.cloud >> ]
              - not:
                  equal: [ aws-fedramp, << parameters.cloud >> ]
          steps:
            - sensor_assume_role:
                sensor_account_id: << parameters.sensor_account_id >>

      - create_ecr_repository:
          registry: << parameters.sensor_account_id >>.dkr.ecr.<< parameters.region >>.amazonaws.com
          repository: charts/wiz-sensor
      - run:
          name: Authenticate to ECRs for helm
          command: aws ecr get-login-password --region << parameters.region >> | helm registry login --username AWS --password-stdin << parameters.sensor_account_id >>.dkr.ecr.<< parameters.region >>.amazonaws.com
      - add_single_ssh_key:
          fingerprint: '46:88:b6:e7:04:9e:f2:cf:cf:4f:03:09:e5:58:1b:f2'
          host: charts
      - run:
          name: Publish sensor chart ECR
          command: |
              export DRY_RUN="<< parameters.dry_run_mode >>"
              bash .circleci/sensor/publish_sensor_chart.sh
      - wiz-slack/simple_notification:
          slack_channel: << parameters.slack_channel >>
          notify_on: fail
          enable_slack_mention: false
          title: "Sensor Helm Chart Publish Failed"
          content: |
            Sensor helm chart publish failed! Check it out in the CircleCI job :circleci:

  publish_sensor_script:
    parallelism: 1
    docker:
      - image: cimg/aws:2023.08
    resource_class: small
    working_directory: ~/project
    parameters:
      slack_channel:
        type: string
        default: sensor-ci
    steps:
      - checkout
      - run:
          name: Publish sensor script
          command: bash ~/project/.circleci/scripts/sensor/publish_sensor_linux_script.sh
      - wiz-slack/simple_notification:
          slack_channel: << parameters.slack_channel >>
          notify_on: fail
          enable_slack_mention: false
          title: "Sensor script Publish Failed"
          content: |
            Sensor Image Publish Failed! Check it out in the CircleCI job :circleci:

  publish_windows_sensor_script:
    parallelism: 1
    docker:
      - image: cimg/aws:2023.08
    resource_class: small
    working_directory: ~/project
    parameters:
      slack_channel:
        type: string
        default: sensor-ci
    steps:
      - checkout
      - run:
          name: Publish windows sensor script
          command: bash ~/project/.circleci/scripts/sensor/publish_sensor_windows_script.sh
      - wiz-slack/simple_notification:
          slack_channel: << parameters.slack_channel >>
          notify_on: fail
          enable_slack_mention: false
          title: "Sensor windows script Publish Failed"
          content: |
            Sensor windows script Publish Failed! Check it out in the CircleCI job :circleci:

  publish_windows_sensor_service:
    parallelism: 1
    docker:
      - image: cimg/aws:2023.08
    resource_class: small
    working_directory: ~/project
    parameters:
      slack_channel:
        type: string
        default: sensor-ci
    steps:
      - checkout
      - run:
          name: Publish windows sensor service
          command: bash ~/project/.circleci/scripts/sensor/publish_sensor_windows_service.sh
      - wiz-slack/simple_notification:
          slack_channel: << parameters.slack_channel >>
          notify_on: fail
          enable_slack_mention: false
          title: "Sensor windows script Publish Failed"
          content: |
            Sensor windows script Publish Failed! Check it out in the CircleCI job :circleci:

  publish_linux_sensor:
    parameters:
      runner:
        type: string
      space_delimited_dc_list:
        type: string
      env:
        type: string
      account:
        type: string
      account_id:
        type: string
    docker:
      - image: 197171649850.dkr.ecr.eu-west-1.amazonaws.com/beyond/external/aws-cli:2.15.17-main-multiarch
    resource_class: wiz-sec/<< parameters.runner >>
    working_directory: ~/project
    steps:
      - checkout
      - run:
          name: install python
          command: |
            pip3 install boto3
            pip3 install PyYAML
      - check_for_rerun_with_ssh
      - run:
          name: publish engine
          environment:
            DC_LIST: << parameters.space_delimited_dc_list >>
            ENV: << parameters.env >>
            ACCOUNT: << parameters.account >>
            ACCOUNT_ID: << parameters.account_id >>
          command: bash ~/project/.circleci/scripts/sensor/publish_sensor_linux.sh
      - wiz-slack/simple_notification:
          slack_channel: sensor-ci
          notify_on: always
          enable_slack_mention: false
          title: "Sensor Linux Publish"
          content: |
            Sensor Linux publish on << parameters.account >>! Check it out in the CircleCI job :circleci


  publish_windows_sensor:
    parameters:
      runner:
        type: string
      space_delimited_dc_list:
        type: string
      env:
        type: string
      account:
        type: string
      account_id:
        type: string
    docker:
      - image: 197171649850.dkr.ecr.eu-west-1.amazonaws.com/beyond/external/aws-cli:2.15.17-main-multiarch
    resource_class: wiz-sec/<< parameters.runner >>
    working_directory: ~/project
    steps:
      - checkout
      - run:
          name: install python
          command: |
            pip3 install boto3
            pip3 install PyYAML
      - check_for_rerun_with_ssh
      - run:
          name: publish windows engine
          environment:
            DC_LIST: << parameters.space_delimited_dc_list >>
            ENV: << parameters.env >>
            ACCOUNT: << parameters.account >>
            ACCOUNT_ID: << parameters.account_id >>
          command: bash ~/project/.circleci/scripts/sensor/publish_sensor_windows.sh
      - wiz-slack/simple_notification:
          slack_channel: sensor-ci
          notify_on: always
          enable_slack_mention: false
          title: "Sensor Windows Publish"
          content: |
            Sensor Windows publish on << parameters.account >>! Check it out in the CircleCI job :circleci


  publish-packages:
    docker:
      - image: 197171649850.dkr.ecr.eu-west-1.amazonaws.com/beyond/external/google-cloud-cli:485.0.0-main-multiarch
    resource_class: small
    working_directory: ~/project
    steps:
      - checkout
      - run:
          name: publish packages
          command: bash ~/project/.circleci/scripts/sensor/publish_sensor_packages.sh
      - wiz-slack/simple_notification:
          slack_channel: sensor-ci
          notify_on: always
          enable_slack_mention: false
          title: "Sensor Packages Publish"
          content: |
            Sensor packages publish, Check it out in the CircleCI job :circleci
  terraform-precheck:
    circleci_ip_ranges: false
    executor:
      name: ops_runner
      runner: << parameters.runner >>
      ecr_url: << parameters.ecr_url >>
    environment:
      TF_VAR_account_id: "<< parameters.account_id >>"
      TF_VAR_env: "<< parameters.env >>"
    parameters:
      executor:
        type: string
        default: ops
      avoid_concurrent_runs:
        type: boolean
        default: false
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      directory:
        type: string
        default: terraform
      env:
        type: string
        default: test
      workspace:
        type: string
        default: test-eu1
      tf_parallelism:
        type: integer
        default: 30  
      slack_channel:
        type: string
        default: test-deployments
      cloud:
        type: string
        default: aws
      cluster_type:
        type: string
      notify_on:
        type: string
        default: fail
      enable_slack_mention:
        type: boolean
        default: true
      phase:
        type: string
        default: test
      lock_state:
        type: boolean
        default: true
      refresh:
        type: boolean
        default: true
      block_rollbacks:
        type: boolean
        default: false
      update_kubeconfig:
        type: boolean
        default: false
      cluster_name:
        type: string
        default: ""
      region:
        type: string
        default: ""
      enable_debug_logs:
        type: boolean
        default: false
      runner:
        type: string
        default: "dummy_runner"
      dr_mode:
        type: boolean
        description: If true - will try to retain records from origin_dc statefile
        default: false
      origin_dc:
        type: string
        description: The name of the origin DC to retain
        default: ""
      pr_mode:
        type: boolean
        default: true
      account_id:
        type: string
      get_aws_creds_tf:
        type: boolean
        default: true
      fingerprint_terraform_outputs:
        type: string
        default: '4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04'
      clone_terraform_outputs:
        type: boolean
        default: false
    steps:
      - run: 
          name: Checkout Shallow
          command: |
            /local-orbs/checkout_shallow.sh
      - clone_circleci_wiztools
      - wiztools/set_wiz_cache
      - run_steps_with_mutex:
          avoid_concurrent_runs: << parameters.avoid_concurrent_runs >>
          mutex_id: "<< parameters.directory >>-<< parameters.workspace >>"
          mutex_expiration_seconds: "600"
          wait_timeout_seconds: "600"
          steps: # Please note that a mutex will create only if avoid_concurrent_runs parameter is true.
            - when:
                condition: << parameters.clone_terraform_outputs >>
                steps:
                  - clone_tf_outputs
            - init-terraform-workspace:
                cloud: << parameters.cloud >>
                workspace: << parameters.workspace >>
                directory: << parameters.directory >>
                cluster_type: << parameters.cluster_type >>
                block_rollbacks: << parameters.block_rollbacks >>
                pr_mode: << parameters.pr_mode >>
                get_aws_creds_tf: << parameters.get_aws_creds_tf >>
                env: << parameters.env >>
                cluster_name: << parameters.cluster_name >>
            - maybe_recovery_steps: &recovery_steps
                dr_mode: << parameters.dr_mode >>
                env: << parameters.env >>
                origin_dc: << parameters.origin_dc >>
                workspace: << parameters.workspace >>
                fingerprint_terraform_outputs: << parameters.fingerprint_terraform_outputs >>
            - when:
                condition: << parameters.update_kubeconfig >>
                steps:
                  - update-kubeconfig:
                      cluster_name: << parameters.cluster_name >>
                      region: << parameters.region >>
            - enable_terraform_logs:
                enable_debug_logs: << parameters.enable_debug_logs >>
                env: << parameters.env >>
                workspace: << parameters.workspace >>
                directory: << parameters.directory >>
                cloud: << parameters.cloud >>
                steps:
                  - when:
                      <<: *when_develop_and_non_deployable_branches
                      steps:
                        - run:
                            name: Terraform validate
                            command: terraform validate
                        - run:
                            name: Terraform check formatting
                            command: terraform fmt -check -recursive -diff ~/project/terraform
                  - check_for_rerun_with_ssh:
                      account_id: << parameters.account_id >>
                  - run:
                      name: Terraform plan
                      no_output_timeout: 30m
                      command: |
                        bash $(git rev-parse --show-toplevel)/.circleci/scripts/terraform-plan.sh || \
                        (echo  && echo "-----------------" && echo "Terraform first plan failed... Retrying..." && echo "-----------------" && echo  && bash $(git rev-parse --show-toplevel)/.circleci/scripts/terraform-plan.sh)
                      environment:
                        TF_WORKSPACE_SELECT: << parameters.workspace >>
                        TF_PARALLELISM: "<< parameters.tf_parallelism >>"
                        DIRECTORY: << parameters.directory >>
                        LOCK_STATE: "<< parameters.lock_state >>"
                        REFRESH: "<< parameters.refresh >>"
                        PHASE: << parameters.phase >>
            - run:
                name: Terraform Summary
                environment:
                  TF_PLAN_PATH: /tmp/plan.txt
                command: |
                  if [ -f /tmp/plan.txt ]
                  then
                    # extra prep for summary
                    cat /tmp/plan.txt | grep -v "(because" > /tmp/plan.txt1
                    export TF_PLAN_PATH=/tmp/plan.txt1
                    python3 $(git rev-parse --show-toplevel)/.circleci/scripts/plan_summary.py
                  else
                    echo "no changes, no summary"
                  fi
            - persist_to_workspace:
                root: /tmp/precheck
                paths:
                  - << parameters.workspace >>/terraform/<< parameters.directory >>/*
                  - << parameters.phase >>/reports/<< parameters.workspace >>/<< parameters.directory >>/*
                  - drift/terraform/*
            - wiz-slack/notify_deployment:
                kind: Terraform
                slack_channel: << parameters.slack_channel >>
                folder: << parameters.directory >>
                env: << parameters.workspace >>
                outcome_path: /root/project/.deployment_outcome
                notify_on: << parameters.notify_on >>
                enable_slack_mention: << parameters.enable_slack_mention >>

  terraform-apply:
    circleci_ip_ranges: false
    executor:
      name: ops_runner
      runner: << parameters.runner >>
      ecr_url: << parameters.ecr_url >>
    parallelism: 1
    environment:
      TF_VAR_account_id: "<< parameters.account_id >>"
    parameters:
      avoid_concurrent_runs:
        type: boolean
        default: false
      lock_state:
        type: boolean
        default: true
        description: dummy (just to have the same attributes as terraform-plan )
      refresh:
        type: boolean
        default: true
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      directory:
        type: string
        default: terraform
      workspace:
        type: string
        default: test-eu1
      env:
        type: string
        default: test
      slack_channel:
        type: string
        default: test-deployments
      cloud:
        type: string
        default: aws
      cluster_type:
        type: string
      enable_slack_mention:
        type: boolean
        default: true
      block_rollbacks:
        type: boolean
        default: false
      update_kubeconfig:
        type: boolean
        default: false
      cluster_name:
        type: string
        default: ""
      region:
        type: string
        default: ""
      use_plan:
        type: boolean
        default: true
      fingerprint_terraform_outputs:
        type: string
        default: '4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04'
      enable_debug_logs:
        type: boolean
        default: false
      runner:
        type: string
        default: "dummy_runner"
      dr_mode:
        type: boolean
        description: If true - will try to retain records from origin_dc statefile
        default: false
      origin_dc:
        type: string
        description: The name of the origin DC to retain
        default: ""
      pr_mode:
        type: boolean
        default: true
      account_id:
        type: string
      get_aws_creds_tf:
        type: boolean
        default: true
      clone_terraform_outputs:
        type: boolean
        default: false
    steps:
      - attach_workspace:
          at: /tmp/precheck
      - run:
          name: skip if plan is empty
          command: |
            if [[ -f "/tmp/precheck/<< parameters.workspace >>/terraform/<< parameters.directory >>/no-change" ]]; then
              echo "No changes detected, skipping apply"
              circleci-agent step halt
            fi

            # required, otherwise checkout fails when not the first step
            rm -rf ~/project
      - run: 
          name: Checkout Shallow
          command: |
            /local-orbs/checkout_shallow.sh
      - clone_circleci_wiztools
      - wiztools/set_wiz_cache
      - run_steps_with_mutex:
          avoid_concurrent_runs: << parameters.avoid_concurrent_runs >>
          mutex_id: "<< parameters.directory >>-<< parameters.workspace >>"
          mutex_expiration_seconds: "600"
          wait_timeout_seconds: "600"
          steps: # Please note that a mutex will create only if avoid_concurrent_runs parameter is true.
            - when:
                condition: << parameters.clone_terraform_outputs >>
                steps:
                  - clone_tf_outputs
            - init-terraform-workspace:
                cloud: << parameters.cloud >>
                workspace: << parameters.workspace >>
                directory: << parameters.directory >>
                cluster_type: << parameters.cluster_type >>
                block_rollbacks: << parameters.block_rollbacks >>
                pr_mode: false
                get_aws_creds_tf: << parameters.get_aws_creds_tf >>
                env: << parameters.env >>
                cluster_name: << parameters.cluster_name >>
                runner: true
            - maybe_recovery_steps: *recovery_steps
            - when:
                condition: << parameters.update_kubeconfig >>
                steps:
                  - update-kubeconfig:
                      cluster_name: << parameters.cluster_name >>
                      region: << parameters.region >>
            - enable_terraform_logs:
                enable_debug_logs: << parameters.enable_debug_logs >>
                env: << parameters.env >>
                workspace: << parameters.workspace >>
                directory: << parameters.directory >>
                cloud: << parameters.cloud >>
                steps:
                  - when:
                      <<: *when_develop_and_non_deployable_branches
                      steps:
                        - when:
                            condition:
                              not: << parameters.use_plan >>
                            steps:
                              - run:
                                  name: Terraform validate
                                  command: terraform validate
                              - run:
                                  name: Terraform check formatting
                                  command: terraform fmt -check -recursive -diff ~/project/terraform
                  - check_for_rerun_with_ssh:
                      account_id: << parameters.account_id >>
                  - run:
                      name: Terraform apply
                      no_output_timeout: 30m
                      command: |
                        bash $(git rev-parse --show-toplevel)/.circleci/scripts/terraform-apply.sh
                      environment:
                        TF_WORKSPACE_SELECT: << parameters.workspace >>
                        DIRECTORY: << parameters.directory >>
                        REFRESH: "<< parameters.refresh >>"
            - checkpoint:
                checkpoint: << parameters.workspace >>
                env: << parameters.env >>
                status: ready
                cluster_type: << parameters.cluster_type >>
                dc: << parameters.cluster_name >>
            - run:
                name: prepare terraform status file
                command: |
                  mkdir -p ~/.tf_status
                  echo $CIRCLE_SHA1 > ~/.tf_status/ops_commit.txt
            - wiztools/self_hosted_save_cache:
                cache_title: terraform status
                key: tf-apply-<< parameters.directory >>-<< parameters.workspace >>-{{ .BuildNum }}-{{ epoch }}
                path1: ~/.tf_status
            - terraform_outputs:
                env: << parameters.env >>
                workspace: << parameters.workspace >>
                directory: << parameters.directory >>
                cluster_type: << parameters.cluster_type >>
                fingerprint_terraform_outputs: << parameters.fingerprint_terraform_outputs >>
            - wiz-slack/notify_deployment:
                kind: Terraform
                slack_channel: << parameters.slack_channel >>
                folder: << parameters.directory >>
                env: << parameters.workspace >>
                outcome_path: /root/project/.deployment_outcome
                notify_on: fail
                enable_slack_mention: << parameters.enable_slack_mention >>

  create-workspace:
    environment:
      TF_VAR_account_id: "<< parameters.account_id >>"
    circleci_ip_ranges: false
    executor:
      name: ops_runner
      runner: << parameters.runner >>
      ecr_url: << parameters.ecr_url >>
    parameters:
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      envType:
        type: string
      account_id:
        type: string
      cloud:
        type: string
      runner:
        type: string
        default: "dummy_runner"
    steps:
      - checkout:
          path: ~/project
      - run:
          name: install yq
          command: |
            wget https://github.com/mikefarah/yq/releases/download/v4.25.1/yq_linux_amd64 -O /tmp/yq_linux_amd64
            mv /tmp/yq_linux_amd64 /usr/local/bin/yq
            chmod a+x /usr/local/bin/yq
      - set-aws-creds-tf
      - run:
          name: compare terraform workspaces to env_config << parameters.envType >>.yaml
          command: |
            bash $(git rev-parse --show-toplevel)/.circleci/scripts/create-terraform-workspace.sh << parameters.envType >> << parameters.account_id >> << parameters.cloud >>

  auto-approve:
    description: |
      Auto approves given step if all prechecks indicates no-change
      - Previous jobs can save precheck status to /tmp/precheck and save_workspace
      - Looks for all folders under /tmp/precheck/<subdir> - if all folders contain 'no-change'  - 
          it will programatically approve the step with the given name
    executor: python-only
    parameters:
      approval_job_name:
        type: string
      workspace:
        type: string
      directory:
        type: string    
      slack_channel:
        type: string
        default: "deploy-notification"
      enable_slack_mention:
        type: boolean
        default: true
    steps:
      - wiztools/checkout_sparse:
          checkout_paths: '.circleci/scripts/auto-approve.py .circleci/scripts/slack_notifier.py'
          shallow: false
      - attach_workspace:
          at: /tmp/precheck    
      - run:
          name: auto-approve
          command: python3 .circleci/scripts/auto-approve.py
          environment:
            APPROVAL_JOB_NAME: << parameters.approval_job_name >>
            PRECHECK_SUBDIR: << parameters.workspace >>/terraform/<< parameters.directory >>
      - wiz-slack/notify_deployment:
          kind: Terraform
          slack_channel: << parameters.slack_channel >>
          folder: << parameters.directory >>
          env: << parameters.workspace >>
          outcome_path: /tmp/precheck/<< parameters.workspace >>/terraform/<< parameters.directory >>
          notify_on: approval-needed
          enable_slack_mention: << parameters.enable_slack_mention >>

  terraform-run:
    executor:
      name: ops_runner
      runner: << parameters.runner >>
    parameters:
      runner:
        type: string
      tf_dir:
        type: string
      tf_parallelism:
        type: integer
        default: 30
      lock_state:
        default: true
        type: boolean
      dry_run:
        type: boolean
        default: false
      cloud:
        type: string
        default: misc
      aws_creds_script:
        type: string
    steps:
      - checkout
      - set-aws-creds-file:
          script: << parameters.aws_creds_script >>
      - run:
          name: terraform workspace setup/select
          environment:
            CLOUD: << parameters.cloud >> # misc
            TF_WORKSPACE_SELECT: << parameters.tf_dir >> #research_vms
            WIZ_TF_DIRECTORY: terraform/misc/<< parameters.tf_dir >>
          command: |
            cd $(git rev-parse --show-toplevel)/terraform/misc/<< parameters.tf_dir >>
            bash $(git rev-parse --show-toplevel)/.circleci/scripts/terraform-setup.sh
      - check_for_rerun_with_ssh
      - when:
          condition: << parameters.dry_run >>
          steps:
            - run:
                name: Terraform plan
                no_output_timeout: 20m
                environment:
                  TF_WORKSPACE_SELECT: << parameters.tf_dir >>
                  TF_PARALLELISM: "<< parameters.tf_parallelism >>"
                  DIRECTORY: terraform/misc
                  SUBDIRECTORY: << parameters.tf_dir >>
                  WIZ_TF_DIRECTORY: terraform/misc/<< parameters.tf_dir >>
                  LOCK_STATE: "<< parameters.lock_state >>"
                  PHASE: phase1
                command: |
                  cd $(git rev-parse --show-toplevel)/${WIZ_TF_DIRECTORY}
                  bash $(git rev-parse --show-toplevel)/.circleci/scripts/terraform-plan.sh || \
                  (echo  && echo "-----------------" && echo "Terraform first plan failed... Retrying..." && echo "-----------------" && echo  && bash $(git rev-parse --show-toplevel)/.circleci/scripts/terraform-plan.sh)
            - persist_to_workspace:
                root: /tmp/precheck/<< parameters.tf_dir >>/terraform
                paths:
                  - terraform/misc/plan
      - when:
          condition:
            not: << parameters.dry_run >>
          steps:
            - attach_workspace:
                at: /tmp/precheck/<< parameters.tf_dir >>/terraform
            - run:
                name: Terraform apply
                command: |
                  cd $(git rev-parse --show-toplevel)/terraform/misc/<< parameters.tf_dir >>
                  bash $(git rev-parse --show-toplevel)/.circleci/scripts/terraform-setup.sh
                  bash $(git rev-parse --show-toplevel)/.circleci/scripts/terraform-apply.sh
                environment:
                  TF_WORKSPACE_SELECT: << parameters.tf_dir >>
                  DIRECTORY: terraform/misc
                  SUBDIRECTORY: << parameters.tf_dir >>
                  WIZ_TF_DIRECTORY: terraform/misc/<< parameters.tf_dir >>
                  

      - check_for_rerun_with_ssh

  terraform-drift:
    executor:
      name: ops_runner
      runner: << parameters.runner >>
    parameters:
      runner:
        type: string
      env:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/precheck
      - run:
          name: send drift
          environment:
            ENV: << parameters.env >>
            DRIFT_FOLDER: /tmp/precheck/drift/terraform
            SLACK_CHANNEL: C06M4JVAAF8
          command: |
            pip install slack_sdk
            python3 ~/project/.circleci/scripts/tf_drift.py
  terraform-precheck-runner:
    executor:
      name: ops_runner
      ecr_url: << parameters.ecr_url >>
      runner: << parameters.runner >>
    environment:
      TF_VAR_account_id: "<< parameters.account_id >>" 
      TF_VAR_env: "<< parameters.env >>"   
    parameters:
      avoid_concurrent_runs:
        type: boolean
        default: false
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      directory:
        type: string
        default: terraform
      env:
        type: string
        default: test
      workspace:
        type: string
        default: test-eu1
      tf_parallelism:
        type: integer
        default: 30 
      slack_channel:
        type: string
        default: test-deployments
      cloud:
        type: string
        default: aws
      cluster_type:
        type: string
      notify_on:
        type: string
        default: fail
      enable_slack_mention:
        type: boolean
        default: true
      phase:
        type: string
        default: test
      lock_state:
        type: boolean
        default: true
      refresh:
        type: boolean
        default: true
      wizcli_scan:
        type: boolean
        default: false
      block_rollbacks:
        type: boolean
        default: false
      update_kubeconfig:
        type: boolean
        default: false
      cluster_name:
        type: string
        default: ""
      region:
        type: string
        default: ""
      enable_debug_logs:
        type: boolean
        default: false
      runner:
        type: string
      account_id:
        type: string
      get_aws_creds_tf:
        type: boolean
        default: true
      pr_mode:
        type: boolean
        default: true
      clone_terraform_outputs:
        type: boolean
        default: false
    steps:
      - run: 
          name: Checkout Shallow
          command: |
            /local-orbs/checkout_shallow.sh
      - clone_circleci_wiztools
      - wiztools/set_wiz_cache
      - run_steps_with_mutex:
          avoid_concurrent_runs: << parameters.avoid_concurrent_runs >>
          mutex_id: "<< parameters.directory >>-<< parameters.workspace >>"
          mutex_expiration_seconds: "600"
          wait_timeout_seconds: "600"
          steps: # Please note that a mutex will create only if avoid_concurrent_runs parameter is true.
            - when:
                condition: << parameters.clone_terraform_outputs >>
                steps:
                  - clone_tf_outputs
            - yaml_fmt_env_config:
                env: all
                relative_path: ./tools/scripts/devops-tools
            - when:
                <<: *when_develop_and_non_deployable_branches
                steps:
                  - run:
                      name: Terraform check formatting
                      command: |
                        export GIT_ROOT=$(git rev-parse --show-toplevel)
                        terraform fmt -check -recursive -diff $GIT_ROOT/terraform
            - init-terraform-workspace:
                cloud: << parameters.cloud >>
                workspace: << parameters.workspace >>
                directory: << parameters.directory >>
                cluster_type: << parameters.cluster_type >>
                block_rollbacks: << parameters.block_rollbacks >>
                get_aws_creds_tf: << parameters.get_aws_creds_tf >>
                pr_mode: << parameters.pr_mode >>
                runner: true
                env: << parameters.env >>
                cluster_name: << parameters.cluster_name >>
            - when:
                condition: << parameters.update_kubeconfig >>
                steps:
                  - update-kubeconfig:
                      cluster_name: << parameters.cluster_name >>
                      region: << parameters.region >>
            - enable_terraform_logs:
                enable_debug_logs: << parameters.enable_debug_logs >>
                env: << parameters.env >>
                workspace: << parameters.workspace >>
                directory: << parameters.directory >>
                cloud: << parameters.cloud >>
                steps:
                  - when:
                      <<: *when_develop_and_non_deployable_branches
                      steps:
                        - run:
                            name: Terraform validate
                            command: terraform validate
                  - check_for_rerun_with_ssh:
                      account_id: << parameters.account_id >>
                  - run:
                      name: Terraform plan
                      no_output_timeout: 30m
                      command: |
                        bash $(git rev-parse --show-toplevel)/.circleci/scripts/terraform-plan.sh || \
                        (echo  && echo "-----------------" && echo "Terraform first plan failed... Retrying..." && echo "-----------------" && echo  && bash $(git rev-parse --show-toplevel)/.circleci/scripts/terraform-plan.sh)
                      environment:
                        TF_WORKSPACE_SELECT: << parameters.workspace >>
                        TF_PARALLELISM: "<< parameters.tf_parallelism >>"
                        DIRECTORY: << parameters.directory >>
                        LOCK_STATE: "<< parameters.lock_state >>"
                        REFRESH: "<< parameters.refresh >>"
                        PHASE: << parameters.phase >>
                  - when:
                      condition: << parameters.wizcli_scan >>
                      steps:
                        - scan_iac_with_wizcli:
                            runner: true
            - run:
                name: Terraform Summary
                environment:
                  TF_PLAN_PATH: /tmp/plan.txt
                command: $(git rev-parse --show-toplevel)/.circleci/scripts/plan_summary.sh
            - persist_to_workspace:
                root: /tmp/precheck
                paths:
                  - << parameters.workspace >>/terraform/<< parameters.directory >>/*
                  - << parameters.phase >>/reports/<< parameters.workspace >>/<< parameters.directory >>/*
            - wiz-slack/notify_deployment:
                kind: Terraform
                slack_channel: << parameters.slack_channel >>
                folder: << parameters.directory >>
                env: << parameters.workspace >>
                outcome_path: /root/project/.deployment_outcome
                notify_on: << parameters.notify_on >>
                enable_slack_mention: << parameters.enable_slack_mention >>

  terraform-apply-runner:
    executor:
      name: ops_runner
      runner: << parameters.runner >>
      ecr_url: << parameters.ecr_url >>
    environment:
      TF_VAR_account_id: "<< parameters.account_id >>"
      TF_VAR_env: "<< parameters.env >>"     
    parallelism: 1
    parameters:
      avoid_concurrent_runs:
        type: boolean
        default: false
      lock_state:
        type: boolean
        default: true
        description: dummy (just to have the same attributes as terraform-plan )
      refresh:
        type: boolean
        default: true
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      directory:
        type: string
        default: terraform
      workspace:
        type: string
        default: test-eu1
      env:
        type: string
        default: test
      slack_channel:
        type: string
        default: test-deployments
      cloud:
        type: string
        default: aws
      cluster_type:
        type: string
      enable_slack_mention:
        type: boolean
        default: true
      block_rollbacks:
        type: boolean
        default: false
      update_kubeconfig:
        type: boolean
        default: false
      cluster_name:
        type: string
        default: ""
      region:
        type: string
        default: ""
      use_plan:
        type: boolean
        default: true
      fingerprint_terraform_outputs:
        type: string
        default: '4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04'
      enable_debug_logs:
        type: boolean
        default: false
      runner:
        type: string
        default: "dummy_runner"
      account_id:
        type: string
      get_aws_creds_tf:
        type: boolean
        default: true
      clone_terraform_outputs:
        type: boolean
        default: false
    steps:
      - run: 
          name: Checkout Shallow
          command: |
            /local-orbs/checkout_shallow.sh
      - clone_circleci_wiztools
      - wiztools/set_wiz_cache
      - run_steps_with_mutex:
          avoid_concurrent_runs: << parameters.avoid_concurrent_runs >>
          mutex_id: "<< parameters.directory >>-<< parameters.workspace >>"
          mutex_expiration_seconds: "600"
          wait_timeout_seconds: "600"
          steps: # Please note that a mutex will create only if avoid_concurrent_runs parameter is true.
            - when:
                condition: << parameters.clone_terraform_outputs >>
                steps:
                  - clone_tf_outputs
            - init-terraform-workspace:
                cloud: << parameters.cloud >>
                workspace: << parameters.workspace >>
                directory: << parameters.directory >>
                cluster_type: << parameters.cluster_type >>
                block_rollbacks: << parameters.block_rollbacks >>
                pr_mode: false
                get_aws_creds_tf: << parameters.get_aws_creds_tf >>
                env: << parameters.env >>
                cluster_name: << parameters.cluster_name >>
            - attach_workspace:
                at: /tmp/precheck
            - when:
                condition: << parameters.update_kubeconfig >>
                steps:
                  - update-kubeconfig:
                      cluster_name: << parameters.cluster_name >>
                      region: << parameters.region >>
            - enable_terraform_logs:
                enable_debug_logs: << parameters.enable_debug_logs >>
                env: << parameters.env >>
                workspace: << parameters.workspace >>
                directory: << parameters.directory >>
                cloud: << parameters.cloud >>
                steps:
                  - when:
                      <<: *when_develop_and_non_deployable_branches
                      steps:
                        - when:
                            condition:
                              not: << parameters.use_plan >>
                            steps:
                              - run:
                                  name: Terraform validate
                                  command: terraform validate
                              - run:
                                  name: Terraform check formatting
                                  command: terraform fmt -check -recursive -diff ~/project/terraform
                  - check_for_rerun_with_ssh:
                      account_id: << parameters.account_id >>
                  - run:
                      name: Terraform apply
                      no_output_timeout: 30m
                      command: |
                        bash $(git rev-parse --show-toplevel)/.circleci/scripts/terraform-apply.sh
                      environment:
                        TF_WORKSPACE_SELECT: << parameters.workspace >>
                        DIRECTORY: << parameters.directory >>
                        REFRESH: "<< parameters.refresh >>"
            - checkpoint:
                checkpoint: << parameters.workspace >>
                env: << parameters.env >>
                status: ready
                cluster_type: << parameters.cluster_type >>
                dc: << parameters.cluster_name >>
            - run:
                name: prepare terraform status file
                command: |
                  mkdir -p ~/.tf_status
                  echo $CIRCLE_SHA1 > ~/.tf_status/ops_commit.txt
            - wiztools/self_hosted_save_cache:
                cache_title: terraform status
                key: tf-apply-<< parameters.directory >>-<< parameters.workspace >>-{{ .BuildNum }}-{{ epoch }}
                path1: ~/.tf_status
            - terraform_outputs:
                env: << parameters.env >>
                workspace: << parameters.workspace >>
                directory: << parameters.directory >>
                cluster_type: << parameters.cluster_type >>
                fingerprint_terraform_outputs: << parameters.fingerprint_terraform_outputs >>
            - wiz-slack/notify_deployment:
                kind: Terraform
                slack_channel: << parameters.slack_channel >>
                folder: << parameters.directory >>
                env: << parameters.workspace >>
                outcome_path: /root/project/.deployment_outcome
                notify_on: fail
                enable_slack_mention: << parameters.enable_slack_mention >>

  build-go-sdk:
    machine:
      image: ubuntu-2204:current
    resource_class: <<parameters.machine_type >>
    parameters:
      os:
        type: string
        default: linux
      machine_type:
        type: string
        default: "large"
    steps:
      - checkout
      - run:
          name: Build binary
          command: |
            cd build-tools/golang-gocacheprog
            docker buildx build -f Dockerfile.<<parameters.os>> \
              --progress=plain \
              --build-arg GO_SDK_VERSION=$(cat VERSION) \
              --platform=linux/$(dpkg --print-architecture) \
              --output=. .
      - persist_to_workspace:
          root: build-tools/golang-gocacheprog
          paths:
            - artifacts

  upload-go-sdk:
    executor: awscli
    steps:
      - attach_workspace:
          at: .
      - run:
          name: 🪣 save to bucket
          command: |
            AWS_PROFILE=gocache
            aws configure set aws_access_key_id $GOCACHE_AWS_ACCESS_KEY --profile $AWS_PROFILE
            aws configure set aws_secret_access_key $GOCACHE_AWS_SECRET_ACCESS_KEY --profile $AWS_PROFILE
            cd artifacts
            for CACHE_REGION in "us-east-1" "us-east-2"; do
              GOCACHE_S3_BUCKET=${WIZ_CACHE_AWS_BUCKET_NAME}-${CACHE_REGION}
              aws configure set default.region $GOCACHE_AWS_REGION --profile $AWS_PROFILE
              export AWS_PROFILE
              aws s3 sync . s3://${GOCACHE_S3_BUCKET}/tools/
            done
  test-python:
    parameters:
      relative_path:
        type: string
    executor: python-only
    steps:
      - checkout
      - cached_pip_install:
          relative_path: << parameters.relative_path >>
      - run:
          name: 🧪 test
          command: |
            cd << parameters.relative_path >>
            pytest --junit-xml=test-report/report.xml
      - store_test_results:
          path: << parameters.relative_path >>/test-report

  test-golang:
    parameters:
      relative_path:
        type: string
      deployer_test:
        type: boolean
        default: false
      runner:
        type: string
        default: temp-with-context
    executor:
      name: ops_runner
      runner: << parameters.runner >>
    steps:
      - checkout
      - clone_circleci_wiztools
      - wiztools/set_wiz_cache
      - when:
          condition: << parameters.deployer_test >>
          steps:
            - run:
                name: Login to wizcharts.azurecr.io
                command: |
                  helm registry login wizcharts.azurecr.io --username "$WIZCHARTS_USERNAME" --password "$WIZCHARTS_PASSWORD"
            - add_single_ssh_key:
                fingerprint: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
                host: tfoutputs
            - run:
                name: Clone terraform-outputs
                command: git clone git@tfoutputs:wiz-sec/terraform-outputs.git ../terraform-outputs
      - wiztools/self_hosted_restore_cache:
          key1: gomodcache-v1-{{ arch }}-{{ checksum "<<parameters.relative_path>>/go.sum" }}
          cache_title: restore gomod cache
      - run:
          name: go mod download
          command: |
            cd << parameters.relative_path >>
            go mod download
      - wiztools/self_hosted_save_cache:
          key: gomodcache-v1-{{ arch }}-{{ checksum "<<parameters.relative_path>>/go.sum" }}
          path1: /go/pkg/mod
          cache_title: save gomod cache
      - run:
          name: run tests
          command: |
            cd << parameters.relative_path >>
            gotestsum --junitfile /tmp/unit-tests.xml
      - store_test_results:
          path: /tmp/unit-tests.xml
  update-tf-outputs-with-slack-ids:
    executor:
      name: ops_runner
      runner: << parameters.runner >>
    parameters:
       executor:
         type: string
         default: ops
       runner:
         type: string
         default: prod-tf
    steps:
      - checkout_shallow
      - clone_tf_outputs
      - run:
           name: Update Slack Ids
           command: |
             ./.circleci/scripts/update-tf-outputs-with-slack-ids.sh




  prepare-wizcli-binary:
    environment:
      TF_VAR_account_id: "<< parameters.account_id >>"
    circleci_ip_ranges: false
    executor:
      name: ops_runner
      runner: << parameters.runner >>
      ecr_url: << parameters.ecr_url >>
    parameters:
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      runner:
        type: string
        default: "prod-tf"
      profile:
        type: string
        default: "commercial"
      account_id:
        type: string
        default: "197171649850"
      slack_channel:
        type: string
      customer_facing:
        type: boolean
        default: false
      wiz_cli_version:
        type: string
        default: ""
      wizcli_version_commit_sha:
        type: string
        default: ""
      ops_versions_path:
        type: string
        default: ~/project/deployment/versions
      artifact_dir:
        type: string
        default: /tmp/wizcli
    working_directory: ~/project
    steps:
      - checkout
      - set-aws-creds-tf
      - check_for_rerun_with_ssh
      - run_python_script:
          step_name: "Download Wiz CLI files from global bucket"
          relative_path: .circleci/scripts/pyscripts
          pip_requirement: true
          script_name: fetch_wizcli_version_and_files_from_global.py
          script_args: --wizcli-version << parameters.wiz_cli_version >> --version-commit-sha << parameters.wizcli_version_commit_sha >> --ops-versions-path << parameters.ops_versions_path >> --artifact-dir << parameters.artifact_dir >>
          env_variables: "export AWS_PROFILE=<< parameters.profile >>"
      - when:
          condition:
            equal: [true, << parameters.customer_facing >>]
          steps:
            - run_python_script:
                step_name: "Apple sign Wiz CLI"
                relative_path: .circleci/scripts/pyscripts
                pip_requirement: true
                script_name: apple_sign_wizcli.py
                script_args: --artifact-dir << parameters.artifact_dir >>
                env_variables: "export AWS_PROFILE=<< parameters.profile >>"
            - run_python_script:
                step_name: "Apple notarize Wiz CLI"
                relative_path: .circleci/scripts/pyscripts
                pip_requirement: true
                script_name: apple_notarize_wizcli.py
                script_args: --artifact-dir << parameters.artifact_dir >>
                env_variables: "export AWS_PROFILE=<< parameters.profile >>"
      - run_python_script:
          step_name: "Calculate sha256 for Wiz CLI"
          relative_path: .circleci/scripts/pyscripts
          pip_requirement: true
          script_name: prepare_wizcli_calculate_sha256.py
          script_args: --artifact-dir << parameters.artifact_dir >>
      - run_python_script:
          step_name: "GPG sign Wiz CLI"
          relative_path: .circleci/scripts/pyscripts
          pip_requirement: true
          script_name: prepare_wizcli_gpg_sign_on_hash.py
          script_args: --artifact-dir << parameters.artifact_dir >>
          env_variables: "export AWS_PROFILE=<< parameters.profile >>"
      - persist_to_workspace:
          root: << parameters.artifact_dir >>
          paths:
            - .
      - wiz-slack/simple_notification:
          slack_channel: << parameters.slack_channel >>
          notify_on: fail
          enable_slack_mention: false
          title: "Prepare wizcli binary failed"
          content: |
            Prepare wizcli binary failed! Check it out in the CircleCI job :circleci:

  publish-wizcli-binary:
    environment:
      TF_VAR_account_id: "<< parameters.account_id >>"
    circleci_ip_ranges: false
    executor:
      name: ops_runner
      runner: << parameters.runner >>
      ecr_url: << parameters.ecr_url >>
    parameters:
      ecr_url:
        type: string
        default: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
      slack_channel:
        type: string
      runner:
        type: string
        default: "dummy_runner"
      profile:
        type: string
        default: "commercial"
      account_id:
        type: string
      destination_bucket_name:
        type: string
      customer_facing:
        type: boolean
        default: false
      artifact_dir:
        type: string
        default: /tmp/wizcli
      allow_version_overwrite:
        type: boolean
        default: false
    working_directory: ~/project
    steps:
      - checkout
      - set-aws-creds-tf
      - check_for_rerun_with_ssh
      - attach_workspace:
          at: << parameters.artifact_dir >>
      - when:
          condition:
            equal: [true, << parameters.customer_facing >>]
          steps:
            - run_python_script:
                step_name: "Publish Wiz CLI to << parameters.destination_bucket_name >>"
                relative_path: .circleci/scripts/pyscripts
                pip_requirement: true
                script_name: publish_wizcli_files.py
                script_args: --artifact-dir << parameters.artifact_dir >> --bucket-name << parameters.destination_bucket_name >> --allow-version-overwrite << parameters.allow_version_overwrite >>
                env_variables: "export AWS_PROFILE=<< parameters.profile >>"
      - when:
          condition:
            equal: [false, << parameters.customer_facing >>]
          steps:
            - run_python_script:
                step_name: "Publish internal Wiz CLI to << parameters.destination_bucket_name >>"
                relative_path: .circleci/scripts/pyscripts
                pip_requirement: true
                script_name: publish_wizcli_files.py
                # We allow version-overwrite in case it's not customer facing
                script_args: --artifact-dir << parameters.artifact_dir >> --bucket-name << parameters.destination_bucket_name >> --allow-version-overwrite true
                env_variables: "export AWS_PROFILE=<< parameters.profile >>"
      - wiz-slack/simple_notification:
          slack_channel: << parameters.slack_channel >>
          notify_on: fail
          enable_slack_mention: false
          title: "Publish wizcli binary failed"
          content: |
            Publish wizcli binary failed! Check it out in the CircleCI job :circleci:

  publish-wizcli-docker:
    executor: python-only
    parameters:
      slack_channel:
        type: string
        default: test-deployments
      env:
        type: string
      publish_latest:
        type: boolean
        default: false
    steps:
      - attach_workspace:
          at: /tmp/wizcli
      - setup_remote_docker
      - run:
          name: install pip3
          command: sudo apt update && sudo apt install python3-pip -y
      - checkout
      - run:
          name: publish wizcli image
          command: bash .circleci/scripts/publish_wizcli_docker.sh << parameters.env >> << parameters.publish_latest >>
      - wiz-slack/simple_notification:
          slack_channel: << parameters.slack_channel >>
          notify_on: fail
          enable_slack_mention: false
          title: "Publish wizcli docker failed"
          content: |
            Publish wizcli docker failed! Check it out in the CircleCI job :circleci:
workflows:
  aws-custom-ami:
    jobs:
      - aws-custom-ami:
          context:
            - imported-from-ops-project-variables
            - GovAMIContext
          name: building x86 fips ami
      - aws-custom-ami:
          context:
            - imported-from-ops-project-variables
            - GovAMIContext
          is_gpu: "1"
          name: building gpu x86 fips ami
      - aws-custom-ami:
          context:
            - imported-from-ops-project-variables
            - GovAMIContext
          is_arm64: "1"
          name: building arm64 fips ami
      - aws-custom-ami:
          context:
            - imported-from-ops-project-variables
            - GovAMIContext
          k8s_version: "1.23"
          name: building x86 fips ami for DA 1.23
      - aws-custom-ami:
          context:
            - imported-from-ops-project-variables
            - GovAMIContext
          k8s_version: "1.24"
          name: building x86 fips ami for DA 1.24
      - aws-custom-ami:
          context:
            - imported-from-ops-project-variables
            - GovAMIContext
          k8s_version: "1.23"
          name: building x86 fips ami for DA 1.23 - public
          public_visible: true
      - aws-custom-ami:
          context:
            - imported-from-ops-project-variables
            - GovAMIContext
          k8s_version: "1.24"
          name: building x86 fips ami for DA 1.24 - public
          public_visible: true
      - aws-custom-ami:
          aws_region: eu-north-1
          cloud: commercial
          context:
            - imported-from-ops-project-variables
            - CommercialAMIContext
          k8s_version: "1.23"
          name: building commercial  x86 fips ami for DA 1.23
          security_group_id: sg-0b7f9367b132536e0
          subnet_id: subnet-02303294a5b217d21
          vpc_id: vpc-0badbd6c8bfbab742
      - aws-custom-ami:
          aws_region: eu-north-1
          cloud: commercial
          context:
            - imported-from-ops-project-variables
            - CommercialAMIContext
          k8s_version: "1.24"
          name: building commercial x86 fips ami for DA 1.24
          security_group_id: sg-0b7f9367b132536e0
          subnet_id: subnet-02303294a5b217d21
          vpc_id: vpc-0badbd6c8bfbab742
      - aws-custom-ami:
          aws_region: eu-north-1
          cloud: commercial
          context:
            - imported-from-ops-project-variables
            - CommercialAMIContext
          k8s_version: "1.23"
          name: building commercial  x86 fips ami for DA 1.23 - public
          public_visible: true
          security_group_id: sg-0b7f9367b132536e0
          subnet_id: subnet-02303294a5b217d21
          vpc_id: vpc-0badbd6c8bfbab742
      - aws-custom-ami:
          aws_region: eu-north-1
          cloud: commercial
          context:
            - imported-from-ops-project-variables
            - CommercialAMIContext
          k8s_version: "1.24"
          name: building commercial x86 fips ami for DA 1.24 - public
          public_visible: true
          security_group_id: sg-0b7f9367b132536e0
          subnet_id: subnet-02303294a5b217d21
          vpc_id: vpc-0badbd6c8bfbab742
    when: << pipeline.parameters.fedramp-custom-ami >>
  build-bootstrap-rde-workflow:
    jobs:
      - create-bootstrap-rde-machine:
          context:
            - imported-from-ops-project-variables
          filters:
            branches:
              only:
                - develop
    when: << pipeline.parameters.create_bootstrap_rde >>
  build-go-sdk:
    jobs:
      - build-go-sdk:
          context:
            - imported-from-ops-project-variables
          filters:
            branches:
              ignore:
                - demo
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          matrix:
            parameters:
              machine_type:
                - large
                - arm.large
              os:
                - darwin
                - linux
          name: build-go-sdk-<< matrix.os >>-<< matrix.machine_type >>
    when: << pipeline.parameters.build-go-sdk >>
  build-rde-workflow:
    jobs:
      - prepare-machine-rde:
          context:
            - imported-from-ops-project-variables
          filters:
            branches:
              only:
                - develop
      - create-new-rde-machine:
          context:
            - imported-from-ops-project-variables
          filters:
            branches:
              only:
                - develop
          requires:
            - prepare-machine-rde
    when:
      or:
        - << pipeline.parameters.scheduled_build_rde >>
        - << pipeline.parameters.terraform-modules-rde >>
        - and:
            - << pipeline.parameters.terraform-rde >>
            - not: << pipeline.parameters.terraform-rde_ami_id >>
  circleci-validate:
    jobs:
      - validate-cci-config:
          context:
            - imported-from-ops-project-variables
            - SlackDynamoCtx
          env: integration-eu2
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          name: validate-cci-config
    when: << pipeline.parameters.circleci >>
  datadog_dashboards_backup:
    jobs:
      - backup-datadog-dashboards:
          context:
            - imported-from-ops-project-variables
            - BuildContext
            - DatadogROContext
    when: << pipeline.parameters.dd_dashboards_backup >>
  deploy-lint-test-helmfile-dev:
    jobs:
      - gitops-sources-prep:
          cluster_name: << matrix.cluster_name >>
          cluster_type: << matrix.cluster_type >>
          context:
            - imported-from-ops-project-variables
            - BuildContext
          executor: ops_runner
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          matrix:
            parameters:
              cluster_name:
                - dev-us1
              cluster_type:
                - dev
              gitops_engine:
                - argocd
              region:
                - il-central-1
          name: << matrix.cluster_name >>-gitops-prep-<< matrix.cluster_type >>-precheck
          push_changes: false
          region: << matrix.region >>
          slack_channel: author_of:$CIRCLE_SHA1
          use_cluster_type: true
    when: << pipeline.parameters.deployment >>
  deploy-lint-test-helmfile-global:
    jobs:
      - gitops-sources-prep:
          cluster_name: << matrix.cluster_name >>
          cluster_type: << matrix.cluster_type >>
          context:
            - imported-from-ops-project-variables
            - BuildContext
          executor: ops_runner
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          matrix:
            parameters:
              cluster_name:
                - test-eu1
              cluster_type:
                - global
              gitops_engine:
                - argocd
              region:
                - eu-north-1
          name: << matrix.cluster_name >>-gitops-prep-<< matrix.cluster_type >>-precheck
          push_changes: false
          region: << matrix.region >>
          slack_channel: author_of:$CIRCLE_SHA1
          use_cluster_type: true
      - gitops-sources-prep:
          cluster_name: << matrix.cluster_name >>
          cluster_type: << matrix.cluster_type >>
          context:
            - imported-from-ops-project-variables
            - BuildContext
          executor: ops_runner
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: << matrix.gitops_engine >>
          matrix:
            parameters:
              cluster_name:
                - fedtest-us1
              cluster_type:
                - global
              gitops_engine:
                - argocd
              region:
                - us-gov-west-1
          name: << matrix.cluster_name >>-gitops-prep-<< matrix.cluster_type >>-precheck
          push_changes: false
          region: << matrix.region >>
          slack_channel: author_of:$CIRCLE_SHA1
    when: << pipeline.parameters.deployment >>
  deploy-lint-test-helmfile-monitor:
    jobs:
      - gitops-sources-prep:
          cluster_name: << matrix.cluster_name >>
          cluster_type: << matrix.cluster_type >>
          context:
            - imported-from-ops-project-variables
            - BuildContext
          executor: ops_runner
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          matrix:
            parameters:
              cluster_name:
                - fedtest-us1
              cluster_type:
                - monitor
              gitops_engine:
                - argocd
              region:
                - us-gov-west-1
          name: << matrix.cluster_name >>-gitops-prep-<< matrix.cluster_type >>-precheck
          push_changes: false
          region: << matrix.region >>
          slack_channel: author_of:$CIRCLE_SHA1
          use_cluster_type: true
      - gitops-sources-prep:
          cluster_name: << matrix.cluster_name >>
          cluster_type: << matrix.cluster_type >>
          context:
            - imported-from-ops-project-variables
            - BuildContext
          executor: ops_runner
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          matrix:
            parameters:
              cluster_name:
                - test-us1
              cluster_type:
                - monitor
              gitops_engine:
                - argocd
              region:
                - us-east-1
          name: << matrix.cluster_name >>-gitops-prep-<< matrix.cluster_type >>-precheck
          push_changes: false
          region: << matrix.region >>
          slack_channel: author_of:$CIRCLE_SHA1
          use_cluster_type: true
    when: false
  deploy-lint-test-helmfile-ops:
    jobs:
      - gitops-sources-prep:
          cluster_name: << matrix.cluster_name >>
          cluster_type: << matrix.cluster_type >>
          context:
            - imported-from-ops-project-variables
            - BuildContext
          executor: ops_runner
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          matrix:
            parameters:
              cluster_name:
                - test-us1
                - test-eu1
                - prod-us1
                - prod-us2
              cluster_type:
                - ops
              region:
                - eu-north-1
          name: << matrix.cluster_name >>-gitops-prep-<< matrix.cluster_type >>-precheck
          push_changes: false
          region: << matrix.region >>
          use_cluster_type: true
    when:
      or:
        - << pipeline.parameters.deployment_ops >>
        - << pipeline.parameters.infra >>
  deploy-lint-test-helmfile-wiz:
    jobs:
      - gitops-sources-prep:
          cluster_name: << matrix.cluster_name >>
          cluster_type: << matrix.cluster_type >>
          context:
            - imported-from-ops-project-variables
            - BuildContext
          executor: ops_runner
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: << matrix.gitops_engine >>
          matrix:
            parameters:
              cluster_name:
                - test-eu1
                - test-eu3
              cluster_type:
                - wiz
              gitops_engine:
                - argocd
              region:
                - eu-north-1
              slack_channel:
                - author_of:$CIRCLE_SHA1
          name: << matrix.cluster_name >>-gitops-prep-<< matrix.cluster_type >>-precheck
          push_changes: false
          region: << matrix.region >>
          slack_channel: author_of:$CIRCLE_SHA1
      - gitops-sources-prep:
          cluster_name: << matrix.cluster_name >>
          cluster_type: << matrix.cluster_type >>
          context:
            - imported-from-ops-project-variables
            - BuildContext
          executor: ops_runner
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: << matrix.gitops_engine >>
          matrix:
            parameters:
              cluster_name:
                - test-us1
              cluster_type:
                - wiz
              gitops_engine:
                - argocd
              region:
                - us-east-2
              slack_channel:
                - author_of:$CIRCLE_SHA1
          name: << matrix.cluster_name >>-gitops-prep-<< matrix.cluster_type >>-precheck
          push_changes: false
          region: << matrix.region >>
          slack_channel: author_of:$CIRCLE_SHA1
      - gitops-sources-prep:
          cluster_name: << matrix.cluster_name >>
          cluster_type: << matrix.cluster_type >>
          context:
            - imported-from-ops-project-variables
            - BuildContext
          executor: ops_runner
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: << matrix.gitops_engine >>
          matrix:
            parameters:
              cluster_name:
                - fedtest-us1
              cluster_type:
                - wiz
              gitops_engine:
                - argocd
              region:
                - us-gov-west-1
              slack_channel:
                - author_of:$CIRCLE_SHA1
          name: << matrix.cluster_name >>-gitops-prep-<< matrix.cluster_type >>-precheck
          push_changes: false
          region: << matrix.region >>
          slack_channel: author_of:$CIRCLE_SHA1
      - gitops-sources-prep:
          cluster_name: << matrix.cluster_name >>
          cluster_type: << matrix.cluster_type >>
          context:
            - imported-from-ops-project-variables
            - BuildContext
          executor: ops_runner
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: << matrix.gitops_engine >>
          matrix:
            parameters:
              cluster_name:
                - test-eu4
              cluster_type:
                - wiz
              gitops_engine:
                - argocd
              region:
                - eu-north-1
              slack_channel:
                - author_of:$CIRCLE_SHA1
          name: << matrix.cluster_name >>-gitops-prep-<< matrix.cluster_type >>-precheck
          push_changes: false
          region: << matrix.region >>
          slack_channel: author_of:$CIRCLE_SHA1
    when: << pipeline.parameters.deployment >>
  deploy-terraform-monitor-areas:
    jobs:
      - terraform-precheck-runner:
          account_id: "096476340703"
          clone_terraform_outputs: true
          cluster_name: monitor-prod-us1
          cluster_type: monitor
          context:
            - imported-from-ops-project-variables
            - wiz-cache-prod
          directory: terraform/monitor-areas
          env: monitor-areas
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          name: Terraform-monitor-areas-precheck
          region: us-east-1
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: monitor-areas
      - terraform-apply-runner:
          account_id: "096476340703"
          clone_terraform_outputs: true
          cluster_name: monitor-prod-us1
          cluster_type: monitor
          context:
            - imported-from-ops-project-variables
            - wiz-cache-prod
          directory: terraform/monitor-areas
          env: monitor-areas
          filters:
            branches:
              only:
                - develop
          lock_state: false
          name: Terraform-monitor-areas-apply
          region: us-east-1
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: monitor-areas
    when: << pipeline.parameters.terraform-monitor-areas >>
  deploy-terraform-universal:
    jobs:
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/universal
          env: universal
          name: Terraform-universal-precheck-dp
          notify_on: approval
          pr_mode: false
          runner: prod-tf
          slack_channel: prod-deployments
          workspace: universal
      - terraform-universal-approve-apply:
          context:
            - imported-from-ops-project-variables
          requires:
            - Terraform-universal-precheck-dp
          type: approval
      - auto-approve:
          approval_job_name: terraform-universal-approve-apply
          context:
            - imported-from-ops-project-variables
          directory: terraform/universal
          name: terraform-universal-maybe-autoapprove
          requires:
            - Terraform-universal-precheck-dp
          workspace: universal
      - terraform-apply:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - wiz-cache-prod
          directory: terraform/universal
          env: universal
          name: Terraform-universal-apply
          requires:
            - terraform-universal-approve-apply
          runner: prod-tf
          slack_channel: prod-deployments
          workspace: universal
  deployment-global-prod:
    jobs:
      - validate-no-freeze:
          cluster_type: global
          context:
            - imported-from-ops-project-variables
          env: prod
          name: validate-no-freeze
          runner: prod-tf
      - terraform-precheck-runner:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          clone_terraform_outputs: false
          cluster_type: global
          context:
            - imported-from-ops-project-variables
          directory: terraform/global-env
          enable_debug_logs: false
          enable_slack_mention: true
          env: prod
          filters:
            branches:
              only:
                - master
          name: terraform-global-env-prod-validate
          notify_on: fail
          pr_mode: false
          refresh: true
          requires:
            - validate-no-freeze
          runner: prod-tf
          slack_channel: prod-deployments
          workspace: global-prod
      - global-env-approve-apply-prod:
          context:
            - imported-from-ops-project-variables
          requires:
            - terraform-global-env-prod-validate
          type: approval
      - auto-approve:
          approval_job_name: global-env-approve-apply-prod
          context:
            - imported-from-ops-project-variables
          directory: terraform/global-env
          name: global-env-maybe-autoapprove-prod
          requires:
            - terraform-global-env-prod-validate
          workspace: global-prod
      - terraform-apply-runner:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          clone_terraform_outputs: false
          cluster_type: global
          context:
            - imported-from-ops-project-variables
          directory: terraform/global-env
          enable_debug_logs: false
          enable_slack_mention: true
          env: prod
          filters:
            branches:
              only:
                - master
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: terraform-global-env-prod-apply
          refresh: true
          requires:
            - global-env-approve-apply-prod
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: global-prod
      - join:
          context:
            - imported-from-ops-project-variables
          name: join-tf-env
          requires:
            - terraform-global-env-prod-apply
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: global
          context:
            - imported-from-ops-project-variables
          directory: terraform/global-dc
          enable_slack_mention: true
          env: prod
          filters:
            branches:
              only:
                - master
          name: Terraform-global-prod-us1-precheck
          notify_on: approval
          pr_mode: false
          requires:
            - join-tf-env
          runner: prod-tf
          slack_channel: prod-deployments
          workspace: global-prod-us1
      - approve-deployment-global-prod-us1:
          context:
            - imported-from-ops-project-variables
          filters:
            branches:
              only:
                - master
          requires:
            - Terraform-global-prod-us1-precheck
          type: approval
      - auto-approve:
          approval_job_name: approve-deployment-global-prod-us1
          context:
            - imported-from-ops-project-variables
          directory: terraform/global-dc
          name: global-dc-maybe-autoapprove-prod
          requires:
            - Terraform-global-prod-us1-precheck
          workspace: global-prod-us1
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: global
          context:
            - imported-from-ops-project-variables
          directory: terraform/global-dc
          env: prod
          filters:
            branches:
              only:
                - master
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-global-prod-us1-apply
          requires:
            - approve-deployment-global-prod-us1
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: global-prod-us1
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us1
          cluster_type: global
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          executor: ops_runner
          filters:
            branches:
              only:
                - master
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          name: us1-gitops-prep-global-prod
          region: us-east-2
          requires:
            - Terraform-global-prod-us1-apply
          runner_env: prod
          slack_channel: prod-deployments
          use_cluster_type: true
      - gitops-reconcile-wait:
          account_id: "197171649850"
          checker_version: v1
          cluster_name: prod-us1
          cluster_type: global
          context:
            - imported-from-ops-project-variables
          enable_slack_mention: true
          filters:
            branches:
              only:
                - master
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          name: us1-gitops-wait-global-prod
          region: us-east-2
          requires:
            - us1-gitops-prep-global-prod
          runner: small-prod-tf
          slack_channel: prod-deployments
          use_cluster_type: true
      - join:
          context:
            - imported-from-ops-project-variables
          env: prod
          name: All-phase1-updated
          requires:
            - us1-gitops-wait-global-prod
          stage: phase1
      - backoffice-publish:
          branch: master
          context:
            - imported-from-ops-project-variables
          env: prod
          filters:
            branches:
              only: master
          name: Backoffice-sync-prod-global
          requires:
            - All-phase1-updated
          target-branch-suffix: -global
          version-key: backoffice-global
  deployment-ops-prod:
    jobs:
      - validate-no-freeze:
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          env: prod
          name: validate-no-freeze
          runner: prod-tf
      - terraform-precheck-runner:
          account_id: "422111308700"
          avoid_concurrent_runs: false
          block_rollbacks: true
          clone_terraform_outputs: false
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-env
          enable_debug_logs: false
          enable_slack_mention: true
          env: prod
          filters:
            branches:
              only:
                - master
          name: terraform-ops-env-prod-validate
          notify_on: fail
          pr_mode: false
          refresh: true
          requires:
            - validate-no-freeze
          runner: prod-tf
          slack_channel: prod-deployments
          workspace: ops-prod
      - ops-env-approve-apply-prod:
          context:
            - imported-from-ops-project-variables
          requires:
            - terraform-ops-env-prod-validate
          type: approval
      - auto-approve:
          approval_job_name: ops-env-approve-apply-prod
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-env
          name: ops-env-maybe-autoapprove-prod
          requires:
            - terraform-ops-env-prod-validate
          workspace: ops-prod
      - terraform-apply-runner:
          account_id: "422111308700"
          avoid_concurrent_runs: false
          block_rollbacks: true
          clone_terraform_outputs: false
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-env
          enable_debug_logs: false
          enable_slack_mention: true
          env: prod
          filters:
            branches:
              only:
                - master
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: terraform-ops-env-prod-apply
          refresh: true
          requires:
            - ops-env-approve-apply-prod
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: ops-prod
      - join:
          context:
            - imported-from-ops-project-variables
          name: join-tf-env
          requires:
            - terraform-ops-env-prod-apply
      - terraform-precheck:
          account_id: "422111308700"
          block_rollbacks: true
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-dc
          enable_slack_mention: false
          filters:
            branches:
              only:
                - master
          name: Terraform-ops-prod-us1-precheck
          notify_on: approval
          pr_mode: false
          requires:
            - join-tf-env
          runner: prod-tf
          slack_channel: ops-prod-deployments
          workspace: ops-prod-us1
      - ops-dc-approve-apply-ops-prod-us1:
          context:
            - imported-from-ops-project-variables
          filters:
            branches:
              only:
                - master
          requires:
            - Terraform-ops-prod-us1-precheck
          type: approval
      - auto-approve:
          approval_job_name: ops-dc-approve-apply-ops-prod-us1
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-dc
          name: ops-dc-maybe-autoapprove-ops-prod-us1
          requires:
            - Terraform-ops-prod-us1-precheck
          workspace: ops-prod-us1
      - terraform-apply:
          account_id: "422111308700"
          block_rollbacks: true
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-dc
          enable_slack_mention: false
          env: prod
          filters:
            branches:
              only:
                - master
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-ops-prod-us1-apply
          requires:
            - ops-dc-approve-apply-ops-prod-us1
          runner: prod-tf
          slack_channel: ops-prod-deployments
          use_plan: true
          workspace: ops-prod-us1
      - aggregate_plans:
          context:
            - imported-from-ops-project-variables
            - WizGithubReadOnlyContext
            - SlackDynamoCtx
          enable_slack_mention: false
          env: prod-us1
          filters:
            branches:
              only:
                - master
          requires:
            - Terraform-ops-prod-us1-apply
          runner: prod-tf
          slack_channel: ops-prod-deployments
          stage: phase1
      - approve-deployment-phase1:
          context:
            - imported-from-ops-project-variables
          filters:
            branches:
              only:
                - master
          requires:
            - Terraform-ops-prod-us1-apply
          type: approval
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us1
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: false
          executor: ops_runner
          filters:
            branches:
              only:
                - master
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          name: us1-gitops-prep-ops-prod
          region: us-east-2
          requires:
            - approve-deployment-phase1
          runner_env: prod
          slack_channel: ops-prod-deployments
          use_cluster_type: true
      - gitops-reconcile-wait:
          account_id: "422111308700"
          checker_version: v1
          cluster_name: prod-us1
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          enable_slack_mention: false
          filters:
            branches:
              only:
                - master
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          name: us1-gitops-wait-ops-prod
          profile: be
          region: us-east-2
          requires:
            - us1-gitops-prep-ops-prod
          runner: small-prod-tf
          slack_channel: ops-prod-deployments
          use_cluster_type: true
      - terraform-precheck:
          account_id: "422111308700"
          block_rollbacks: true
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-dc
          enable_slack_mention: false
          filters:
            branches:
              only:
                - master
          name: Terraform-ops-prod-us2-precheck
          notify_on: approval
          pr_mode: false
          requires:
            - join-tf-env
          runner: prod-tf
          slack_channel: ops-prod-deployments
          workspace: ops-prod-us2
      - ops-dc-approve-apply-ops-prod-us2:
          context:
            - imported-from-ops-project-variables
          filters:
            branches:
              only:
                - master
          requires:
            - Terraform-ops-prod-us2-precheck
          type: approval
      - auto-approve:
          approval_job_name: ops-dc-approve-apply-ops-prod-us2
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-dc
          name: ops-dc-maybe-autoapprove-ops-prod-us2
          requires:
            - Terraform-ops-prod-us2-precheck
          workspace: ops-prod-us2
      - terraform-apply:
          account_id: "422111308700"
          block_rollbacks: true
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-dc
          enable_slack_mention: false
          env: prod
          filters:
            branches:
              only:
                - master
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-ops-prod-us2-apply
          requires:
            - ops-dc-approve-apply-ops-prod-us2
          runner: prod-tf
          slack_channel: ops-prod-deployments
          use_plan: true
          workspace: ops-prod-us2
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us2
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: false
          executor: ops_runner
          filters:
            branches:
              only:
                - master
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          name: us2-gitops-prep-ops-prod
          region: us-east-2
          requires:
            - approve-deployment-phase1
          runner_env: prod
          slack_channel: ops-prod-deployments
          use_cluster_type: true
      - gitops-reconcile-wait:
          account_id: "422111308700"
          checker_version: v1
          cluster_name: prod-us2
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          enable_slack_mention: false
          filters:
            branches:
              only:
                - master
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          name: us2-gitops-wait-ops-prod
          profile: be
          region: us-east-2
          requires:
            - us2-gitops-prep-ops-prod
          runner: small-prod-tf
          slack_channel: ops-prod-deployments
          use_cluster_type: true
      - terraform-precheck:
          account_id: "422111308700"
          block_rollbacks: true
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-dc
          enable_slack_mention: false
          filters:
            branches:
              only:
                - master
          name: Terraform-ops-prod-us3-precheck
          notify_on: approval
          pr_mode: false
          requires:
            - join-tf-env
          runner: prod-tf
          slack_channel: ops-prod-deployments
          workspace: ops-prod-us3
      - ops-dc-approve-apply-ops-prod-us3:
          context:
            - imported-from-ops-project-variables
          filters:
            branches:
              only:
                - master
          requires:
            - Terraform-ops-prod-us3-precheck
          type: approval
      - auto-approve:
          approval_job_name: ops-dc-approve-apply-ops-prod-us3
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-dc
          name: ops-dc-maybe-autoapprove-ops-prod-us3
          requires:
            - Terraform-ops-prod-us3-precheck
          workspace: ops-prod-us3
      - terraform-apply:
          account_id: "422111308700"
          block_rollbacks: true
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-dc
          enable_slack_mention: false
          env: prod
          filters:
            branches:
              only:
                - master
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-ops-prod-us3-apply
          requires:
            - ops-dc-approve-apply-ops-prod-us3
          runner: prod-tf
          slack_channel: ops-prod-deployments
          use_plan: true
          workspace: ops-prod-us3
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us3
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: false
          executor: ops_runner
          filters:
            branches:
              only:
                - master
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          name: us3-gitops-prep-ops-prod
          region: us-east-2
          requires:
            - approve-deployment-phase1
          runner_env: prod
          slack_channel: ops-prod-deployments
          use_cluster_type: true
      - gitops-reconcile-wait:
          account_id: "422111308700"
          checker_version: v1
          cluster_name: prod-us3
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          enable_slack_mention: false
          filters:
            branches:
              only:
                - master
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          name: us3-gitops-wait-ops-prod
          profile: be
          region: us-east-2
          requires:
            - us3-gitops-prep-ops-prod
          runner: small-prod-tf
          slack_channel: ops-prod-deployments
          use_cluster_type: true
      - terraform-precheck:
          account_id: "422111308700"
          block_rollbacks: true
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-dc
          enable_slack_mention: false
          filters:
            branches:
              only:
                - master
          name: Terraform-ops-prod-us4-precheck
          notify_on: approval
          pr_mode: false
          requires:
            - join-tf-env
          runner: prod-tf
          slack_channel: ops-prod-deployments
          workspace: ops-prod-us4
      - ops-dc-approve-apply-ops-prod-us4:
          context:
            - imported-from-ops-project-variables
          filters:
            branches:
              only:
                - master
          requires:
            - Terraform-ops-prod-us4-precheck
          type: approval
      - auto-approve:
          approval_job_name: ops-dc-approve-apply-ops-prod-us4
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-dc
          name: ops-dc-maybe-autoapprove-ops-prod-us4
          requires:
            - Terraform-ops-prod-us4-precheck
          workspace: ops-prod-us4
      - terraform-apply:
          account_id: "422111308700"
          block_rollbacks: true
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-dc
          enable_slack_mention: false
          env: prod
          filters:
            branches:
              only:
                - master
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-ops-prod-us4-apply
          requires:
            - ops-dc-approve-apply-ops-prod-us4
          runner: prod-tf
          slack_channel: ops-prod-deployments
          use_plan: true
          workspace: ops-prod-us4
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us4
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: false
          executor: ops_runner
          filters:
            branches:
              only:
                - master
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          name: us4-gitops-prep-ops-prod
          region: us-west-2
          requires:
            - approve-deployment-phase1
          runner_env: prod
          slack_channel: ops-prod-deployments
          use_cluster_type: true
      - gitops-reconcile-wait:
          account_id: "422111308700"
          checker_version: v1
          cluster_name: prod-us4
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          enable_slack_mention: false
          filters:
            branches:
              only:
                - master
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          name: us4-gitops-wait-ops-prod
          profile: be
          region: us-west-2
          requires:
            - us4-gitops-prep-ops-prod
          runner: small-prod-tf
          slack_channel: ops-prod-deployments
          use_cluster_type: true
      - terraform-precheck:
          account_id: "422111308700"
          block_rollbacks: true
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-dc
          enable_slack_mention: false
          filters:
            branches:
              only:
                - master
          name: Terraform-ops-prod-us5-precheck
          notify_on: approval
          pr_mode: false
          requires:
            - join-tf-env
          runner: prod-tf
          slack_channel: ops-prod-deployments
          workspace: ops-prod-us5
      - ops-dc-approve-apply-ops-prod-us5:
          context:
            - imported-from-ops-project-variables
          filters:
            branches:
              only:
                - master
          requires:
            - Terraform-ops-prod-us5-precheck
          type: approval
      - auto-approve:
          approval_job_name: ops-dc-approve-apply-ops-prod-us5
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-dc
          name: ops-dc-maybe-autoapprove-ops-prod-us5
          requires:
            - Terraform-ops-prod-us5-precheck
          workspace: ops-prod-us5
      - terraform-apply:
          account_id: "422111308700"
          block_rollbacks: true
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-dc
          enable_slack_mention: false
          env: prod
          filters:
            branches:
              only:
                - master
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-ops-prod-us5-apply
          requires:
            - ops-dc-approve-apply-ops-prod-us5
          runner: prod-tf
          slack_channel: ops-prod-deployments
          use_plan: true
          workspace: ops-prod-us5
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us5
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: false
          executor: ops_runner
          filters:
            branches:
              only:
                - master
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          name: us5-gitops-prep-ops-prod
          region: us-east-2
          requires:
            - approve-deployment-phase1
          runner_env: prod
          slack_channel: ops-prod-deployments
          use_cluster_type: true
      - gitops-reconcile-wait:
          account_id: "422111308700"
          checker_version: v1
          cluster_name: prod-us5
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          enable_slack_mention: false
          filters:
            branches:
              only:
                - master
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          name: us5-gitops-wait-ops-prod
          profile: be
          region: us-east-2
          requires:
            - us5-gitops-prep-ops-prod
          runner: small-prod-tf
          slack_channel: ops-prod-deployments
          use_cluster_type: true
      - join:
          context:
            - imported-from-ops-project-variables
          env: prod
          name: All-phase1-updated
          requires:
            - us1-gitops-wait-ops-prod
            - us2-gitops-wait-ops-prod
            - us3-gitops-wait-ops-prod
            - us4-gitops-wait-ops-prod
            - us5-gitops-wait-ops-prod
          stage: phase1
      - post-deployment:
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          enable_slack_mention: false
          env: prod
          filters:
            branches:
              only: master
          name: Post deployment ops
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: ops-prod-deployments
  deployment-wiz-os-env-prod:
    jobs:
      - block_workflow_runner:
          context:
            - imported-from-ops-project-variables
          only-on-branch: master
          runner: prod-tf
          timeout_minutes: "120"
      - validate-no-freeze:
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          env: prod
          name: validate-no-freeze
          requires:
            - block_workflow_runner
          runner: prod-tf
      - terraform-precheck-runner:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          clone_terraform_outputs: false
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/wiz-os-env
          enable_debug_logs: true
          enable_slack_mention: true
          env: prod
          filters:
            branches:
              only:
                - master
          name: terraform-wiz-os-env-prod-validate
          notify_on: fail
          pr_mode: false
          refresh: true
          requires:
            - validate-no-freeze
          runner: prod-tf
          slack_channel: prod-deployments
          workspace: prod-wiz-os-env
      - wiz-os-env-approve-apply-prod:
          context:
            - imported-from-ops-project-variables
          requires:
            - terraform-wiz-os-env-prod-validate
          type: approval
      - auto-approve:
          approval_job_name: wiz-os-env-approve-apply-prod
          context:
            - imported-from-ops-project-variables
          directory: terraform/wiz-os-env
          name: wiz-os-env-maybe-autoapprove-prod
          requires:
            - terraform-wiz-os-env-prod-validate
          workspace: prod-wiz-os-env
      - terraform-apply-runner:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          clone_terraform_outputs: false
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/wiz-os-env
          enable_debug_logs: true
          enable_slack_mention: true
          env: prod
          filters:
            branches:
              only:
                - master
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: terraform-wiz-os-env-prod-apply
          refresh: true
          requires:
            - wiz-os-env-approve-apply-prod
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-wiz-os-env
      - join:
          checkpoint: tf-env
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          env: prod
          name: join-tf-env
          requires:
            - terraform-wiz-os-env-prod-apply
  deployment-wiz-prod:
    jobs:
      - block_workflow_runner:
          context:
            - imported-from-ops-project-variables
          only-on-branch: master
          runner: prod-tf
          timeout_minutes: "120"
      - validate-no-freeze:
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          env: prod
          name: validate-no-freeze
          requires:
            - block_workflow_runner
          runner: prod-tf
      - create-workspace:
          account_id: "197171649850"
          cloud: aws
          context:
            - imported-from-ops-project-variables
          envType: prod
          name: create-workspaces-prod-1
          requires:
            - validate-no-freeze
          runner: prod-tf
      - create-workspace:
          account_id: "830522659852"
          cloud: aws
          context:
            - imported-from-ops-project-variables
          envType: prod
          name: create-workspaces-prod-2
          requires:
            - validate-no-freeze
          runner: prod-tf
      - create-workspace:
          account_id: "665897822074"
          cloud: aws
          context:
            - imported-from-ops-project-variables
          envType: prod
          name: create-workspaces-prod-3
          requires:
            - validate-no-freeze
          runner: prod-tf
      - create-workspace:
          account_id: "851725410668"
          cloud: aws
          context:
            - imported-from-ops-project-variables
          envType: prod
          name: create-workspaces-prod-4
          requires:
            - validate-no-freeze
          runner: prod-tf
      - create-workspace:
          account_id: "992382568687"
          cloud: aws
          context:
            - imported-from-ops-project-variables
          envType: prod
          name: create-workspaces-prod-5
          requires:
            - validate-no-freeze
          runner: prod-tf
      - create-workspace:
          account_id: "992382387618"
          cloud: aws
          context:
            - imported-from-ops-project-variables
          envType: prod
          name: create-workspaces-prod-6
          requires:
            - validate-no-freeze
          runner: prod-tf
      - join:
          context:
            - imported-from-ops-project-variables
          name: join-tf-ws
          requires:
            - create-workspaces-prod-1
            - create-workspaces-prod-2
            - create-workspaces-prod-3
            - create-workspaces-prod-4
            - create-workspaces-prod-5
            - create-workspaces-prod-6
      - terraform-precheck-runner:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          clone_terraform_outputs: false
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-env
          enable_debug_logs: true
          enable_slack_mention: true
          env: prod
          filters:
            branches:
              only:
                - master
          name: terraform-aws-env-prod-validate
          notify_on: fail
          pr_mode: false
          refresh: true
          requires:
            - join-tf-ws
          runner: large-prod-tf
          slack_channel: prod-deployments
          workspace: prod
      - aws-env-approve-apply-prod:
          context:
            - imported-from-ops-project-variables
          requires:
            - terraform-aws-env-prod-validate
          type: approval
      - auto-approve:
          approval_job_name: aws-env-approve-apply-prod
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-env
          name: aws-env-maybe-autoapprove-prod
          requires:
            - terraform-aws-env-prod-validate
          workspace: prod
      - terraform-apply-runner:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          clone_terraform_outputs: false
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-env
          enable_debug_logs: true
          enable_slack_mention: true
          env: prod
          filters:
            branches:
              only:
                - master
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: terraform-aws-env-prod-apply
          refresh: true
          requires:
            - aws-env-approve-apply-prod
          runner: large-prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod
      - terraform-precheck-runner:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          clone_terraform_outputs: false
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/oci-env
          enable_debug_logs: true
          enable_slack_mention: true
          env: prod
          filters:
            branches:
              only:
                - master
          name: terraform-oci-env-prod-validate
          notify_on: fail
          pr_mode: false
          refresh: true
          requires:
            - join-tf-ws
          runner: prod-tf
          slack_channel: prod-deployments
          workspace: prod
      - oci-env-approve-apply-prod:
          context:
            - imported-from-ops-project-variables
          requires:
            - terraform-oci-env-prod-validate
          type: approval
      - auto-approve:
          approval_job_name: oci-env-approve-apply-prod
          context:
            - imported-from-ops-project-variables
          directory: terraform/oci-env
          name: oci-env-maybe-autoapprove-prod
          requires:
            - terraform-oci-env-prod-validate
          workspace: prod
      - terraform-apply-runner:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          clone_terraform_outputs: false
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/oci-env
          enable_debug_logs: true
          enable_slack_mention: true
          env: prod
          filters:
            branches:
              only:
                - master
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: terraform-oci-env-prod-apply
          refresh: true
          requires:
            - oci-env-approve-apply-prod
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod
      - terraform-precheck-runner:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          clone_terraform_outputs: false
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/da-env
          enable_debug_logs: true
          enable_slack_mention: true
          env: prod
          filters:
            branches:
              only:
                - master
          name: terraform-da-env-prod-validate
          notify_on: fail
          pr_mode: false
          refresh: true
          requires:
            - join-tf-ws
          runner: prod-tf
          slack_channel: prod-deployments
          workspace: prod-da-env
      - da-env-approve-apply-prod:
          context:
            - imported-from-ops-project-variables
          requires:
            - terraform-da-env-prod-validate
          type: approval
      - auto-approve:
          approval_job_name: da-env-approve-apply-prod
          context:
            - imported-from-ops-project-variables
          directory: terraform/da-env
          name: da-env-maybe-autoapprove-prod
          requires:
            - terraform-da-env-prod-validate
          workspace: prod-da-env
      - terraform-apply-runner:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          clone_terraform_outputs: false
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/da-env
          enable_debug_logs: true
          enable_slack_mention: true
          env: prod
          filters:
            branches:
              only:
                - master
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: terraform-da-env-prod-apply
          refresh: true
          requires:
            - da-env-approve-apply-prod
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-da-env
      - terraform-precheck-runner:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          clone_terraform_outputs: false
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/dt-env
          enable_debug_logs: true
          enable_slack_mention: true
          env: prod
          filters:
            branches:
              only:
                - master
          name: terraform-dt-env-prod-validate
          notify_on: fail
          pr_mode: false
          refresh: true
          requires:
            - join-tf-ws
          runner: prod-tf
          slack_channel: prod-deployments
          workspace: prod-dt-env
      - dt-env-approve-apply-prod:
          context:
            - imported-from-ops-project-variables
          requires:
            - terraform-dt-env-prod-validate
          type: approval
      - auto-approve:
          approval_job_name: dt-env-approve-apply-prod
          context:
            - imported-from-ops-project-variables
          directory: terraform/dt-env
          name: dt-env-maybe-autoapprove-prod
          requires:
            - terraform-dt-env-prod-validate
          workspace: prod-dt-env
      - terraform-apply-runner:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          clone_terraform_outputs: false
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/dt-env
          enable_debug_logs: true
          enable_slack_mention: true
          env: prod
          filters:
            branches:
              only:
                - master
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: terraform-dt-env-prod-apply
          refresh: true
          requires:
            - dt-env-approve-apply-prod
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-dt-env
      - join:
          checkpoint: tf-env
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          env: prod
          name: join-tf-env
          requires:
            - terraform-aws-env-prod-apply
            - terraform-oci-env-prod-apply
            - terraform-da-env-prod-apply
            - terraform-dt-env-prod-apply
      - terraform-precheck-runner:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          clone_terraform_outputs: false
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-account
          enable_debug_logs: true
          enable_slack_mention: true
          env: prod
          filters:
            branches:
              only:
                - master
          name: terraform-aws-account-prod-1-validate
          notify_on: fail
          pr_mode: false
          refresh: true
          requires:
            - join-tf-env
          runner: prod-tf
          slack_channel: prod-deployments
          workspace: prod-1
      - aws-account-approve-apply-prod-1:
          context:
            - imported-from-ops-project-variables
          requires:
            - terraform-aws-account-prod-1-validate
          type: approval
      - auto-approve:
          approval_job_name: aws-account-approve-apply-prod-1
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-account
          name: aws-account-maybe-autoapprove-prod-1
          requires:
            - terraform-aws-account-prod-1-validate
          workspace: prod-1
      - terraform-apply-runner:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          clone_terraform_outputs: false
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-account
          enable_debug_logs: true
          enable_slack_mention: true
          env: prod
          filters:
            branches:
              only:
                - master
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: terraform-aws-account-prod-1-apply
          refresh: true
          requires:
            - aws-account-approve-apply-prod-1
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-1
      - terraform-precheck-runner:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          clone_terraform_outputs: false
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-account
          enable_debug_logs: true
          enable_slack_mention: true
          env: prod
          filters:
            branches:
              only:
                - master
          name: terraform-aws-account-prod-2-validate
          notify_on: fail
          pr_mode: false
          refresh: true
          requires:
            - join-tf-env
          runner: prod-tf
          slack_channel: prod-deployments
          workspace: prod-2
      - aws-account-approve-apply-prod-2:
          context:
            - imported-from-ops-project-variables
          requires:
            - terraform-aws-account-prod-2-validate
          type: approval
      - auto-approve:
          approval_job_name: aws-account-approve-apply-prod-2
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-account
          name: aws-account-maybe-autoapprove-prod-2
          requires:
            - terraform-aws-account-prod-2-validate
          workspace: prod-2
      - terraform-apply-runner:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          clone_terraform_outputs: false
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-account
          enable_debug_logs: true
          enable_slack_mention: true
          env: prod
          filters:
            branches:
              only:
                - master
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: terraform-aws-account-prod-2-apply
          refresh: true
          requires:
            - aws-account-approve-apply-prod-2
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-2
      - terraform-precheck-runner:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          clone_terraform_outputs: false
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-account
          enable_debug_logs: true
          enable_slack_mention: true
          env: prod
          filters:
            branches:
              only:
                - master
          name: terraform-aws-account-prod-3-validate
          notify_on: fail
          pr_mode: false
          refresh: true
          requires:
            - join-tf-env
          runner: prod-tf
          slack_channel: prod-deployments
          workspace: prod-3
      - aws-account-approve-apply-prod-3:
          context:
            - imported-from-ops-project-variables
          requires:
            - terraform-aws-account-prod-3-validate
          type: approval
      - auto-approve:
          approval_job_name: aws-account-approve-apply-prod-3
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-account
          name: aws-account-maybe-autoapprove-prod-3
          requires:
            - terraform-aws-account-prod-3-validate
          workspace: prod-3
      - terraform-apply-runner:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          clone_terraform_outputs: false
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-account
          enable_debug_logs: true
          enable_slack_mention: true
          env: prod
          filters:
            branches:
              only:
                - master
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: terraform-aws-account-prod-3-apply
          refresh: true
          requires:
            - aws-account-approve-apply-prod-3
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-3
      - terraform-precheck-runner:
          account_id: "851725410668"
          avoid_concurrent_runs: false
          block_rollbacks: true
          clone_terraform_outputs: false
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-account
          enable_debug_logs: true
          enable_slack_mention: true
          env: prod
          filters:
            branches:
              only:
                - master
          name: terraform-aws-account-prod-4-validate
          notify_on: fail
          pr_mode: false
          refresh: true
          requires:
            - join-tf-env
          runner: prod-tf
          slack_channel: prod-deployments
          workspace: prod-4
      - aws-account-approve-apply-prod-4:
          context:
            - imported-from-ops-project-variables
          requires:
            - terraform-aws-account-prod-4-validate
          type: approval
      - auto-approve:
          approval_job_name: aws-account-approve-apply-prod-4
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-account
          name: aws-account-maybe-autoapprove-prod-4
          requires:
            - terraform-aws-account-prod-4-validate
          workspace: prod-4
      - terraform-apply-runner:
          account_id: "851725410668"
          avoid_concurrent_runs: false
          block_rollbacks: true
          clone_terraform_outputs: false
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-account
          enable_debug_logs: true
          enable_slack_mention: true
          env: prod
          filters:
            branches:
              only:
                - master
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: terraform-aws-account-prod-4-apply
          refresh: true
          requires:
            - aws-account-approve-apply-prod-4
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-4
      - terraform-precheck-runner:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          clone_terraform_outputs: false
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-account
          enable_debug_logs: true
          enable_slack_mention: true
          env: prod
          filters:
            branches:
              only:
                - master
          name: terraform-aws-account-prod-5-validate
          notify_on: fail
          pr_mode: false
          refresh: true
          requires:
            - join-tf-env
          runner: prod-tf
          slack_channel: prod-deployments
          workspace: prod-5
      - aws-account-approve-apply-prod-5:
          context:
            - imported-from-ops-project-variables
          requires:
            - terraform-aws-account-prod-5-validate
          type: approval
      - auto-approve:
          approval_job_name: aws-account-approve-apply-prod-5
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-account
          name: aws-account-maybe-autoapprove-prod-5
          requires:
            - terraform-aws-account-prod-5-validate
          workspace: prod-5
      - terraform-apply-runner:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          clone_terraform_outputs: false
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-account
          enable_debug_logs: true
          enable_slack_mention: true
          env: prod
          filters:
            branches:
              only:
                - master
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: terraform-aws-account-prod-5-apply
          refresh: true
          requires:
            - aws-account-approve-apply-prod-5
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-5
      - terraform-precheck-runner:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          clone_terraform_outputs: false
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-account
          enable_debug_logs: true
          enable_slack_mention: true
          env: prod
          filters:
            branches:
              only:
                - master
          name: terraform-aws-account-prod-6-validate
          notify_on: fail
          pr_mode: false
          refresh: true
          requires:
            - join-tf-env
          runner: prod-tf
          slack_channel: prod-deployments
          workspace: prod-6
      - aws-account-approve-apply-prod-6:
          context:
            - imported-from-ops-project-variables
          requires:
            - terraform-aws-account-prod-6-validate
          type: approval
      - auto-approve:
          approval_job_name: aws-account-approve-apply-prod-6
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-account
          name: aws-account-maybe-autoapprove-prod-6
          requires:
            - terraform-aws-account-prod-6-validate
          workspace: prod-6
      - terraform-apply-runner:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          clone_terraform_outputs: false
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-account
          enable_debug_logs: true
          enable_slack_mention: true
          env: prod
          filters:
            branches:
              only:
                - master
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: terraform-aws-account-prod-6-apply
          refresh: true
          requires:
            - aws-account-approve-apply-prod-6
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-6
      - join:
          checkpoint: tf-account
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          env: prod
          name: join-tf-account
          requires:
            - terraform-aws-account-prod-1-apply
            - terraform-aws-account-prod-2-apply
            - terraform-aws-account-prod-3-apply
            - terraform-aws-account-prod-4-apply
            - terraform-aws-account-prod-5-apply
            - terraform-aws-account-prod-6-apply
      - publish_outpost_lite_image:
          context:
            - imported-from-ops-project-variables
            - BuildContext
            - deploy_key_wiztools
          image_name: outpost-lite-runner-container-registry
          name: publish-outpost-lite-runner-container-registry
          requires:
            - join-tf-account
      - publish_outpost_lite_image:
          context:
            - imported-from-ops-project-variables
            - BuildContext
            - deploy_key_wiztools
          image_name: outpost-lite-runner-remediation
          name: publish-outpost-lite-runner-remediation
          requires:
            - join-tf-account
      - publish_outpost_lite_image:
          context:
            - imported-from-ops-project-variables
            - BuildContext
            - deploy_key_wiztools
          image_name: outpost-lite-runner-vcs
          name: publish-outpost-lite-runner-vcs
          requires:
            - join-tf-account
      - join:
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          env: prod
          name: join-publish-outpost-lite-images
          requires:
            - publish-outpost-lite-runner-container-registry
            - publish-outpost-lite-runner-remediation
            - publish-outpost-lite-runner-vcs
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: true
          env: prod
          name: Terraform-prod-eu5-precheck
          notify_on: fail
          origin_dc: null
          phase: phase1
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - join-publish-outpost-lite-images
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 30
          workspace: prod-eu5
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-eu5-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase1 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-eu5
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-eu5
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: eu5-gitops-prep-wiz-prod
          region: eu-west-2
          requires:
            - Terraform-prod-eu5-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-eu5
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: eu5
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: eu5-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: eu-west-2
          requires:
            - eu5-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-eu5.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: eu5
          env_name: prod
          function_name: prod-eu5-forensics-package-auth-s3-cf
          link_table_name: prod-eu5-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-eu5
          package_name: forensicspackage-auth-serverless
          region: eu-west-2
          requires:
            - eu5-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - join:
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          env: prod
          name: All-phase1-updated
          requires:
            - Publish-forensics-package-auth-lambda-version-prod-eu5
          stage: phase1
      - join:
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          env: prod
          name: wait_before_approval-phase1
          requires:
            - Terraform-prod-eu5-precheck
          save_cache: false
          stage: phase1
      - aggregate_plans:
          context:
            - imported-from-ops-project-variables
            - WizGithubReadOnlyContext
            - SlackDynamoCtx
            - wiz-cache
          enable_slack_mention: false
          env: prod
          requires:
            - wait_before_approval-phase1
          runner: prod-tf
          slack_channel: deployment-approvals
          stage: phase1
      - approve-deployment-phase1 (REVIEW THE AGGREGATED PLAN!):
          context:
            - imported-from-ops-project-variables
          requires:
            - wait_before_approval-phase1
          type: approval
      - terraform-precheck:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-ap1-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-ap1
      - terraform-apply:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-ap1-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-ap1
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-ap1
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: ap1-gitops-prep-wiz-prod
          region: ap-south-1
          requires:
            - Terraform-prod-ap1-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "830522659852"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "926272838456"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-ap1
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: ap1
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: ap1-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: ap-south-1
          requires:
            - ap1-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "830522659852"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "830522659852"
          auth_account_id: "926272838456"
          auth_cache_bucket: 926272838456-auth-cache-bucket
          auth_read_role_name: prod-2-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-ap1.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: ap1
          env_name: prod
          function_name: prod-ap1-forensics-package-auth-s3-cf
          link_table_name: prod-ap1-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-ap1
          package_name: forensicspackage-auth-serverless
          region: ap-south-1
          requires:
            - ap1-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-ap2-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-ap2
      - terraform-apply:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-ap2-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-ap2
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-ap2
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: ap2-gitops-prep-wiz-prod
          region: ap-southeast-2
          requires:
            - Terraform-prod-ap2-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382568687"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "471112576096"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-ap2
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: ap2
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: ap2-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: ap-southeast-2
          requires:
            - ap2-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382568687"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382568687"
          auth_account_id: "471112576096"
          auth_cache_bucket: 471112576096-auth-cache-bucket
          auth_read_role_name: prod-5-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-ap2.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: ap2
          env_name: prod
          function_name: prod-ap2-forensics-package-auth-s3-cf
          link_table_name: prod-ap2-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-ap2
          package_name: forensicspackage-auth-serverless
          region: ap-southeast-2
          requires:
            - ap2-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-ap3-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-ap3
      - terraform-apply:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-ap3-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-ap3
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-ap3
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: ap3-gitops-prep-wiz-prod
          region: ap-northeast-1
          requires:
            - Terraform-prod-ap3-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382568687"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "471112576096"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-ap3
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: ap3
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: ap3-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: ap-northeast-1
          requires:
            - ap3-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382568687"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382568687"
          auth_account_id: "471112576096"
          auth_cache_bucket: 471112576096-auth-cache-bucket
          auth_read_role_name: prod-5-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-ap3.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: ap3
          env_name: prod
          function_name: prod-ap3-forensics-package-auth-s3-cf
          link_table_name: prod-ap3-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-ap3
          package_name: forensicspackage-auth-serverless
          region: ap-northeast-1
          requires:
            - ap3-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-ap4-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-ap4
      - terraform-apply:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-ap4-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-ap4
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-ap4
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: ap4-gitops-prep-wiz-prod
          region: ap-southeast-2
          requires:
            - Terraform-prod-ap4-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382387618"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "730335539552"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-ap4
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: ap4
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: ap4-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: ap-southeast-2
          requires:
            - ap4-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382387618"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382387618"
          auth_account_id: "730335539552"
          auth_cache_bucket: 730335539552-auth-cache-bucket
          auth_read_role_name: prod-6-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-ap4.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: ap4
          env_name: prod
          function_name: prod-ap4-forensics-package-auth-s3-cf
          link_table_name: prod-ap4-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-ap4
          package_name: forensicspackage-auth-serverless
          region: ap-southeast-2
          requires:
            - ap4-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-ca1-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-ca1
      - terraform-apply:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-ca1-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-ca1
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-ca1
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: ca1-gitops-prep-wiz-prod
          region: ca-central-1
          requires:
            - Terraform-prod-ca1-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "830522659852"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "926272838456"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-ca1
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: ca1
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: ca1-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: ca-central-1
          requires:
            - ca1-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "830522659852"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "830522659852"
          auth_account_id: "926272838456"
          auth_cache_bucket: 926272838456-auth-cache-bucket
          auth_read_role_name: prod-2-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-ca1.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: ca1
          env_name: prod
          function_name: prod-ca1-forensics-package-auth-s3-cf
          link_table_name: prod-ca1-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-ca1
          package_name: forensicspackage-auth-serverless
          region: ca-central-1
          requires:
            - ca1-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-ca2-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-ca2
      - terraform-apply:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-ca2-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-ca2
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-ca2
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: ca2-gitops-prep-wiz-prod
          region: ca-central-1
          requires:
            - Terraform-prod-ca2-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382387618"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "730335539552"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-ca2
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: ca2
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: ca2-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: ca-central-1
          requires:
            - ca2-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382387618"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382387618"
          auth_account_id: "730335539552"
          auth_cache_bucket: 730335539552-auth-cache-bucket
          auth_read_role_name: prod-6-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-ca2.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: ca2
          env_name: prod
          function_name: prod-ca2-forensics-package-auth-s3-cf
          link_table_name: prod-ca2-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-ca2
          package_name: forensicspackage-auth-serverless
          region: ca-central-1
          requires:
            - ca2-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-eu1-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-eu1
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-eu1-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-eu1
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-eu1
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: eu1-gitops-prep-wiz-prod
          region: eu-west-2
          requires:
            - Terraform-prod-eu1-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-eu1
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: eu1
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: eu1-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: eu-west-2
          requires:
            - eu1-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-eu1.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: eu1
          env_name: prod
          function_name: prod-eu1-forensics-package-auth-s3-cf
          link_table_name: prod-eu1-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-eu1
          package_name: forensicspackage-auth-serverless
          region: eu-west-2
          requires:
            - eu1-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-eu10-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-eu10
      - terraform-apply:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-eu10-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-eu10
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-eu10
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: eu10-gitops-prep-wiz-prod
          region: eu-central-1
          requires:
            - Terraform-prod-eu10-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "830522659852"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "926272838456"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-eu10
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: eu10
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: eu10-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: eu-central-1
          requires:
            - eu10-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "830522659852"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "830522659852"
          auth_account_id: "926272838456"
          auth_cache_bucket: 926272838456-auth-cache-bucket
          auth_read_role_name: prod-2-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-eu10.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: eu10
          env_name: prod
          function_name: prod-eu10-forensics-package-auth-s3-cf
          link_table_name: prod-eu10-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-eu10
          package_name: forensicspackage-auth-serverless
          region: eu-central-1
          requires:
            - eu10-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-eu11-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-eu11
      - terraform-apply:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-eu11-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-eu11
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-eu11
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: eu11-gitops-prep-wiz-prod
          region: eu-west-2
          requires:
            - Terraform-prod-eu11-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "665897822074"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "522875108335"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-eu11
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: eu11
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: eu11-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: eu-west-2
          requires:
            - eu11-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "665897822074"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "665897822074"
          auth_account_id: "522875108335"
          auth_cache_bucket: 522875108335-auth-cache-bucket
          auth_read_role_name: prod-3-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-eu11.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: eu11
          env_name: prod
          function_name: prod-eu11-forensics-package-auth-s3-cf
          link_table_name: prod-eu11-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-eu11
          package_name: forensicspackage-auth-serverless
          region: eu-west-2
          requires:
            - eu11-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-eu12-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-eu12
      - terraform-apply:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-eu12-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-eu12
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-eu12
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: eu12-gitops-prep-wiz-prod
          region: eu-west-1
          requires:
            - Terraform-prod-eu12-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "830522659852"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "926272838456"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-eu12
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: eu12
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: eu12-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: eu-west-1
          requires:
            - eu12-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "830522659852"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "830522659852"
          auth_account_id: "926272838456"
          auth_cache_bucket: 926272838456-auth-cache-bucket
          auth_read_role_name: prod-2-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-eu12.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: eu12
          env_name: prod
          function_name: prod-eu12-forensics-package-auth-s3-cf
          link_table_name: prod-eu12-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-eu12
          package_name: forensicspackage-auth-serverless
          region: eu-west-1
          requires:
            - eu12-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-eu13-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-eu13
      - terraform-apply:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-eu13-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-eu13
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-eu13
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: eu13-gitops-prep-wiz-prod
          region: eu-central-1
          requires:
            - Terraform-prod-eu13-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "665897822074"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "522875108335"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-eu13
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: eu13
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: eu13-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: eu-central-1
          requires:
            - eu13-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "665897822074"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "665897822074"
          auth_account_id: "522875108335"
          auth_cache_bucket: 522875108335-auth-cache-bucket
          auth_read_role_name: prod-3-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-eu13.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: eu13
          env_name: prod
          function_name: prod-eu13-forensics-package-auth-s3-cf
          link_table_name: prod-eu13-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-eu13
          package_name: forensicspackage-auth-serverless
          region: eu-central-1
          requires:
            - eu13-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-eu14-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-eu14
      - terraform-apply:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-eu14-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-eu14
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-eu14
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: eu14-gitops-prep-wiz-prod
          region: eu-west-1
          requires:
            - Terraform-prod-eu14-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "665897822074"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "522875108335"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-eu14
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: eu14
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: eu14-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: eu-west-1
          requires:
            - eu14-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "665897822074"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "665897822074"
          auth_account_id: "522875108335"
          auth_cache_bucket: 522875108335-auth-cache-bucket
          auth_read_role_name: prod-3-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-eu14.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: eu14
          env_name: prod
          function_name: prod-eu14-forensics-package-auth-s3-cf
          link_table_name: prod-eu14-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-eu14
          package_name: forensicspackage-auth-serverless
          region: eu-west-1
          requires:
            - eu14-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-eu15-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-eu15
      - terraform-apply:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-eu15-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-eu15
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-eu15
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: eu15-gitops-prep-wiz-prod
          region: eu-west-1
          requires:
            - Terraform-prod-eu15-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382568687"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "471112576096"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-eu15
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: eu15
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: eu15-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: eu-west-1
          requires:
            - eu15-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382568687"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382568687"
          auth_account_id: "471112576096"
          auth_cache_bucket: 471112576096-auth-cache-bucket
          auth_read_role_name: prod-5-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-eu15.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: eu15
          env_name: prod
          function_name: prod-eu15-forensics-package-auth-s3-cf
          link_table_name: prod-eu15-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-eu15
          package_name: forensicspackage-auth-serverless
          region: eu-west-1
          requires:
            - eu15-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-eu16-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-eu16
      - terraform-apply:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-eu16-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-eu16
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-eu16
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: eu16-gitops-prep-wiz-prod
          region: eu-west-2
          requires:
            - Terraform-prod-eu16-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382568687"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "471112576096"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-eu16
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: eu16
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: eu16-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: eu-west-2
          requires:
            - eu16-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382568687"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382568687"
          auth_account_id: "471112576096"
          auth_cache_bucket: 471112576096-auth-cache-bucket
          auth_read_role_name: prod-5-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-eu16.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: eu16
          env_name: prod
          function_name: prod-eu16-forensics-package-auth-s3-cf
          link_table_name: prod-eu16-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-eu16
          package_name: forensicspackage-auth-serverless
          region: eu-west-2
          requires:
            - eu16-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-eu17-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-eu17
      - terraform-apply:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-eu17-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-eu17
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-eu17
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: eu17-gitops-prep-wiz-prod
          region: eu-central-1
          requires:
            - Terraform-prod-eu17-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382568687"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "471112576096"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-eu17
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: eu17
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: eu17-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: eu-central-1
          requires:
            - eu17-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382568687"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382568687"
          auth_account_id: "471112576096"
          auth_cache_bucket: 471112576096-auth-cache-bucket
          auth_read_role_name: prod-5-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-eu17.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: eu17
          env_name: prod
          function_name: prod-eu17-forensics-package-auth-s3-cf
          link_table_name: prod-eu17-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-eu17
          package_name: forensicspackage-auth-serverless
          region: eu-central-1
          requires:
            - eu17-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-eu18-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-eu18
      - terraform-apply:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-eu18-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-eu18
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-eu18
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: eu18-gitops-prep-wiz-prod
          region: eu-west-1
          requires:
            - Terraform-prod-eu18-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382568687"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "471112576096"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-eu18
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: eu18
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: eu18-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: eu-west-1
          requires:
            - eu18-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382568687"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382568687"
          auth_account_id: "471112576096"
          auth_cache_bucket: 471112576096-auth-cache-bucket
          auth_read_role_name: prod-5-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-eu18.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: eu18
          env_name: prod
          function_name: prod-eu18-forensics-package-auth-s3-cf
          link_table_name: prod-eu18-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-eu18
          package_name: forensicspackage-auth-serverless
          region: eu-west-1
          requires:
            - eu18-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-eu19-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-eu19
      - terraform-apply:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-eu19-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-eu19
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-eu19
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: eu19-gitops-prep-wiz-prod
          region: eu-west-1
          requires:
            - Terraform-prod-eu19-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382387618"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "730335539552"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-eu19
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: eu19
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: eu19-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: eu-west-1
          requires:
            - eu19-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382387618"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382387618"
          auth_account_id: "730335539552"
          auth_cache_bucket: 730335539552-auth-cache-bucket
          auth_read_role_name: prod-6-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-eu19.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: eu19
          env_name: prod
          function_name: prod-eu19-forensics-package-auth-s3-cf
          link_table_name: prod-eu19-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-eu19
          package_name: forensicspackage-auth-serverless
          region: eu-west-1
          requires:
            - eu19-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-eu2-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-eu2
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-eu2-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-eu2
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-eu2
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: eu2-gitops-prep-wiz-prod
          region: eu-west-2
          requires:
            - Terraform-prod-eu2-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-eu2
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: eu2
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: eu2-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: eu-west-2
          requires:
            - eu2-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-eu2.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: eu2
          env_name: prod
          function_name: prod-eu2-forensics-package-auth-s3-cf
          link_table_name: prod-eu2-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-eu2
          package_name: forensicspackage-auth-serverless
          region: eu-west-2
          requires:
            - eu2-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-eu20-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-eu20
      - terraform-apply:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-eu20-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-eu20
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-eu20
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: eu20-gitops-prep-wiz-prod
          region: eu-west-2
          requires:
            - Terraform-prod-eu20-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382387618"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "730335539552"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-eu20
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: eu20
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: eu20-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: eu-west-2
          requires:
            - eu20-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382387618"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382387618"
          auth_account_id: "730335539552"
          auth_cache_bucket: 730335539552-auth-cache-bucket
          auth_read_role_name: prod-6-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-eu20.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: eu20
          env_name: prod
          function_name: prod-eu20-forensics-package-auth-s3-cf
          link_table_name: prod-eu20-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-eu20
          package_name: forensicspackage-auth-serverless
          region: eu-west-2
          requires:
            - eu20-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-eu3-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-eu3
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-eu3-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-eu3
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-eu3
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: eu3-gitops-prep-wiz-prod
          region: eu-central-1
          requires:
            - Terraform-prod-eu3-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-eu3
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: eu3
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: eu3-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: eu-central-1
          requires:
            - eu3-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-eu3.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: eu3
          env_name: prod
          function_name: prod-eu3-forensics-package-auth-s3-cf
          link_table_name: prod-eu3-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-eu3
          package_name: forensicspackage-auth-serverless
          region: eu-central-1
          requires:
            - eu3-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-eu4-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-eu4
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-eu4-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-eu4
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-eu4
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: eu4-gitops-prep-wiz-prod
          region: eu-central-1
          requires:
            - Terraform-prod-eu4-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-eu4
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: eu4
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: eu4-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: eu-central-1
          requires:
            - eu4-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-eu4.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: eu4
          env_name: prod
          function_name: prod-eu4-forensics-package-auth-s3-cf
          link_table_name: prod-eu4-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-eu4
          package_name: forensicspackage-auth-serverless
          region: eu-central-1
          requires:
            - eu4-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-eu6-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-eu6
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-eu6-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-eu6
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-eu6
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: eu6-gitops-prep-wiz-prod
          region: eu-west-2
          requires:
            - Terraform-prod-eu6-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-eu6
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: eu6
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: eu6-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: eu-west-2
          requires:
            - eu6-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-eu6.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: eu6
          env_name: prod
          function_name: prod-eu6-forensics-package-auth-s3-cf
          link_table_name: prod-eu6-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-eu6
          package_name: forensicspackage-auth-serverless
          region: eu-west-2
          requires:
            - eu6-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-eu7-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-eu7
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-eu7-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-eu7
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-eu7
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: eu7-gitops-prep-wiz-prod
          region: eu-central-1
          requires:
            - Terraform-prod-eu7-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-eu7
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: eu7
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: eu7-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: eu-central-1
          requires:
            - eu7-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-eu7.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: eu7
          env_name: prod
          function_name: prod-eu7-forensics-package-auth-s3-cf
          link_table_name: prod-eu7-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-eu7
          package_name: forensicspackage-auth-serverless
          region: eu-central-1
          requires:
            - eu7-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-eu8-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-eu8
      - terraform-apply:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-eu8-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-eu8
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-eu8
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: eu8-gitops-prep-wiz-prod
          region: eu-central-1
          requires:
            - Terraform-prod-eu8-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "830522659852"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "926272838456"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-eu8
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: eu8
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: eu8-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: eu-central-1
          requires:
            - eu8-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "830522659852"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "830522659852"
          auth_account_id: "926272838456"
          auth_cache_bucket: 926272838456-auth-cache-bucket
          auth_read_role_name: prod-2-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-eu8.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: eu8
          env_name: prod
          function_name: prod-eu8-forensics-package-auth-s3-cf
          link_table_name: prod-eu8-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-eu8
          package_name: forensicspackage-auth-serverless
          region: eu-central-1
          requires:
            - eu8-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-eu9-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-eu9
      - terraform-apply:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-eu9-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-eu9
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-eu9
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: eu9-gitops-prep-wiz-prod
          region: eu-west-2
          requires:
            - Terraform-prod-eu9-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "830522659852"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "926272838456"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-eu9
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: eu9
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: eu9-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: eu-west-2
          requires:
            - eu9-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "830522659852"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "830522659852"
          auth_account_id: "926272838456"
          auth_cache_bucket: 926272838456-auth-cache-bucket
          auth_read_role_name: prod-2-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-eu9.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: eu9
          env_name: prod
          function_name: prod-eu9-forensics-package-auth-s3-cf
          link_table_name: prod-eu9-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-eu9
          package_name: forensicspackage-auth-serverless
          region: eu-west-2
          requires:
            - eu9-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-il1-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-il1
      - terraform-apply:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-il1-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-il1
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-il1
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: il1-gitops-prep-wiz-prod
          region: il-central-1
          requires:
            - Terraform-prod-il1-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382568687"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "471112576096"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-il1
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: il1
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: il1-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: il-central-1
          requires:
            - il1-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382568687"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382568687"
          auth_account_id: "471112576096"
          auth_cache_bucket: 471112576096-auth-cache-bucket
          auth_read_role_name: prod-5-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-il1.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: il1
          env_name: prod
          function_name: prod-il1-forensics-package-auth-s3-cf
          link_table_name: prod-il1-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-il1
          package_name: forensicspackage-auth-serverless
          region: il-central-1
          requires:
            - il1-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-me1-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-me1
      - terraform-apply:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-me1-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-me1
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-me1
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: me1-gitops-prep-wiz-prod
          region: me-central-1
          requires:
            - Terraform-prod-me1-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "665897822074"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "522875108335"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-me1
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: me1
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: me1-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: me-central-1
          requires:
            - me1-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "665897822074"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "665897822074"
          auth_account_id: "522875108335"
          auth_cache_bucket: 522875108335-auth-cache-bucket
          auth_read_role_name: prod-3-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-me1.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: me1
          env_name: prod
          function_name: prod-me1-forensics-package-auth-s3-cf
          link_table_name: prod-me1-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-me1
          package_name: forensicspackage-auth-serverless
          region: me-central-1
          requires:
            - me1-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us1-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us1
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us1-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us1
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us1
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us1-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us1-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us1
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us1
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us1-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us1-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us1.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us1
          env_name: prod
          function_name: prod-us1-forensics-package-auth-s3-cf
          link_table_name: prod-us1-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us1
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us1-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us10-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us10
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us10-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us10
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us10
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us10-gitops-prep-wiz-prod
          region: us-west-2
          requires:
            - Terraform-prod-us10-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us10
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us10
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us10-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-2
          requires:
            - us10-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us10.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us10
          env_name: prod
          function_name: prod-us10-forensics-package-auth-s3-cf
          link_table_name: prod-us10-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us10
          package_name: forensicspackage-auth-serverless
          region: us-west-2
          requires:
            - us10-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us11-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us11
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us11-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us11
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us11
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us11-gitops-prep-wiz-prod
          region: us-east-1
          requires:
            - Terraform-prod-us11-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us11
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us11
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us11-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-1
          requires:
            - us11-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us11.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us11
          env_name: prod
          function_name: prod-us11-forensics-package-auth-s3-cf
          link_table_name: prod-us11-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us11
          package_name: forensicspackage-auth-serverless
          region: us-east-1
          requires:
            - us11-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us12-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us12
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us12-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us12
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us12
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us12-gitops-prep-wiz-prod
          region: us-west-1
          requires:
            - Terraform-prod-us12-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us12
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us12
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us12-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-1
          requires:
            - us12-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us12.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us12
          env_name: prod
          function_name: prod-us12-forensics-package-auth-s3-cf
          link_table_name: prod-us12-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us12
          package_name: forensicspackage-auth-serverless
          region: us-west-1
          requires:
            - us12-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us13-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us13
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us13-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us13
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us13
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us13-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us13-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us13
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us13
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us13-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us13-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us13.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us13
          env_name: prod
          function_name: prod-us13-forensics-package-auth-s3-cf
          link_table_name: prod-us13-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us13
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us13-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us14-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us14
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us14-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us14
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us14
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us14-gitops-prep-wiz-prod
          region: us-west-2
          requires:
            - Terraform-prod-us14-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us14
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us14
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us14-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-2
          requires:
            - us14-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us14.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us14
          env_name: prod
          function_name: prod-us14-forensics-package-auth-s3-cf
          link_table_name: prod-us14-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us14
          package_name: forensicspackage-auth-serverless
          region: us-west-2
          requires:
            - us14-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us15-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us15
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us15-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us15
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us15
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us15-gitops-prep-wiz-prod
          region: us-east-1
          requires:
            - Terraform-prod-us15-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us15
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us15
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us15-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-1
          requires:
            - us15-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us15.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us15
          env_name: prod
          function_name: prod-us15-forensics-package-auth-s3-cf
          link_table_name: prod-us15-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us15
          package_name: forensicspackage-auth-serverless
          region: us-east-1
          requires:
            - us15-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us16-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us16
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us16-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us16
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us16
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us16-gitops-prep-wiz-prod
          region: us-west-1
          requires:
            - Terraform-prod-us16-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us16
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us16
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us16-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-1
          requires:
            - us16-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us16.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us16
          env_name: prod
          function_name: prod-us16-forensics-package-auth-s3-cf
          link_table_name: prod-us16-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us16
          package_name: forensicspackage-auth-serverless
          region: us-west-1
          requires:
            - us16-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us17-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us17
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us17-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us17
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us17
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us17-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us17-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us17
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us17
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us17-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us17-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us17.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us17
          env_name: prod
          function_name: prod-us17-forensics-package-auth-s3-cf
          link_table_name: prod-us17-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us17
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us17-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us18-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us18
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us18-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us18
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us18
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us18-gitops-prep-wiz-prod
          region: us-west-2
          requires:
            - Terraform-prod-us18-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us18
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us18
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us18-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-2
          requires:
            - us18-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us18.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us18
          env_name: prod
          function_name: prod-us18-forensics-package-auth-s3-cf
          link_table_name: prod-us18-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us18
          package_name: forensicspackage-auth-serverless
          region: us-west-2
          requires:
            - us18-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us19-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us19
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us19-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us19
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us19
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us19-gitops-prep-wiz-prod
          region: us-east-1
          requires:
            - Terraform-prod-us19-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us19
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us19
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us19-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-1
          requires:
            - us19-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us19.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us19
          env_name: prod
          function_name: prod-us19-forensics-package-auth-s3-cf
          link_table_name: prod-us19-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us19
          package_name: forensicspackage-auth-serverless
          region: us-east-1
          requires:
            - us19-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us2-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us2
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us2-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us2
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us2
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us2-gitops-prep-wiz-prod
          region: us-west-2
          requires:
            - Terraform-prod-us2-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us2
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us2
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us2-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-2
          requires:
            - us2-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us2.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us2
          env_name: prod
          function_name: prod-us2-forensics-package-auth-s3-cf
          link_table_name: prod-us2-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us2
          package_name: forensicspackage-auth-serverless
          region: us-west-2
          requires:
            - us2-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us20-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us20
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us20-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us20
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us20
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us20-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us20-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us20
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us20
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us20-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us20-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us20.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us20
          env_name: prod
          function_name: prod-us20-forensics-package-auth-s3-cf
          link_table_name: prod-us20-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us20
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us20-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us21-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us21
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us21-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us21
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us21
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us21-gitops-prep-wiz-prod
          region: us-west-2
          requires:
            - Terraform-prod-us21-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us21
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us21
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us21-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-2
          requires:
            - us21-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us21.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us21
          env_name: prod
          function_name: prod-us21-forensics-package-auth-s3-cf
          link_table_name: prod-us21-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us21
          package_name: forensicspackage-auth-serverless
          region: us-west-2
          requires:
            - us21-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us22-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us22
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us22-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us22
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us22
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us22-gitops-prep-wiz-prod
          region: us-east-1
          requires:
            - Terraform-prod-us22-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us22
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us22
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us22-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-1
          requires:
            - us22-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us22.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us22
          env_name: prod
          function_name: prod-us22-forensics-package-auth-s3-cf
          link_table_name: prod-us22-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us22
          package_name: forensicspackage-auth-serverless
          region: us-east-1
          requires:
            - us22-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us23-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us23
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us23-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us23
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us23
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us23-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us23-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us23
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us23
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us23-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us23-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us23.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us23
          env_name: prod
          function_name: prod-us23-forensics-package-auth-s3-cf
          link_table_name: prod-us23-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us23
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us23-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us24-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us24
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us24-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us24
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us24
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us24-gitops-prep-wiz-prod
          region: us-west-2
          requires:
            - Terraform-prod-us24-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us24
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us24
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us24-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-2
          requires:
            - us24-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us24.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us24
          env_name: prod
          function_name: prod-us24-forensics-package-auth-s3-cf
          link_table_name: prod-us24-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us24
          package_name: forensicspackage-auth-serverless
          region: us-west-2
          requires:
            - us24-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us25-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us25
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us25-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us25
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us25
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us25-gitops-prep-wiz-prod
          region: us-east-1
          requires:
            - Terraform-prod-us25-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us25
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us25
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us25-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-1
          requires:
            - us25-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us25.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us25
          env_name: prod
          function_name: prod-us25-forensics-package-auth-s3-cf
          link_table_name: prod-us25-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us25
          package_name: forensicspackage-auth-serverless
          region: us-east-1
          requires:
            - us25-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us26-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us26
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us26-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us26
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us26
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us26-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us26-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us26
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us26
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us26-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us26-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us26.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us26
          env_name: prod
          function_name: prod-us26-forensics-package-auth-s3-cf
          link_table_name: prod-us26-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us26
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us26-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us27-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us27
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us27-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us27
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us27
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us27-gitops-prep-wiz-prod
          region: us-west-2
          requires:
            - Terraform-prod-us27-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us27
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us27
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us27-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-2
          requires:
            - us27-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us27.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us27
          env_name: prod
          function_name: prod-us27-forensics-package-auth-s3-cf
          link_table_name: prod-us27-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us27
          package_name: forensicspackage-auth-serverless
          region: us-west-2
          requires:
            - us27-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us28-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us28
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us28-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us28
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us28
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us28-gitops-prep-wiz-prod
          region: us-east-1
          requires:
            - Terraform-prod-us28-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us28
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us28
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us28-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-1
          requires:
            - us28-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us28.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us28
          env_name: prod
          function_name: prod-us28-forensics-package-auth-s3-cf
          link_table_name: prod-us28-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us28
          package_name: forensicspackage-auth-serverless
          region: us-east-1
          requires:
            - us28-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us3-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us3
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us3-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us3
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us3
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us3-gitops-prep-wiz-prod
          region: us-east-1
          requires:
            - Terraform-prod-us3-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us3
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us3
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us3-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-1
          requires:
            - us3-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us3.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us3
          env_name: prod
          function_name: prod-us3-forensics-package-auth-s3-cf
          link_table_name: prod-us3-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us3
          package_name: forensicspackage-auth-serverless
          region: us-east-1
          requires:
            - us3-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us32-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us32
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us32-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us32
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us32
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us32-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us32-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us32
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us32
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us32-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us32-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us32.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us32
          env_name: prod
          function_name: prod-us32-forensics-package-auth-s3-cf
          link_table_name: prod-us32-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us32
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us32-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us33-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us33
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us33-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us33
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us33
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us33-gitops-prep-wiz-prod
          region: us-west-2
          requires:
            - Terraform-prod-us33-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us33
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us33
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us33-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-2
          requires:
            - us33-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us33.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us33
          env_name: prod
          function_name: prod-us33-forensics-package-auth-s3-cf
          link_table_name: prod-us33-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us33
          package_name: forensicspackage-auth-serverless
          region: us-west-2
          requires:
            - us33-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us34-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us34
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us34-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us34
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us34
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us34-gitops-prep-wiz-prod
          region: us-east-1
          requires:
            - Terraform-prod-us34-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us34
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us34
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us34-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-1
          requires:
            - us34-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us34.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us34
          env_name: prod
          function_name: prod-us34-forensics-package-auth-s3-cf
          link_table_name: prod-us34-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us34
          package_name: forensicspackage-auth-serverless
          region: us-east-1
          requires:
            - us34-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us35-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us35
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us35-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us35
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us35
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us35-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us35-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us35
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us35
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us35-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us35-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us35.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us35
          env_name: prod
          function_name: prod-us35-forensics-package-auth-s3-cf
          link_table_name: prod-us35-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us35
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us35-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us36-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us36
      - terraform-apply:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us36-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us36
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us36
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us36-gitops-prep-wiz-prod
          region: ap-southeast-2
          requires:
            - Terraform-prod-us36-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "830522659852"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "926272838456"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us36
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us36
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us36-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: ap-southeast-2
          requires:
            - us36-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "830522659852"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "830522659852"
          auth_account_id: "926272838456"
          auth_cache_bucket: 926272838456-auth-cache-bucket
          auth_read_role_name: prod-2-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us36.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us36
          env_name: prod
          function_name: prod-us36-forensics-package-auth-s3-cf
          link_table_name: prod-us36-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us36
          package_name: forensicspackage-auth-serverless
          region: ap-southeast-2
          requires:
            - us36-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us37-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us37
      - terraform-apply:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us37-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us37
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us37
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us37-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us37-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "830522659852"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "926272838456"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us37
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us37
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us37-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us37-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "830522659852"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "830522659852"
          auth_account_id: "926272838456"
          auth_cache_bucket: 926272838456-auth-cache-bucket
          auth_read_role_name: prod-2-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us37.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us37
          env_name: prod
          function_name: prod-us37-forensics-package-auth-s3-cf
          link_table_name: prod-us37-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us37
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us37-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us38-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us38
      - terraform-apply:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us38-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us38
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us38
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us38-gitops-prep-wiz-prod
          region: us-west-2
          requires:
            - Terraform-prod-us38-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "830522659852"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "926272838456"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us38
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us38
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us38-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-2
          requires:
            - us38-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "830522659852"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "830522659852"
          auth_account_id: "926272838456"
          auth_cache_bucket: 926272838456-auth-cache-bucket
          auth_read_role_name: prod-2-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us38.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us38
          env_name: prod
          function_name: prod-us38-forensics-package-auth-s3-cf
          link_table_name: prod-us38-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us38
          package_name: forensicspackage-auth-serverless
          region: us-west-2
          requires:
            - us38-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us39-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us39
      - terraform-apply:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us39-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us39
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us39
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us39-gitops-prep-wiz-prod
          region: us-east-1
          requires:
            - Terraform-prod-us39-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "830522659852"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "926272838456"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us39
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us39
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us39-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-1
          requires:
            - us39-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "830522659852"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "830522659852"
          auth_account_id: "926272838456"
          auth_cache_bucket: 926272838456-auth-cache-bucket
          auth_read_role_name: prod-2-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us39.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us39
          env_name: prod
          function_name: prod-us39-forensics-package-auth-s3-cf
          link_table_name: prod-us39-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us39
          package_name: forensicspackage-auth-serverless
          region: us-east-1
          requires:
            - us39-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us4-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us4
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us4-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us4
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us4
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us4-gitops-prep-wiz-prod
          region: us-west-1
          requires:
            - Terraform-prod-us4-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us4
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us4
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us4-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-1
          requires:
            - us4-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us4.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us4
          env_name: prod
          function_name: prod-us4-forensics-package-auth-s3-cf
          link_table_name: prod-us4-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us4
          package_name: forensicspackage-auth-serverless
          region: us-west-1
          requires:
            - us4-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us40-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us40
      - terraform-apply:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us40-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us40
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us40
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us40-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us40-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "830522659852"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "926272838456"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us40
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us40
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us40-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us40-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "830522659852"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "830522659852"
          auth_account_id: "926272838456"
          auth_cache_bucket: 926272838456-auth-cache-bucket
          auth_read_role_name: prod-2-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us40.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us40
          env_name: prod
          function_name: prod-us40-forensics-package-auth-s3-cf
          link_table_name: prod-us40-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us40
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us40-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us41-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us41
      - terraform-apply:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us41-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us41
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us41
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us41-gitops-prep-wiz-prod
          region: us-west-2
          requires:
            - Terraform-prod-us41-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "830522659852"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "926272838456"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us41
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us41
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us41-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-2
          requires:
            - us41-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "830522659852"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "830522659852"
          auth_account_id: "926272838456"
          auth_cache_bucket: 926272838456-auth-cache-bucket
          auth_read_role_name: prod-2-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us41.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us41
          env_name: prod
          function_name: prod-us41-forensics-package-auth-s3-cf
          link_table_name: prod-us41-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us41
          package_name: forensicspackage-auth-serverless
          region: us-west-2
          requires:
            - us41-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us42-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us42
      - terraform-apply:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us42-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us42
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us42
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us42-gitops-prep-wiz-prod
          region: us-east-1
          requires:
            - Terraform-prod-us42-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "830522659852"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "926272838456"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us42
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us42
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us42-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-1
          requires:
            - us42-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "830522659852"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "830522659852"
          auth_account_id: "926272838456"
          auth_cache_bucket: 926272838456-auth-cache-bucket
          auth_read_role_name: prod-2-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us42.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us42
          env_name: prod
          function_name: prod-us42-forensics-package-auth-s3-cf
          link_table_name: prod-us42-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us42
          package_name: forensicspackage-auth-serverless
          region: us-east-1
          requires:
            - us42-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us43-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us43
      - terraform-apply:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us43-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us43
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us43
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us43-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us43-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "830522659852"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "926272838456"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us43
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us43
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us43-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us43-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "830522659852"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "830522659852"
          auth_account_id: "926272838456"
          auth_cache_bucket: 926272838456-auth-cache-bucket
          auth_read_role_name: prod-2-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us43.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us43
          env_name: prod
          function_name: prod-us43-forensics-package-auth-s3-cf
          link_table_name: prod-us43-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us43
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us43-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us44-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us44
      - terraform-apply:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us44-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us44
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us44
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us44-gitops-prep-wiz-prod
          region: us-west-2
          requires:
            - Terraform-prod-us44-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "830522659852"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "926272838456"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us44
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us44
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us44-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-2
          requires:
            - us44-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "830522659852"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "830522659852"
          auth_account_id: "926272838456"
          auth_cache_bucket: 926272838456-auth-cache-bucket
          auth_read_role_name: prod-2-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us44.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us44
          env_name: prod
          function_name: prod-us44-forensics-package-auth-s3-cf
          link_table_name: prod-us44-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us44
          package_name: forensicspackage-auth-serverless
          region: us-west-2
          requires:
            - us44-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us45-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us45
      - terraform-apply:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us45-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us45
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us45
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us45-gitops-prep-wiz-prod
          region: us-east-1
          requires:
            - Terraform-prod-us45-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "830522659852"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "926272838456"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us45
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us45
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us45-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-1
          requires:
            - us45-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "830522659852"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "830522659852"
          auth_account_id: "926272838456"
          auth_cache_bucket: 926272838456-auth-cache-bucket
          auth_read_role_name: prod-2-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us45.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us45
          env_name: prod
          function_name: prod-us45-forensics-package-auth-s3-cf
          link_table_name: prod-us45-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us45
          package_name: forensicspackage-auth-serverless
          region: us-east-1
          requires:
            - us45-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us46-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us46
      - terraform-apply:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us46-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us46
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us46
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us46-gitops-prep-wiz-prod
          region: us-west-2
          requires:
            - Terraform-prod-us46-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "830522659852"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "926272838456"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us46
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us46
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us46-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-2
          requires:
            - us46-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "830522659852"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "830522659852"
          auth_account_id: "926272838456"
          auth_cache_bucket: 926272838456-auth-cache-bucket
          auth_read_role_name: prod-2-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us46.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us46
          env_name: prod
          function_name: prod-us46-forensics-package-auth-s3-cf
          link_table_name: prod-us46-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us46
          package_name: forensicspackage-auth-serverless
          region: us-west-2
          requires:
            - us46-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us47-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us47
      - terraform-apply:
          account_id: "830522659852"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us47-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us47
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us47
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us47-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us47-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "830522659852"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "926272838456"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us47
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us47
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us47-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us47-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "830522659852"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "830522659852"
          auth_account_id: "926272838456"
          auth_cache_bucket: 926272838456-auth-cache-bucket
          auth_read_role_name: prod-2-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us47.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us47
          env_name: prod
          function_name: prod-us47-forensics-package-auth-s3-cf
          link_table_name: prod-us47-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us47
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us47-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us48-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us48
      - terraform-apply:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us48-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us48
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us48
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us48-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us48-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "665897822074"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "522875108335"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us48
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us48
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us48-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us48-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "665897822074"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "665897822074"
          auth_account_id: "522875108335"
          auth_cache_bucket: 522875108335-auth-cache-bucket
          auth_read_role_name: prod-3-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us48.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us48
          env_name: prod
          function_name: prod-us48-forensics-package-auth-s3-cf
          link_table_name: prod-us48-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us48
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us48-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us49-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us49
      - terraform-apply:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us49-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us49
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us49
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us49-gitops-prep-wiz-prod
          region: us-west-2
          requires:
            - Terraform-prod-us49-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "665897822074"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "522875108335"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us49
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us49
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us49-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-2
          requires:
            - us49-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "665897822074"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "665897822074"
          auth_account_id: "522875108335"
          auth_cache_bucket: 522875108335-auth-cache-bucket
          auth_read_role_name: prod-3-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us49.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us49
          env_name: prod
          function_name: prod-us49-forensics-package-auth-s3-cf
          link_table_name: prod-us49-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us49
          package_name: forensicspackage-auth-serverless
          region: us-west-2
          requires:
            - us49-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us5-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us5
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us5-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us5
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us5
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us5-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us5-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us5
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us5
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us5-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us5-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us5.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us5
          env_name: prod
          function_name: prod-us5-forensics-package-auth-s3-cf
          link_table_name: prod-us5-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us5
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us5-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us50-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us50
      - terraform-apply:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us50-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us50
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us50
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us50-gitops-prep-wiz-prod
          region: us-east-1
          requires:
            - Terraform-prod-us50-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "665897822074"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "522875108335"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us50
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us50
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us50-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-1
          requires:
            - us50-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "665897822074"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "665897822074"
          auth_account_id: "522875108335"
          auth_cache_bucket: 522875108335-auth-cache-bucket
          auth_read_role_name: prod-3-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us50.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us50
          env_name: prod
          function_name: prod-us50-forensics-package-auth-s3-cf
          link_table_name: prod-us50-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us50
          package_name: forensicspackage-auth-serverless
          region: us-east-1
          requires:
            - us50-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us51-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us51
      - terraform-apply:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us51-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us51
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us51
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us51-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us51-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "665897822074"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "522875108335"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us51
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us51
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us51-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us51-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "665897822074"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "665897822074"
          auth_account_id: "522875108335"
          auth_cache_bucket: 522875108335-auth-cache-bucket
          auth_read_role_name: prod-3-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us51.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us51
          env_name: prod
          function_name: prod-us51-forensics-package-auth-s3-cf
          link_table_name: prod-us51-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us51
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us51-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us52-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us52
      - terraform-apply:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us52-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us52
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us52
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us52-gitops-prep-wiz-prod
          region: us-west-2
          requires:
            - Terraform-prod-us52-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "665897822074"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "522875108335"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us52
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us52
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us52-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-2
          requires:
            - us52-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "665897822074"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "665897822074"
          auth_account_id: "522875108335"
          auth_cache_bucket: 522875108335-auth-cache-bucket
          auth_read_role_name: prod-3-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us52.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us52
          env_name: prod
          function_name: prod-us52-forensics-package-auth-s3-cf
          link_table_name: prod-us52-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us52
          package_name: forensicspackage-auth-serverless
          region: us-west-2
          requires:
            - us52-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us53-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us53
      - terraform-apply:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us53-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us53
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us53
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us53-gitops-prep-wiz-prod
          region: us-east-1
          requires:
            - Terraform-prod-us53-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "665897822074"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "522875108335"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us53
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us53
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us53-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-1
          requires:
            - us53-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "665897822074"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "665897822074"
          auth_account_id: "522875108335"
          auth_cache_bucket: 522875108335-auth-cache-bucket
          auth_read_role_name: prod-3-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us53.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us53
          env_name: prod
          function_name: prod-us53-forensics-package-auth-s3-cf
          link_table_name: prod-us53-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us53
          package_name: forensicspackage-auth-serverless
          region: us-east-1
          requires:
            - us53-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us54-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us54
      - terraform-apply:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us54-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us54
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us54
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us54-gitops-prep-wiz-prod
          region: us-east-1
          requires:
            - Terraform-prod-us54-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "665897822074"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "522875108335"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us54
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us54
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us54-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-1
          requires:
            - us54-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "665897822074"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "665897822074"
          auth_account_id: "522875108335"
          auth_cache_bucket: 522875108335-auth-cache-bucket
          auth_read_role_name: prod-3-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us54.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us54
          env_name: prod
          function_name: prod-us54-forensics-package-auth-s3-cf
          link_table_name: prod-us54-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us54
          package_name: forensicspackage-auth-serverless
          region: us-east-1
          requires:
            - us54-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us55-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us55
      - terraform-apply:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us55-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us55
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us55
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us55-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us55-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "665897822074"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "522875108335"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us55
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us55
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us55-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us55-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "665897822074"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "665897822074"
          auth_account_id: "522875108335"
          auth_cache_bucket: 522875108335-auth-cache-bucket
          auth_read_role_name: prod-3-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us55.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us55
          env_name: prod
          function_name: prod-us55-forensics-package-auth-s3-cf
          link_table_name: prod-us55-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us55
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us55-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us56-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us56
      - terraform-apply:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us56-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us56
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us56
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us56-gitops-prep-wiz-prod
          region: us-west-2
          requires:
            - Terraform-prod-us56-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "665897822074"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "522875108335"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us56
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us56
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us56-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-2
          requires:
            - us56-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "665897822074"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "665897822074"
          auth_account_id: "522875108335"
          auth_cache_bucket: 522875108335-auth-cache-bucket
          auth_read_role_name: prod-3-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us56.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us56
          env_name: prod
          function_name: prod-us56-forensics-package-auth-s3-cf
          link_table_name: prod-us56-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us56
          package_name: forensicspackage-auth-serverless
          region: us-west-2
          requires:
            - us56-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us57-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us57
      - terraform-apply:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us57-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us57
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us57
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us57-gitops-prep-wiz-prod
          region: us-east-1
          requires:
            - Terraform-prod-us57-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "665897822074"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "522875108335"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us57
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us57
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us57-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-1
          requires:
            - us57-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "665897822074"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "665897822074"
          auth_account_id: "522875108335"
          auth_cache_bucket: 522875108335-auth-cache-bucket
          auth_read_role_name: prod-3-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us57.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us57
          env_name: prod
          function_name: prod-us57-forensics-package-auth-s3-cf
          link_table_name: prod-us57-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us57
          package_name: forensicspackage-auth-serverless
          region: us-east-1
          requires:
            - us57-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "851725410668"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us58-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us58
      - terraform-apply:
          account_id: "851725410668"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us58-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us58
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us58
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us58-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us58-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "851725410668"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "058264117326"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us58
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us58
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us58-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us58-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "851725410668"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "851725410668"
          auth_account_id: "058264117326"
          auth_cache_bucket: 058264117326-auth-cache-bucket
          auth_read_role_name: prod-4-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us58.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us58
          env_name: prod
          function_name: prod-us58-forensics-package-auth-s3-cf
          link_table_name: prod-us58-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us58
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us58-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us59-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us59
      - terraform-apply:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us59-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us59
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us59
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us59-gitops-prep-wiz-prod
          region: us-west-2
          requires:
            - Terraform-prod-us59-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "665897822074"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "522875108335"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us59
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us59
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us59-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-2
          requires:
            - us59-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "665897822074"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "665897822074"
          auth_account_id: "522875108335"
          auth_cache_bucket: 522875108335-auth-cache-bucket
          auth_read_role_name: prod-3-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us59.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us59
          env_name: prod
          function_name: prod-us59-forensics-package-auth-s3-cf
          link_table_name: prod-us59-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us59
          package_name: forensicspackage-auth-serverless
          region: us-west-2
          requires:
            - us59-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us6-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us6
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us6-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us6
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us6
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us6-gitops-prep-wiz-prod
          region: us-west-2
          requires:
            - Terraform-prod-us6-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us6
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us6
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us6-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-2
          requires:
            - us6-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us6.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us6
          env_name: prod
          function_name: prod-us6-forensics-package-auth-s3-cf
          link_table_name: prod-us6-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us6
          package_name: forensicspackage-auth-serverless
          region: us-west-2
          requires:
            - us6-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us60-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us60
      - terraform-apply:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us60-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us60
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us60
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us60-gitops-prep-wiz-prod
          region: us-east-1
          requires:
            - Terraform-prod-us60-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "665897822074"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "522875108335"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us60
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us60
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us60-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-1
          requires:
            - us60-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "665897822074"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "665897822074"
          auth_account_id: "522875108335"
          auth_cache_bucket: 522875108335-auth-cache-bucket
          auth_read_role_name: prod-3-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us60.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us60
          env_name: prod
          function_name: prod-us60-forensics-package-auth-s3-cf
          link_table_name: prod-us60-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us60
          package_name: forensicspackage-auth-serverless
          region: us-east-1
          requires:
            - us60-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us61-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us61
      - terraform-apply:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us61-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us61
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us61
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us61-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us61-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "665897822074"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "522875108335"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us61
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us61
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us61-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us61-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "665897822074"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "665897822074"
          auth_account_id: "522875108335"
          auth_cache_bucket: 522875108335-auth-cache-bucket
          auth_read_role_name: prod-3-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us61.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us61
          env_name: prod
          function_name: prod-us61-forensics-package-auth-s3-cf
          link_table_name: prod-us61-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us61
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us61-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us62-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us62
      - terraform-apply:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us62-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us62
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us62
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us62-gitops-prep-wiz-prod
          region: us-west-2
          requires:
            - Terraform-prod-us62-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "665897822074"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "522875108335"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us62
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us62
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us62-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-2
          requires:
            - us62-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "665897822074"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "665897822074"
          auth_account_id: "522875108335"
          auth_cache_bucket: 522875108335-auth-cache-bucket
          auth_read_role_name: prod-3-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us62.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us62
          env_name: prod
          function_name: prod-us62-forensics-package-auth-s3-cf
          link_table_name: prod-us62-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us62
          package_name: forensicspackage-auth-serverless
          region: us-west-2
          requires:
            - us62-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us63-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us63
      - terraform-apply:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us63-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us63
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us63
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us63-gitops-prep-wiz-prod
          region: us-east-1
          requires:
            - Terraform-prod-us63-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "665897822074"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "522875108335"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us63
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us63
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us63-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-1
          requires:
            - us63-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "665897822074"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "665897822074"
          auth_account_id: "522875108335"
          auth_cache_bucket: 522875108335-auth-cache-bucket
          auth_read_role_name: prod-3-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us63.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us63
          env_name: prod
          function_name: prod-us63-forensics-package-auth-s3-cf
          link_table_name: prod-us63-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us63
          package_name: forensicspackage-auth-serverless
          region: us-east-1
          requires:
            - us63-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us64-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us64
      - terraform-apply:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us64-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us64
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us64
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us64-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us64-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "665897822074"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "522875108335"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us64
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us64
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us64-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us64-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "665897822074"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "665897822074"
          auth_account_id: "522875108335"
          auth_cache_bucket: 522875108335-auth-cache-bucket
          auth_read_role_name: prod-3-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us64.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us64
          env_name: prod
          function_name: prod-us64-forensics-package-auth-s3-cf
          link_table_name: prod-us64-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us64
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us64-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us65-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us65
      - terraform-apply:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us65-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us65
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us65
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us65-gitops-prep-wiz-prod
          region: us-west-2
          requires:
            - Terraform-prod-us65-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "665897822074"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "522875108335"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us65
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us65
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us65-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-2
          requires:
            - us65-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "665897822074"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "665897822074"
          auth_account_id: "522875108335"
          auth_cache_bucket: 522875108335-auth-cache-bucket
          auth_read_role_name: prod-3-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us65.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us65
          env_name: prod
          function_name: prod-us65-forensics-package-auth-s3-cf
          link_table_name: prod-us65-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us65
          package_name: forensicspackage-auth-serverless
          region: us-west-2
          requires:
            - us65-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us66-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us66
      - terraform-apply:
          account_id: "665897822074"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us66-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us66
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us66
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us66-gitops-prep-wiz-prod
          region: us-east-1
          requires:
            - Terraform-prod-us66-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "665897822074"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "522875108335"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us66
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us66
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us66-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-1
          requires:
            - us66-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "665897822074"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "665897822074"
          auth_account_id: "522875108335"
          auth_cache_bucket: 522875108335-auth-cache-bucket
          auth_read_role_name: prod-3-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us66.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us66
          env_name: prod
          function_name: prod-us66-forensics-package-auth-s3-cf
          link_table_name: prod-us66-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us66
          package_name: forensicspackage-auth-serverless
          region: us-east-1
          requires:
            - us66-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us67-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us67
      - terraform-apply:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us67-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us67
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us67
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us67-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us67-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382568687"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "471112576096"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us67
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us67
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us67-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us67-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382568687"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382568687"
          auth_account_id: "471112576096"
          auth_cache_bucket: 471112576096-auth-cache-bucket
          auth_read_role_name: prod-5-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us67.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us67
          env_name: prod
          function_name: prod-us67-forensics-package-auth-s3-cf
          link_table_name: prod-us67-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us67
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us67-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us68-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us68
      - terraform-apply:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us68-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us68
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us68
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us68-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us68-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382568687"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "471112576096"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us68
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us68
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us68-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us68-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382568687"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382568687"
          auth_account_id: "471112576096"
          auth_cache_bucket: 471112576096-auth-cache-bucket
          auth_read_role_name: prod-5-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us68.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us68
          env_name: prod
          function_name: prod-us68-forensics-package-auth-s3-cf
          link_table_name: prod-us68-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us68
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us68-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us69-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us69
      - terraform-apply:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us69-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us69
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us69
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us69-gitops-prep-wiz-prod
          region: us-east-1
          requires:
            - Terraform-prod-us69-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382568687"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "471112576096"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us69
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us69
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us69-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-1
          requires:
            - us69-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382568687"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382568687"
          auth_account_id: "471112576096"
          auth_cache_bucket: 471112576096-auth-cache-bucket
          auth_read_role_name: prod-5-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us69.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us69
          env_name: prod
          function_name: prod-us69-forensics-package-auth-s3-cf
          link_table_name: prod-us69-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us69
          package_name: forensicspackage-auth-serverless
          region: us-east-1
          requires:
            - us69-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us7-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us7
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us7-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us7
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us7
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us7-gitops-prep-wiz-prod
          region: us-east-1
          requires:
            - Terraform-prod-us7-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us7
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us7
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us7-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-1
          requires:
            - us7-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us7.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us7
          env_name: prod
          function_name: prod-us7-forensics-package-auth-s3-cf
          link_table_name: prod-us7-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us7
          package_name: forensicspackage-auth-serverless
          region: us-east-1
          requires:
            - us7-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us70-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us70
      - terraform-apply:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us70-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us70
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us70
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us70-gitops-prep-wiz-prod
          region: us-west-2
          requires:
            - Terraform-prod-us70-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382568687"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "471112576096"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us70
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us70
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us70-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-2
          requires:
            - us70-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382568687"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382568687"
          auth_account_id: "471112576096"
          auth_cache_bucket: 471112576096-auth-cache-bucket
          auth_read_role_name: prod-5-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us70.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us70
          env_name: prod
          function_name: prod-us70-forensics-package-auth-s3-cf
          link_table_name: prod-us70-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us70
          package_name: forensicspackage-auth-serverless
          region: us-west-2
          requires:
            - us70-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us71-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us71
      - terraform-apply:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us71-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us71
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us71
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us71-gitops-prep-wiz-prod
          region: us-east-1
          requires:
            - Terraform-prod-us71-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382568687"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "471112576096"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us71
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us71
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us71-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-1
          requires:
            - us71-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382568687"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382568687"
          auth_account_id: "471112576096"
          auth_cache_bucket: 471112576096-auth-cache-bucket
          auth_read_role_name: prod-5-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us71.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us71
          env_name: prod
          function_name: prod-us71-forensics-package-auth-s3-cf
          link_table_name: prod-us71-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us71
          package_name: forensicspackage-auth-serverless
          region: us-east-1
          requires:
            - us71-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us72-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us72
      - terraform-apply:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us72-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us72
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us72
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us72-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us72-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382568687"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "471112576096"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us72
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us72
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us72-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us72-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382568687"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382568687"
          auth_account_id: "471112576096"
          auth_cache_bucket: 471112576096-auth-cache-bucket
          auth_read_role_name: prod-5-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us72.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us72
          env_name: prod
          function_name: prod-us72-forensics-package-auth-s3-cf
          link_table_name: prod-us72-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us72
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us72-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us73-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us73
      - terraform-apply:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us73-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us73
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us73
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us73-gitops-prep-wiz-prod
          region: us-west-2
          requires:
            - Terraform-prod-us73-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382568687"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "471112576096"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us73
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us73
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us73-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-2
          requires:
            - us73-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382568687"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382568687"
          auth_account_id: "471112576096"
          auth_cache_bucket: 471112576096-auth-cache-bucket
          auth_read_role_name: prod-5-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us73.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us73
          env_name: prod
          function_name: prod-us73-forensics-package-auth-s3-cf
          link_table_name: prod-us73-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us73
          package_name: forensicspackage-auth-serverless
          region: us-west-2
          requires:
            - us73-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us74-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us74
      - terraform-apply:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us74-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us74
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us74
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us74-gitops-prep-wiz-prod
          region: us-east-1
          requires:
            - Terraform-prod-us74-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382568687"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "471112576096"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us74
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us74
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us74-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-1
          requires:
            - us74-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382568687"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382568687"
          auth_account_id: "471112576096"
          auth_cache_bucket: 471112576096-auth-cache-bucket
          auth_read_role_name: prod-5-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us74.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us74
          env_name: prod
          function_name: prod-us74-forensics-package-auth-s3-cf
          link_table_name: prod-us74-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us74
          package_name: forensicspackage-auth-serverless
          region: us-east-1
          requires:
            - us74-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us75-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us75
      - terraform-apply:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us75-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us75
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us75
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us75-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us75-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382568687"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "471112576096"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us75
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us75
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us75-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us75-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382568687"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382568687"
          auth_account_id: "471112576096"
          auth_cache_bucket: 471112576096-auth-cache-bucket
          auth_read_role_name: prod-5-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us75.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us75
          env_name: prod
          function_name: prod-us75-forensics-package-auth-s3-cf
          link_table_name: prod-us75-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us75
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us75-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us76-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us76
      - terraform-apply:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us76-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us76
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us76
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us76-gitops-prep-wiz-prod
          region: us-west-2
          requires:
            - Terraform-prod-us76-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382568687"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "471112576096"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us76
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us76
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us76-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-2
          requires:
            - us76-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382568687"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382568687"
          auth_account_id: "471112576096"
          auth_cache_bucket: 471112576096-auth-cache-bucket
          auth_read_role_name: prod-5-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us76.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us76
          env_name: prod
          function_name: prod-us76-forensics-package-auth-s3-cf
          link_table_name: prod-us76-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us76
          package_name: forensicspackage-auth-serverless
          region: us-west-2
          requires:
            - us76-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us77-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us77
      - terraform-apply:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us77-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us77
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us77
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us77-gitops-prep-wiz-prod
          region: us-east-1
          requires:
            - Terraform-prod-us77-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382568687"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "471112576096"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us77
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us77
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us77-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-1
          requires:
            - us77-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382568687"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382568687"
          auth_account_id: "471112576096"
          auth_cache_bucket: 471112576096-auth-cache-bucket
          auth_read_role_name: prod-5-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us77.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us77
          env_name: prod
          function_name: prod-us77-forensics-package-auth-s3-cf
          link_table_name: prod-us77-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us77
          package_name: forensicspackage-auth-serverless
          region: us-east-1
          requires:
            - us77-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us78-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us78
      - terraform-apply:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us78-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us78
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us78
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us78-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us78-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382568687"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "471112576096"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us78
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us78
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us78-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us78-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382568687"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382568687"
          auth_account_id: "471112576096"
          auth_cache_bucket: 471112576096-auth-cache-bucket
          auth_read_role_name: prod-5-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us78.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us78
          env_name: prod
          function_name: prod-us78-forensics-package-auth-s3-cf
          link_table_name: prod-us78-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us78
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us78-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us79-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us79
      - terraform-apply:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us79-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us79
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us79
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us79-gitops-prep-wiz-prod
          region: us-west-2
          requires:
            - Terraform-prod-us79-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382568687"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "471112576096"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us79
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us79
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us79-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-2
          requires:
            - us79-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382568687"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382568687"
          auth_account_id: "471112576096"
          auth_cache_bucket: 471112576096-auth-cache-bucket
          auth_read_role_name: prod-5-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us79.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us79
          env_name: prod
          function_name: prod-us79-forensics-package-auth-s3-cf
          link_table_name: prod-us79-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us79
          package_name: forensicspackage-auth-serverless
          region: us-west-2
          requires:
            - us79-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us8-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us8
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us8-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us8
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us8
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us8-gitops-prep-wiz-prod
          region: us-west-1
          requires:
            - Terraform-prod-us8-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us8
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us8
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us8-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-1
          requires:
            - us8-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us8.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us8
          env_name: prod
          function_name: prod-us8-forensics-package-auth-s3-cf
          link_table_name: prod-us8-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us8
          package_name: forensicspackage-auth-serverless
          region: us-west-1
          requires:
            - us8-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us80-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us80
      - terraform-apply:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us80-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us80
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us80
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us80-gitops-prep-wiz-prod
          region: us-east-1
          requires:
            - Terraform-prod-us80-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382568687"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "471112576096"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us80
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us80
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us80-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-1
          requires:
            - us80-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382568687"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382568687"
          auth_account_id: "471112576096"
          auth_cache_bucket: 471112576096-auth-cache-bucket
          auth_read_role_name: prod-5-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us80.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us80
          env_name: prod
          function_name: prod-us80-forensics-package-auth-s3-cf
          link_table_name: prod-us80-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us80
          package_name: forensicspackage-auth-serverless
          region: us-east-1
          requires:
            - us80-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us81-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us81
      - terraform-apply:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us81-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us81
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us81
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us81-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us81-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382568687"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "471112576096"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us81
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us81
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us81-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us81-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382568687"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382568687"
          auth_account_id: "471112576096"
          auth_cache_bucket: 471112576096-auth-cache-bucket
          auth_read_role_name: prod-5-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us81.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us81
          env_name: prod
          function_name: prod-us81-forensics-package-auth-s3-cf
          link_table_name: prod-us81-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us81
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us81-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us82-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us82
      - terraform-apply:
          account_id: "992382568687"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us82-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us82
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us82
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us82-gitops-prep-wiz-prod
          region: us-west-2
          requires:
            - Terraform-prod-us82-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382568687"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "471112576096"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us82
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us82
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us82-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-2
          requires:
            - us82-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382568687"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382568687"
          auth_account_id: "471112576096"
          auth_cache_bucket: 471112576096-auth-cache-bucket
          auth_read_role_name: prod-5-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us82.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us82
          env_name: prod
          function_name: prod-us82-forensics-package-auth-s3-cf
          link_table_name: prod-us82-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us82
          package_name: forensicspackage-auth-serverless
          region: us-west-2
          requires:
            - us82-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us83-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us83
      - terraform-apply:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us83-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us83
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us83
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us83-gitops-prep-wiz-prod
          region: us-east-1
          requires:
            - Terraform-prod-us83-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382387618"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "730335539552"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us83
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us83
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us83-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-1
          requires:
            - us83-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382387618"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382387618"
          auth_account_id: "730335539552"
          auth_cache_bucket: 730335539552-auth-cache-bucket
          auth_read_role_name: prod-6-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us83.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us83
          env_name: prod
          function_name: prod-us83-forensics-package-auth-s3-cf
          link_table_name: prod-us83-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us83
          package_name: forensicspackage-auth-serverless
          region: us-east-1
          requires:
            - us83-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us84-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us84
      - terraform-apply:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us84-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us84
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us84
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us84-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us84-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382387618"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "730335539552"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us84
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us84
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us84-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us84-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382387618"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382387618"
          auth_account_id: "730335539552"
          auth_cache_bucket: 730335539552-auth-cache-bucket
          auth_read_role_name: prod-6-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us84.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us84
          env_name: prod
          function_name: prod-us84-forensics-package-auth-s3-cf
          link_table_name: prod-us84-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us84
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us84-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us85-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us85
      - terraform-apply:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us85-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us85
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us85
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us85-gitops-prep-wiz-prod
          region: us-west-2
          requires:
            - Terraform-prod-us85-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382387618"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "730335539552"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us85
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us85
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us85-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-2
          requires:
            - us85-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382387618"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382387618"
          auth_account_id: "730335539552"
          auth_cache_bucket: 730335539552-auth-cache-bucket
          auth_read_role_name: prod-6-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us85.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us85
          env_name: prod
          function_name: prod-us85-forensics-package-auth-s3-cf
          link_table_name: prod-us85-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us85
          package_name: forensicspackage-auth-serverless
          region: us-west-2
          requires:
            - us85-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us86-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us86
      - terraform-apply:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us86-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us86
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us86
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us86-gitops-prep-wiz-prod
          region: us-east-1
          requires:
            - Terraform-prod-us86-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382387618"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "730335539552"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us86
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us86
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us86-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-1
          requires:
            - us86-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382387618"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382387618"
          auth_account_id: "730335539552"
          auth_cache_bucket: 730335539552-auth-cache-bucket
          auth_read_role_name: prod-6-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us86.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us86
          env_name: prod
          function_name: prod-us86-forensics-package-auth-s3-cf
          link_table_name: prod-us86-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us86
          package_name: forensicspackage-auth-serverless
          region: us-east-1
          requires:
            - us86-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us87-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us87
      - terraform-apply:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us87-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us87
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us87
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us87-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us87-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382387618"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "730335539552"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us87
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us87
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us87-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us87-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382387618"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382387618"
          auth_account_id: "730335539552"
          auth_cache_bucket: 730335539552-auth-cache-bucket
          auth_read_role_name: prod-6-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us87.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us87
          env_name: prod
          function_name: prod-us87-forensics-package-auth-s3-cf
          link_table_name: prod-us87-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us87
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us87-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us88-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us88
      - terraform-apply:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us88-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us88
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us88
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us88-gitops-prep-wiz-prod
          region: us-west-2
          requires:
            - Terraform-prod-us88-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382387618"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "730335539552"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us88
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us88
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us88-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-2
          requires:
            - us88-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382387618"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382387618"
          auth_account_id: "730335539552"
          auth_cache_bucket: 730335539552-auth-cache-bucket
          auth_read_role_name: prod-6-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us88.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us88
          env_name: prod
          function_name: prod-us88-forensics-package-auth-s3-cf
          link_table_name: prod-us88-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us88
          package_name: forensicspackage-auth-serverless
          region: us-west-2
          requires:
            - us88-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us89-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us89
      - terraform-apply:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us89-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us89
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us89
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us89-gitops-prep-wiz-prod
          region: us-east-1
          requires:
            - Terraform-prod-us89-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382387618"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "730335539552"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us89
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us89
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us89-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-1
          requires:
            - us89-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382387618"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382387618"
          auth_account_id: "730335539552"
          auth_cache_bucket: 730335539552-auth-cache-bucket
          auth_read_role_name: prod-6-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us89.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us89
          env_name: prod
          function_name: prod-us89-forensics-package-auth-s3-cf
          link_table_name: prod-us89-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us89
          package_name: forensicspackage-auth-serverless
          region: us-east-1
          requires:
            - us89-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us9-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us9
      - terraform-apply:
          account_id: "197171649850"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us9-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us9
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us9
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us9-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us9-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "197171649850"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "919314353092"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us9
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us9
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us9-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us9-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "197171649850"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "197171649850"
          auth_account_id: "919314353092"
          auth_cache_bucket: 919314353092-auth-cache-bucket
          auth_read_role_name: prod-1-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us9.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us9
          env_name: prod
          function_name: prod-us9-forensics-package-auth-s3-cf
          link_table_name: prod-us9-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us9
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us9-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us90-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us90
      - terraform-apply:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us90-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us90
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us90
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us90-gitops-prep-wiz-prod
          region: us-east-2
          requires:
            - Terraform-prod-us90-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382387618"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "730335539552"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us90
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us90
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us90-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-2
          requires:
            - us90-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382387618"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382387618"
          auth_account_id: "730335539552"
          auth_cache_bucket: 730335539552-auth-cache-bucket
          auth_read_role_name: prod-6-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us90.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us90
          env_name: prod
          function_name: prod-us90-forensics-package-auth-s3-cf
          link_table_name: prod-us90-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us90
          package_name: forensicspackage-auth-serverless
          region: us-east-2
          requires:
            - us90-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us91-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us91
      - terraform-apply:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us91-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us91
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us91
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us91-gitops-prep-wiz-prod
          region: us-west-2
          requires:
            - Terraform-prod-us91-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382387618"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "730335539552"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us91
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us91
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us91-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-west-2
          requires:
            - us91-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382387618"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382387618"
          auth_account_id: "730335539552"
          auth_cache_bucket: 730335539552-auth-cache-bucket
          auth_read_role_name: prod-6-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us91.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us91
          env_name: prod
          function_name: prod-us91-forensics-package-auth-s3-cf
          link_table_name: prod-us91-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us91
          package_name: forensicspackage-auth-serverless
          region: us-west-2
          requires:
            - us91-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - terraform-precheck:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          enable_slack_mention: false
          env: prod
          name: Terraform-prod-us92-precheck
          notify_on: fail
          origin_dc: null
          phase: phase2
          pr_mode: false
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - All-phase1-updated
          runner: prod-tf
          slack_channel: prod-deployments
          tf_parallelism: 10
          workspace: prod-us92
      - terraform-apply:
          account_id: "992382387618"
          avoid_concurrent_runs: false
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          dr_mode: false
          enable_debug_logs: true
          env: prod
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          name: Terraform-prod-us92-apply
          origin_dc: null
          refresh: << pipeline.parameters.terraform_refresh >>
          requires:
            - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!)
          runner: prod-tf
          slack_channel: prod-deployments
          use_plan: true
          workspace: prod-us92
      - gitops-sources-prep:
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us92
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - BuildContext
          enable_slack_mention: true
          env_scoped_cluster: disabled
          executor: ops_runner
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          name: us92-gitops-prep-wiz-prod
          region: us-east-1
          requires:
            - Terraform-prod-us92-apply
          runner_class: 2xlarge
          runner_env: prod
          slack_channel: prod-deployments
          validate_image_replication: false
      - gitops-reconcile-wait-and-publish-lambdas:
          account_id: "992382387618"
          apollo_env: prod
          apollo_verification: true
          auth-account_id: "730335539552"
          auth-msg: true
          auth-presignup: true
          auth-pretoken: true
          block_rollbacks: true
          checker_version: v2
          cluster_name: prod-us92
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          data_center: us92
          enable_slack_mention: true
          env_name: prod
          env_scoped_cluster: disabled
          fingerprint_cluster_states: 6e:6b:73:32:c3:56:16:dd:df:1b:a6:d2:b6:83:88:b3
          fingerprint_cluster_states_argocd: cc:cb:09:e7:80:a5:70:9c:31:09:7e:9e:c5:2e:98:5d
          fingerprint_terraform_outputs: 4f:f3:05:aa:42:b4:c8:79:b1:c3:e4:07:65:d9:b9:04
          gitops_engine: argocd
          gitops_skip_if_no_changes: false
          lambdas_deployment: true
          name: us92-gitops-wait-and-lambdas-wiz-prod
          netscanner-account_id: "042537641722"
          netscanner-image-arch: arm64
          netscanner-screenshot: true
          netscanner-serverless: true
          region: us-east-1
          requires:
            - us92-gitops-prep-wiz-prod
          runner: small-prod-tf
          secrets-validator-account_id: "724772075972"
          secrets-validator-image-arch: arm64
          secrets-validator-serverless: true
          slack_channel: prod-deployments
          webhook-gateway: true
          webhook-gateway-account_id: "992382387618"
          webhook-gateway-image_arch: arm64
      - publish-lambda-and-cloudfront-version:
          account_id: "992382387618"
          auth_account_id: "730335539552"
          auth_cache_bucket: 730335539552-auth-cache-bucket
          auth_read_role_name: prod-6-auth-read-role
          auth0_audience: beyond-api
          auth0_domain: auth0.wiz.io
          cloudfront_alias: prod-us92.forensics-package.prod
          context:
            - imported-from-ops-project-variables
          data_center: us92
          env_name: prod
          function_name: prod-us92-forensics-package-auth-s3-cf
          link_table_name: prod-us92-forensics-package-links
          name: Publish-forensics-package-auth-lambda-version-prod-us92
          package_name: forensicspackage-auth-serverless
          region: us-east-1
          requires:
            - us92-gitops-wait-and-lambdas-wiz-prod
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: forensicspackage-auth-serverless
      - join:
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          env: prod
          name: All-phase2-updated
          requires:
            - Publish-forensics-package-auth-lambda-version-prod-ap1
            - Publish-forensics-package-auth-lambda-version-prod-ap2
            - Publish-forensics-package-auth-lambda-version-prod-ap3
            - Publish-forensics-package-auth-lambda-version-prod-ap4
            - Publish-forensics-package-auth-lambda-version-prod-ca1
            - Publish-forensics-package-auth-lambda-version-prod-ca2
            - Publish-forensics-package-auth-lambda-version-prod-eu1
            - Publish-forensics-package-auth-lambda-version-prod-eu10
            - Publish-forensics-package-auth-lambda-version-prod-eu11
            - Publish-forensics-package-auth-lambda-version-prod-eu12
            - Publish-forensics-package-auth-lambda-version-prod-eu13
            - Publish-forensics-package-auth-lambda-version-prod-eu14
            - Publish-forensics-package-auth-lambda-version-prod-eu15
            - Publish-forensics-package-auth-lambda-version-prod-eu16
            - Publish-forensics-package-auth-lambda-version-prod-eu17
            - Publish-forensics-package-auth-lambda-version-prod-eu18
            - Publish-forensics-package-auth-lambda-version-prod-eu19
            - Publish-forensics-package-auth-lambda-version-prod-eu2
            - Publish-forensics-package-auth-lambda-version-prod-eu20
            - Publish-forensics-package-auth-lambda-version-prod-eu3
            - Publish-forensics-package-auth-lambda-version-prod-eu4
            - Publish-forensics-package-auth-lambda-version-prod-eu6
            - Publish-forensics-package-auth-lambda-version-prod-eu7
            - Publish-forensics-package-auth-lambda-version-prod-eu8
            - Publish-forensics-package-auth-lambda-version-prod-eu9
            - Publish-forensics-package-auth-lambda-version-prod-il1
            - Publish-forensics-package-auth-lambda-version-prod-me1
            - Publish-forensics-package-auth-lambda-version-prod-us1
            - Publish-forensics-package-auth-lambda-version-prod-us10
            - Publish-forensics-package-auth-lambda-version-prod-us11
            - Publish-forensics-package-auth-lambda-version-prod-us12
            - Publish-forensics-package-auth-lambda-version-prod-us13
            - Publish-forensics-package-auth-lambda-version-prod-us14
            - Publish-forensics-package-auth-lambda-version-prod-us15
            - Publish-forensics-package-auth-lambda-version-prod-us16
            - Publish-forensics-package-auth-lambda-version-prod-us17
            - Publish-forensics-package-auth-lambda-version-prod-us18
            - Publish-forensics-package-auth-lambda-version-prod-us19
            - Publish-forensics-package-auth-lambda-version-prod-us2
            - Publish-forensics-package-auth-lambda-version-prod-us20
            - Publish-forensics-package-auth-lambda-version-prod-us21
            - Publish-forensics-package-auth-lambda-version-prod-us22
            - Publish-forensics-package-auth-lambda-version-prod-us23
            - Publish-forensics-package-auth-lambda-version-prod-us24
            - Publish-forensics-package-auth-lambda-version-prod-us25
            - Publish-forensics-package-auth-lambda-version-prod-us26
            - Publish-forensics-package-auth-lambda-version-prod-us27
            - Publish-forensics-package-auth-lambda-version-prod-us28
            - Publish-forensics-package-auth-lambda-version-prod-us3
            - Publish-forensics-package-auth-lambda-version-prod-us32
            - Publish-forensics-package-auth-lambda-version-prod-us33
            - Publish-forensics-package-auth-lambda-version-prod-us34
            - Publish-forensics-package-auth-lambda-version-prod-us35
            - Publish-forensics-package-auth-lambda-version-prod-us36
            - Publish-forensics-package-auth-lambda-version-prod-us37
            - Publish-forensics-package-auth-lambda-version-prod-us38
            - Publish-forensics-package-auth-lambda-version-prod-us39
            - Publish-forensics-package-auth-lambda-version-prod-us4
            - Publish-forensics-package-auth-lambda-version-prod-us40
            - Publish-forensics-package-auth-lambda-version-prod-us41
            - Publish-forensics-package-auth-lambda-version-prod-us42
            - Publish-forensics-package-auth-lambda-version-prod-us43
            - Publish-forensics-package-auth-lambda-version-prod-us44
            - Publish-forensics-package-auth-lambda-version-prod-us45
            - Publish-forensics-package-auth-lambda-version-prod-us46
            - Publish-forensics-package-auth-lambda-version-prod-us47
            - Publish-forensics-package-auth-lambda-version-prod-us48
            - Publish-forensics-package-auth-lambda-version-prod-us49
            - Publish-forensics-package-auth-lambda-version-prod-us5
            - Publish-forensics-package-auth-lambda-version-prod-us50
            - Publish-forensics-package-auth-lambda-version-prod-us51
            - Publish-forensics-package-auth-lambda-version-prod-us52
            - Publish-forensics-package-auth-lambda-version-prod-us53
            - Publish-forensics-package-auth-lambda-version-prod-us54
            - Publish-forensics-package-auth-lambda-version-prod-us55
            - Publish-forensics-package-auth-lambda-version-prod-us56
            - Publish-forensics-package-auth-lambda-version-prod-us57
            - Publish-forensics-package-auth-lambda-version-prod-us58
            - Publish-forensics-package-auth-lambda-version-prod-us59
            - Publish-forensics-package-auth-lambda-version-prod-us6
            - Publish-forensics-package-auth-lambda-version-prod-us60
            - Publish-forensics-package-auth-lambda-version-prod-us61
            - Publish-forensics-package-auth-lambda-version-prod-us62
            - Publish-forensics-package-auth-lambda-version-prod-us63
            - Publish-forensics-package-auth-lambda-version-prod-us64
            - Publish-forensics-package-auth-lambda-version-prod-us65
            - Publish-forensics-package-auth-lambda-version-prod-us66
            - Publish-forensics-package-auth-lambda-version-prod-us67
            - Publish-forensics-package-auth-lambda-version-prod-us68
            - Publish-forensics-package-auth-lambda-version-prod-us69
            - Publish-forensics-package-auth-lambda-version-prod-us7
            - Publish-forensics-package-auth-lambda-version-prod-us70
            - Publish-forensics-package-auth-lambda-version-prod-us71
            - Publish-forensics-package-auth-lambda-version-prod-us72
            - Publish-forensics-package-auth-lambda-version-prod-us73
            - Publish-forensics-package-auth-lambda-version-prod-us74
            - Publish-forensics-package-auth-lambda-version-prod-us75
            - Publish-forensics-package-auth-lambda-version-prod-us76
            - Publish-forensics-package-auth-lambda-version-prod-us77
            - Publish-forensics-package-auth-lambda-version-prod-us78
            - Publish-forensics-package-auth-lambda-version-prod-us79
            - Publish-forensics-package-auth-lambda-version-prod-us8
            - Publish-forensics-package-auth-lambda-version-prod-us80
            - Publish-forensics-package-auth-lambda-version-prod-us81
            - Publish-forensics-package-auth-lambda-version-prod-us82
            - Publish-forensics-package-auth-lambda-version-prod-us83
            - Publish-forensics-package-auth-lambda-version-prod-us84
            - Publish-forensics-package-auth-lambda-version-prod-us85
            - Publish-forensics-package-auth-lambda-version-prod-us86
            - Publish-forensics-package-auth-lambda-version-prod-us87
            - Publish-forensics-package-auth-lambda-version-prod-us88
            - Publish-forensics-package-auth-lambda-version-prod-us89
            - Publish-forensics-package-auth-lambda-version-prod-us9
            - Publish-forensics-package-auth-lambda-version-prod-us90
            - Publish-forensics-package-auth-lambda-version-prod-us91
            - Publish-forensics-package-auth-lambda-version-prod-us92
          stage: phase2
      - join:
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          env: prod
          name: wait_before_approval-phase2
          requires:
            - Terraform-prod-ap1-precheck
            - Terraform-prod-ap2-precheck
            - Terraform-prod-ap3-precheck
            - Terraform-prod-ap4-precheck
            - Terraform-prod-ca1-precheck
            - Terraform-prod-ca2-precheck
            - Terraform-prod-eu1-precheck
            - Terraform-prod-eu10-precheck
            - Terraform-prod-eu11-precheck
            - Terraform-prod-eu12-precheck
            - Terraform-prod-eu13-precheck
            - Terraform-prod-eu14-precheck
            - Terraform-prod-eu15-precheck
            - Terraform-prod-eu16-precheck
            - Terraform-prod-eu17-precheck
            - Terraform-prod-eu18-precheck
            - Terraform-prod-eu19-precheck
            - Terraform-prod-eu2-precheck
            - Terraform-prod-eu20-precheck
            - Terraform-prod-eu3-precheck
            - Terraform-prod-eu4-precheck
            - Terraform-prod-eu6-precheck
            - Terraform-prod-eu7-precheck
            - Terraform-prod-eu8-precheck
            - Terraform-prod-eu9-precheck
            - Terraform-prod-il1-precheck
            - Terraform-prod-me1-precheck
            - Terraform-prod-us1-precheck
            - Terraform-prod-us10-precheck
            - Terraform-prod-us11-precheck
            - Terraform-prod-us12-precheck
            - Terraform-prod-us13-precheck
            - Terraform-prod-us14-precheck
            - Terraform-prod-us15-precheck
            - Terraform-prod-us16-precheck
            - Terraform-prod-us17-precheck
            - Terraform-prod-us18-precheck
            - Terraform-prod-us19-precheck
            - Terraform-prod-us2-precheck
            - Terraform-prod-us20-precheck
            - Terraform-prod-us21-precheck
            - Terraform-prod-us22-precheck
            - Terraform-prod-us23-precheck
            - Terraform-prod-us24-precheck
            - Terraform-prod-us25-precheck
            - Terraform-prod-us26-precheck
            - Terraform-prod-us27-precheck
            - Terraform-prod-us28-precheck
            - Terraform-prod-us3-precheck
            - Terraform-prod-us32-precheck
            - Terraform-prod-us33-precheck
            - Terraform-prod-us34-precheck
            - Terraform-prod-us35-precheck
            - Terraform-prod-us36-precheck
            - Terraform-prod-us37-precheck
            - Terraform-prod-us38-precheck
            - Terraform-prod-us39-precheck
            - Terraform-prod-us4-precheck
            - Terraform-prod-us40-precheck
            - Terraform-prod-us41-precheck
            - Terraform-prod-us42-precheck
            - Terraform-prod-us43-precheck
            - Terraform-prod-us44-precheck
            - Terraform-prod-us45-precheck
            - Terraform-prod-us46-precheck
            - Terraform-prod-us47-precheck
            - Terraform-prod-us48-precheck
            - Terraform-prod-us49-precheck
            - Terraform-prod-us5-precheck
            - Terraform-prod-us50-precheck
            - Terraform-prod-us51-precheck
            - Terraform-prod-us52-precheck
            - Terraform-prod-us53-precheck
            - Terraform-prod-us54-precheck
            - Terraform-prod-us55-precheck
            - Terraform-prod-us56-precheck
            - Terraform-prod-us57-precheck
            - Terraform-prod-us58-precheck
            - Terraform-prod-us59-precheck
            - Terraform-prod-us6-precheck
            - Terraform-prod-us60-precheck
            - Terraform-prod-us61-precheck
            - Terraform-prod-us62-precheck
            - Terraform-prod-us63-precheck
            - Terraform-prod-us64-precheck
            - Terraform-prod-us65-precheck
            - Terraform-prod-us66-precheck
            - Terraform-prod-us67-precheck
            - Terraform-prod-us68-precheck
            - Terraform-prod-us69-precheck
            - Terraform-prod-us7-precheck
            - Terraform-prod-us70-precheck
            - Terraform-prod-us71-precheck
            - Terraform-prod-us72-precheck
            - Terraform-prod-us73-precheck
            - Terraform-prod-us74-precheck
            - Terraform-prod-us75-precheck
            - Terraform-prod-us76-precheck
            - Terraform-prod-us77-precheck
            - Terraform-prod-us78-precheck
            - Terraform-prod-us79-precheck
            - Terraform-prod-us8-precheck
            - Terraform-prod-us80-precheck
            - Terraform-prod-us81-precheck
            - Terraform-prod-us82-precheck
            - Terraform-prod-us83-precheck
            - Terraform-prod-us84-precheck
            - Terraform-prod-us85-precheck
            - Terraform-prod-us86-precheck
            - Terraform-prod-us87-precheck
            - Terraform-prod-us88-precheck
            - Terraform-prod-us89-precheck
            - Terraform-prod-us9-precheck
            - Terraform-prod-us90-precheck
            - Terraform-prod-us91-precheck
            - Terraform-prod-us92-precheck
          save_cache: false
          stage: phase2
      - aggregate_plans:
          context:
            - imported-from-ops-project-variables
            - WizGithubReadOnlyContext
            - SlackDynamoCtx
            - wiz-cache
          enable_slack_mention: false
          env: prod
          requires:
            - wait_before_approval-phase2
          runner: prod-tf
          slack_channel: deployment-approvals
          stage: phase2
      - approve-deployment-phase2 (REVIEW THE AGGREGATED PLAN!):
          context:
            - imported-from-ops-project-variables
          requires:
            - wait_before_approval-phase2
          type: approval
      - backoffice-publish:
          branch: master
          context:
            - imported-from-ops-project-variables
          env: prod
          name: Backoffice-sync-prod
          requires:
            - All-phase2-updated
          version-key: backoffice-dc
      - Update-CDN:
          account_id: "197171649850"
          block_rollbacks: true
          block_rollbacks_notify: true
          cluster_name: prod-us1
          context:
            - imported-from-ops-project-variables
          env: prod
          name: Update CDN prod-us1
          requires:
            - All-phase2-updated
          runner: prod-tf
          slack_channel: on-call-frontend
          vite_aws_console_origin: https://console.aws.amazon.com
          wiz_io_customer_bucket: https://wizio-public.s3.amazonaws.com
          wiz_io_customer_filepath: /deployment-v2/aws/wiz-aws-standard-org.json
      - publish-lambda-version:
          account_id: "871575854274"
          context:
            - imported-from-ops-project-variables
          env_name: prod
          function_name: wiz-digitaltrust-prod-api-lambda
          main_account_id: "197171649850"
          name: Publish-digital-trust-lambda-version-prod
          package_name: digital-trust-serverless-lambda
          profile: dt
          region: us-east-2
          requires:
            - join-publish-outpost-lite-images
          runner: prod-tf
          slack_channel: prod-deployments
          version_filename: digital-trust-serverless
      - post-deployment:
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          enable_slack_mention: true
          env: prod
          name: Post deployment wiz
          requires:
            - All-phase2-updated
            - Update CDN prod-us1
            - Publish-digital-trust-lambda-version-prod
          runner: prod-tf
          slack_channel: prod-deployments
      - merger-accept-theirs:
          context:
            - imported-from-ops-project-variables
          dest_branch_name: universal
          name: update universal
          requires:
            - All-phase2-updated
            - Update CDN prod-us1
            - Publish-digital-trust-lambda-version-prod
          slack_channel: prod-deployments
          source_branch_name: master
          source_commit_ref: << pipeline.git.revision >>
  destroy-bootstrap-rde-workflow:
    jobs:
      - destroy-bootstrap-rde-machine:
          context:
            - imported-from-ops-project-variables
          filters:
            branches:
              only:
                - develop
    when: << pipeline.parameters.destroy_bootstrap_rde >>
  env-config-format-check:
    jobs:
      - check-env-config-format:
          context:
            - imported-from-ops-project-variables
          env: all
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          runner: wiz-test-1-deployment
    when: << pipeline.parameters.terraform-env-config >>
  frontend-e2e-e2e:
    jobs:
      - run-fe-end2end-tests:
          auth_vendor: cognito
          context:
            - imported-from-ops-project-variables
            - TerraformStageContext
            - TerraformE2EContext
            - cypress-context
            - deploy_key_docs
            - ApolloManagerContext
          dc: e2e-eu1
          env: e2e
          name: FE-End2End-tests-STAGE-run
          runner: e2e-tf
          slack_channel: author_of:<<pipeline.git.revision>>
    when: << pipeline.parameters.trigger_fe_test_e2e >>
  frontend-e2e-stage:
    jobs:
      - run-fe-end2end-tests:
          auth_vendor: cognito
          context:
            - imported-from-ops-project-variables
            - TerraformStageContext
            - cypress-context
            - deploy_key_docs
            - ApolloManagerContext
          dc: stage-eu1
          env: stage
          name: FE-End2End-tests-STAGE-run
          runner: stage-tf
          slack_channel: author_of:<<pipeline.git.revision>>
    when: << pipeline.parameters.trigger_fe_test_stage >>
  grafana_backup:
    jobs:
      - backup-grafana-alerts:
          checkout_branch: main
          context:
            - imported-from-ops-project-variables
          grafana_url: https://g-8f99fe8776.grafana-workspace.us-east-1.amazonaws.com
          name: backup-managed-grafana-alerts
          target_folder: /tmp/ops-grafana
      - backup-grafana-alerts:
          checkout_branch: main
          context:
            - imported-from-ops-project-variables
          directory: grafana-self-hosted
          grafana_token_secret_name: prod/self-hosted-grafana/grafana-backup-api-key
          grafana_url: https://us1.grafana.wiz.io/
          name: backup-self-hosted-grafana-alerts
          target_folder: /tmp/ops-grafana
    when: << pipeline.parameters.monitor_export >>
  lock_eks_ami_addons_versions_wf:
    jobs:
      - lock_eks_ami_addons_versions:
          account_id: "399027795803"
          arn_prefix: aws-us-gov
          checkout_branch: develop
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          ecr_url: 399027795803.dkr.ecr.us-gov-west-1.amazonaws.com/wiz-gov
          feature_branch: devops/WZ-29764/update-and-lock-eks-ami-<<pipeline.git.revision>>
          name: aws-gov-eks-ami
          runner: gov-tf
      - lock_eks_ami_addons_versions:
          account_id: "229870817538"
          arn_prefix: aws
          checkout_branch: devops/WZ-29764/update-and-lock-eks-ami-<<pipeline.git.revision>>
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          feature_branch: devops/WZ-29764/update-and-lock-eks-ami-<<pipeline.git.revision>>
          name: aws-eks-ami
          push_to_origin: false
          requires:
            - aws-gov-eks-ami
          runner: test-tf
      - write_eks_values_to_env_config:
          arn_prefix: aws
          checkout_branch: devops/WZ-29764/update-and-lock-eks-ami-<<pipeline.git.revision>>
          cluster_name: test-eu4
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          env_config_file: test
          feature_branch: devops/WZ-29764/update-and-lock-eks-ami-<<pipeline.git.revision>>
          name: merge-eks-version-to-test-eu4
          open_pr: false
          push_to_origin: false
          requires:
            - aws-eks-ami
          runner: test-tf
          slack_message_header: update test-eu4 AMI and Addons
          values_to_update: all
      - write_eks_values_to_env_config:
          arn_prefix: aws
          checkout_branch: devops/WZ-29764/update-and-lock-eks-ami-<<pipeline.git.revision>>
          cluster_name: e2e-eu1
          cluster_type: all
          context:
            - imported-from-ops-project-variables
          env_config_file: e2e
          feature_branch: devops/WZ-29764/update-and-lock-eks-ami-<<pipeline.git.revision>>
          name: merge-eks-version-to-e2e-eu1
          push_to_origin: false
          requires:
            - merge-eks-version-to-test-eu4
          runner: test-tf
          slack_channel: eks-ami-update
          slack_message_header: lock AMI and update test-eu4 and e2e-eu1
          values_to_update: all
    when: << pipeline.parameters.lock_ami_versions >>
  orchestrator-test-env:
    jobs:
      - verify-orchestrator-test-env:
          context:
            - imported-from-ops-project-variables
            - OrchestratorWizTest
            - deploy_key_private_forks
            - launchDarklyDevSdkKey
            - o10rCredentialsContext
          name: Verify scans in test
      - verify-orchestrator-test-env:
          context:
            - imported-from-ops-project-variables
            - OrchestratorWizFedTest
            - deploy_key_private_forks
            - launchDarklyDevSdkKey
            - o10rCredentialsContext
          name: Verify scans in fedtest
      - diagnose-orchestrator-test-env:
          context:
            - imported-from-ops-project-variables
            - DatadogROContext
            - deploy_key_private_forks
            - launchDarklyDevSdkKey
            - o10rCredentialsContext
          dc: us1
          env: test
          name: Diagnose test-us1
      - diagnose-orchestrator-test-env:
          args: --noOutposts
          context:
            - imported-from-ops-project-variables
            - DatadogROContext
            - deploy_key_private_forks
            - launchDarklyDevSdkKey
            - o10rCredentialsContext
          env: test
          name: Diagnose test managed clusters
      - diagnose-orchestrator-test-env:
          context:
            - imported-from-ops-project-variables
            - DatadogROContext
            - deploy_key_private_forks
            - launchDarklyDevSdkKey
            - o10rCredentialsContext
          dc: eu1
          env: stage
          name: Diagnose stage-eu1
      - diagnose-orchestrator-test-env:
          context:
            - imported-from-ops-project-variables
            - DatadogROContext
            - deploy_key_private_forks
            - launchDarklyDevSdkKey
            - o10rCredentialsContext
          dc: eu1
          env: e2e
          name: Diagnose e2e-eu1
      - diagnose-orchestrator-test-env:
          context:
            - imported-from-ops-project-variables
            - DatadogROContext
            - deploy_key_private_forks
            - launchDarklyDevSdkKey
            - o10rCredentialsContext-fedtest
          dc: us1
          env: fedtest
          name: Diagnose fedtest-us1
      - diagnose-orchestrator-test-env:
          context:
            - imported-from-ops-project-variables
            - DatadogROContext
            - deploy_key_private_forks
            - launchDarklyDevSdkKey
            - o10rCredentialsContext-fedtest
          dc: us1
          env: fedstg1
          name: Diagnose fedstg1-us1
    when: << pipeline.parameters.scheduled_orchestrator_env_verify >>
  outpost-diagnostics:
    jobs:
      - diagnose-orchestrator-env:
          assume-role-arn: arn:aws:iam::197171649850:role/global-prod-us1-o10r-ci-runner-role
          context:
            - imported-from-ops-project-variables
            - DatadogROContext
            - deploy_key_oncall_scripts
            - o10rCredentialsContext
            - deploy_key_private_forks
            - launchDarklyDevSdkKey
          env: prod
          name: Diagnose prod environment
          tenants_bucket: global-prod-us1-datadog
    when: << pipeline.parameters.scheduled_outpost_diagnostics >>
  pagerduty_stats:
    jobs:
      - pagerduty_stats:
          context:
            - imported-from-ops-project-variables
          days: 7
          runner: general-test-small
          team_name: DevOps
          teams_ids: P65I5OT,PQLF55N
    when: << pipeline.parameters.pagerduty_stats >>
  rds-backup-wf-dummy-db-2025-04-66:
    jobs:
      - copy-rds-backup-scripts:
          assume-role-arn: arn:aws:iam::0123456789:role/circleci-rds-backup-user-integration-eu4
          context:
            - imported-from-ops-project-variables
          datacenter: integration-eu4
          ecr_url: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
          name: copy-scripts-to-utils-backup-integration-eu4
          runner: rds-0123456789-backup
      - execute-rds-backup-script:
          assume-role-arn: arn:aws:iam::0123456789:role/circleci-rds-backup-user-integration-eu4
          command_to_exec: python3 -u /home/wiz/rds-backup/rds-backup-create-export.py 2025-04-66 dummy-db
          context:
            - imported-from-ops-project-variables
          datacenter: integration-eu4
          ecr_url: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
          name: export-to-s3-dummy-db
          notification_content: |
            @oncalldevops \n rds-backup failed on export-to-s3 for integration-eu4, please contact Devops team
          requires:
            - copy-scripts-to-utils-backup-integration-eu4
          runner: rds-0123456789-backup
      - execute-rds-backup-script:
          assume-role-arn: arn:aws:iam::0123456789:role/circleci-rds-backup-user-integration-eu4
          command_to_exec: python3 -u /home/wiz/rds-backup/rds-backup-pgdump-schema.py 2025-04-66 dummy-db
          context:
            - imported-from-ops-project-variables
          datacenter: integration-eu4
          ecr_url: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
          name: pgdump-schema-dummy-db
          notification_content: |
            @oncalldevops \n rds-backup failed on pgdump-schema for integration-eu4, please contact Devops team
          requires:
            - copy-scripts-to-utils-backup-integration-eu4
          runner: rds-0123456789-backup
    when: << pipeline.parameters.rds-backup-enable >>
  rds-backup-wf-dummy-db-2025-04-66-validate:
    jobs:
      - copy-rds-backup-scripts:
          assume-role-arn: arn:aws:iam::0123456789:role/circleci-rds-backup-user-integration-eu4
          context:
            - imported-from-ops-project-variables
          datacenter: integration-eu4
          ecr_url: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
          name: copy-scripts-to-utils-backup-integration-eu4-validate
          runner: rds-0123456789-backup
      - execute-rds-backup-script:
          assume-role-arn: arn:aws:iam::0123456789:role/circleci-rds-backup-user-integration-eu4
          command_to_exec: python3 -u /home/wiz/rds-backup/rds-backup-validate-export.py 2025-04-66 dummy-db
          context:
            - imported-from-ops-project-variables
          datacenter: integration-eu4
          ecr_url: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
          name: validate-rds-export-in-s3-integration-eu4
          notification_content: |
            @oncalldevops \n rds-backup failed on validate-rds-export-in-s3 for integration-eu4, please contact Devops team
          requires:
            - copy-scripts-to-utils-backup-integration-eu4-validate
          runner: rds-0123456789-backup
          slack_notification: true
      - execute-rds-backup-script:
          assume-role-arn: arn:aws:iam::0123456789:role/circleci-rds-backup-user-integration-eu4
          command_to_exec: python3 -u /home/wiz/rds-backup/rds-backup-validate-data.py 2025-04-66 dummy-db
          context:
            - imported-from-ops-project-variables
          datacenter: integration-eu4
          ecr_url: 197171649850.dkr.ecr.us-east-2.amazonaws.com/beyond
          name: rds-backup-validate-data-dummy-db
          notification_content: |
            @oncalldevops \n rds-backup failed on validate-data for integration-eu4, please contact Devops team
          requires:
            - validate-rds-export-in-s3-integration-eu4
          runner: rds-0123456789-backup
          slack_notification: true
    when: << pipeline.parameters.rds-backup-validation >>
  rds-backup-wf-dummy-db-pg-dump:
    jobs:
      - execute-rds-backup-script:
          assume-role-arn: arn:aws:iam::0123456789:role/circleci-rds-backup-user-integration-eu4
          command_to_exec: python3 -u /home/wiz/rds-backup/rds-backup-pgdump-schema.py 2025-04-66 dummy-db
          context:
            - imported-from-ops-project-variables
          datacenter: integration-eu4
          name: pgdump-schema-dummy-db
          runner: rds-0123456789-backup
          slack_notification: true
    when: << pipeline.parameters.rds-backup-pgdump-enable >>
  rotate-amg-api-key-test:
    jobs:
      - rotate-amg-api-key:
          api_key_name: tf-grafana-api-key
          context:
            - imported-from-ops-project-variables
          key_role: ADMIN
          name: rotate-amg-api-key-test
          region: us-east-1
          runner: monitor-integration-deployment
          secret_name: test/amg/grafana-api-key
          workspaceid: g-35e23b5f4b
      - rotate-amg-api-key:
          api_key_name: tf-grafana-api-key
          context:
            - imported-from-ops-project-variables
          key_role: ADMIN
          name: rotate-amg-api-key-integration
          region: eu-west-1
          runner: monitor-test-deployment
          secret_name: integration/amg/grafana-api-key
          workspaceid: g-16baf167fa
      - rotate-amg-api-key:
          api_key_name: tf-grafana-api-key
          context:
            - imported-from-ops-project-variables
          key_role: ADMIN
          name: rotate-amg-api-key-prod
          region: us-east-1
          runner: monitor-prod-deployment
          secret_name: prod/amg/grafana-api-key
          workspaceid: g-8f99fe8776
      - rotate-amg-api-key:
          api_key_name: grafana-backup-api-key
          context:
            - imported-from-ops-project-variables
          key_role: EDITOR
          name: rotate-amg-api-key-prod-backup
          region: us-east-1
          runner: monitor-prod-deployment
          secret_name: prod/amg/grafana-backup-api-key
          workspaceid: g-8f99fe8776
    when: << pipeline.parameters.rotate_amg_api_keys >>
  scan-ami:
    jobs:
      - scan-ami:
          ami_owner_account_id: "617935088040"
          cloud: aws
          context:
            - imported-from-ops-project-variables
          destination_ami_name: wiz-import-ami/twingate-arm64-1.70.0
          extra_accounts: "859607572276"
          filters:
            branches:
              ignore:
                - demo
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          name: scan-ami-twingate
          profile: ami
          project_name: twingate
          region: eu-north-1
          role_arn: arn:aws:iam::609594173164:role/import-ami-role
          runner: import-ami
          scan_account_id: "229870817538"
          source_ami_name: twingate/images/hvm-ssd/twingate-arm64-1.70.0
      - publish-ami:
          ami_owner_account_id: "617935088040"
          cloud: aws
          context:
            - imported-from-ops-project-variables
          destination_ami_name: wiz-import-ami/twingate-arm64-1.70.0
          extra_accounts: "859607572276"
          filters:
            branches:
              only:
                - develop
          name: publish-ami-twingate
          profile: ami
          project_name: twingate
          region: eu-north-1
          requires:
            - scan-ami-twingate
          role_arn: arn:aws:iam::609594173164:role/import-ami-role
          runner: import-ami
          scan_account_id: "229870817538"
          source_ami_name: twingate/images/hvm-ssd/twingate-arm64-1.70.0
      - scan-ami:
          ami_owner_account_id: "119533527681"
          cloud: aws-gov
          context:
            - imported-from-ops-project-variables
          destination_ami_name: wiz-import-ami/twingate-arm64-1.70.0
          ecr_url: 399027795803.dkr.ecr.us-gov-west-1.amazonaws.com/wiz-gov
          extra_accounts: null
          filters:
            branches:
              ignore:
                - demo
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          name: scan-gov-ami-twingate
          profile: ami
          project_name: twingate
          region: us-gov-west-1
          role_arn: arn:aws-us-gov:iam::623053250147:role/import-ami-role
          runner: import-ami-gov
          scan_account_id: "623053250147"
          source_ami_name: twingate/images/hvm-ssd/twingate-arm64-1.70.0
      - publish-ami:
          ami_owner_account_id: "119533527681"
          cloud: aws-gov
          context:
            - imported-from-ops-project-variables
          destination_ami_name: wiz-import-ami/twingate-arm64-1.70.0
          ecr_url: 399027795803.dkr.ecr.us-gov-west-1.amazonaws.com/wiz-gov
          extra_accounts: null
          filters:
            branches:
              only:
                - develop
          name: publish-gov-ami-twingate
          profile: ami
          project_name: twingate
          region: us-gov-west-1
          requires:
            - scan-gov-ami-twingate
          role_arn: arn:aws-us-gov:iam::623053250147:role/import-ami-role
          runner: import-ami-gov
          scan_account_id: "623053250147"
          source_ami_name: twingate/images/hvm-ssd/twingate-arm64-1.70.0
    when: << pipeline.parameters.import_ami >>
  sensor_internal_version_pr:
    jobs:
      - publish_internal_sensor_image:
          context:
            - imported-from-ops-project-variables
            - BuildContext
            - deploy_key_wiztools
          dry_run_mode: "true"
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          name: Publish internal sensor image
    when: << pipeline.parameters.sensor-internal-version-publish >>
  sensor_public_version_pr:
    jobs:
      - publish_sensor_image:
          context:
            - imported-from-ops-project-variables
            - BuildContext
            - deploy_key_wiztools
          dry_run_mode: "true"
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          name: Publish sensor image
      - publish_sensor_chart:
          context:
            - imported-from-ops-project-variables
            - BuildContext
          dry_run_mode: "true"
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          name: Publish sensor chart
    when: << pipeline.parameters.sensor-version-publish >>
  sensor_serverless_demo_public_version_pr:
    jobs:
      - publish_sensor_image:
          context:
            - imported-from-ops-project-variables
            - BuildContext
            - deploy_key_wiztools
          dry_run_mode: "true"
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          image_name: sensor-serverless-demo
          name: Publish serverless sensor attack scenario image
          version_file: sensor/sensor_serverless_demo_version.txt
    when: << pipeline.parameters.sensor-serverless-demo-version-publish >>
  sensor_serverless_public_version_pr:
    jobs:
      - publish_sensor_image:
          context:
            - imported-from-ops-project-variables
            - BuildContext
            - deploy_key_wiztools
          dry_run_mode: "true"
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          image_name: sensor-serverless
          name: Publish serverless sensor image
          version_file: sensor/sensor_serverless_version.txt
    when: << pipeline.parameters.sensor-serverless-version-publish >>
  terraform-OPS-dc-plan:
    jobs:
      - terraform-precheck-runner:
          account_id: "752740730335"
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-dc
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          matrix:
            parameters:
              workspace:
                - ops-test-eu1
                - ops-test-us1
          name: TEST-Terraform-precheck-<< matrix.workspace >>
          runner: test-tf
          slack_channel: author_of:$CIRCLE_SHA1
      - terraform-precheck-runner:
          account_id: "422111308700"
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-dc
          env: prod
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          matrix:
            parameters:
              workspace:
                - ops-prod-us1
                - ops-prod-us2
                - ops-prod-us3
                - ops-prod-us4
                - ops-prod-us5
          name: TEST-Terraform-precheck-<< matrix.workspace >>
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
      - aggregate_plans:
          context:
            - imported-from-ops-project-variables
            - WizGithubReadOnlyContext
            - SlackDynamoCtx
            - wiz-cache
          enable_slack_mention: false
          env: test
          requires:
            - TEST-Terraform-precheck-ops-prod-us1
            - TEST-Terraform-precheck-ops-prod-us2
            - TEST-Terraform-precheck-ops-prod-us3
            - TEST-Terraform-precheck-ops-prod-us4
            - TEST-Terraform-precheck-ops-prod-us5
            - TEST-Terraform-precheck-ops-test-eu1
            - TEST-Terraform-precheck-ops-test-us1
          runner: test-tf
          stage: test
  terraform-OPS-env-plan:
    jobs:
      - terraform-precheck-runner:
          account_id: "752740730335"
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-env
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          matrix:
            parameters:
              workspace:
                - ops-test
          name: TEST-Terraform-precheck-<< matrix.workspace >>
          runner: test-tf
          slack_channel: author_of:$CIRCLE_SHA1
      - terraform-precheck-runner:
          account_id: "422111308700"
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-env
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          matrix:
            parameters:
              workspace:
                - ops-prod
          name: TEST-Terraform-precheck-<< matrix.workspace >>
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
      - terraform-precheck-runner:
          account_id: "109404714380"
          cloud: aws-gov
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-env
          ecr_url: 399027795803.dkr.ecr.us-gov-west-1.amazonaws.com/wiz-gov
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          matrix:
            parameters:
              workspace:
                - ops-gov
          name: TEST-Terraform-precheck-<< matrix.workspace >>
          runner: gov-tf
          slack_channel: author_of:$CIRCLE_SHA1
      - aggregate_plans:
          context:
            - imported-from-ops-project-variables
            - WizGithubReadOnlyContext
            - SlackDynamoCtx
            - wiz-cache
          enable_slack_mention: false
          env: test
          requires:
            - TEST-Terraform-precheck-ops-prod
            - TEST-Terraform-precheck-ops-test
            - TEST-Terraform-precheck-ops-gov
          runner: test-tf
          stage: test
  terraform-aws-account-plan:
    jobs:
      - terraform-precheck-runner:
          account_id: "229870817538"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-account
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          name: Terraform-aws-account-test-1-precheck
          runner: test-tf
          slack_channel: author_of:$CIRCLE_SHA1
          wizcli_scan: true
          workspace: test-1
      - terraform-precheck-runner:
          account_id: "504138681223"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-account
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          name: Terraform-aws-account-test-2-precheck
          runner: test-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: test-2
      - terraform-precheck-runner:
          account_id: "623300672468"
          cloud: aws-fedtest
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - wiz-cache-test
          directory: terraform/aws-account
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          name: fedtest-tf-aws-account-precheck
          runner: tf-fedtest
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: fedtest-1
      - aggregate_plans:
          context:
            - imported-from-ops-project-variables
            - WizGithubReadOnlyContext
            - SlackDynamoCtx
            - wiz-cache
          enable_slack_mention: false
          env: test
          requires:
            - Terraform-aws-account-test-1-precheck
            - Terraform-aws-account-test-2-precheck
            - fedtest-tf-aws-account-precheck
          runner: test-tf
          stage: test
  terraform-aws-dc-plan-test-envs:
    jobs:
      - terraform-precheck-runner:
          account_id: "229870817538"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          matrix:
            parameters:
              workspace:
                - test-eu1
                - test-eu3
          name: TEST-Terraform-precheck-<< matrix.workspace >>
          runner: test-tf
          slack_channel: author_of:$CIRCLE_SHA1
      - terraform-precheck-runner:
          account_id: "504138681223"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          name: TEST-Terraform-precheck-test-eu4
          runner: test-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: test-eu4
      - terraform-precheck-runner:
          account_id: "504138681223"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          name: TEST-Terraform-precheck-test-us1 (fast plan - no refresh)
          refresh: false
          runner: test-tf
          slack_channel: author_of:$CIRCLE_SHA1
          wizcli_scan: true
          workspace: test-us1
      - terraform-precheck-runner:
          account_id: "623300672468"
          cloud: aws-fedtest
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - wiz-cache-test
          directory: terraform/aws-dc
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          name: TEST-Terraform-precheck-fedtest-us1
          runner: tf-fedtest
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: fedtest-us1
      - aggregate_plans:
          context:
            - imported-from-ops-project-variables
            - WizGithubReadOnlyContext
            - SlackDynamoCtx
            - wiz-cache
          enable_slack_mention: false
          env: test
          requires:
            - TEST-Terraform-precheck-test-eu1
            - TEST-Terraform-precheck-test-eu3
            - TEST-Terraform-precheck-test-eu4
            - TEST-Terraform-precheck-test-us1 (fast plan - no refresh)
            - TEST-Terraform-precheck-fedtest-us1
          runner: test-tf
          stage: test
  terraform-aws-env-plan:
    jobs:
      - terraform-precheck-runner:
          account_id: "229870817538"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-env
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          name: test-tf-aws-env-precheck
          runner: large-test-tf
          slack_channel: author_of:$CIRCLE_SHA1
          tf_parallelism: 15
          wizcli_scan: true
          workspace: test
      - terraform-precheck-runner:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-env
          env: prod
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          name: prod-tf-aws-env-precheck
          runner: large-prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          tf_parallelism: 15
          wizcli_scan: true
          workspace: prod
      - terraform-precheck-runner:
          account_id: "399027795803"
          cloud: aws-gov
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-env
          ecr_url: 399027795803.dkr.ecr.us-gov-west-1.amazonaws.com/wiz-gov
          env: gov
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          name: gov-tf-aws-env-precheck
          runner: gov-tf
          slack_channel: author_of:$CIRCLE_SHA1
          tf_parallelism: 15
          wizcli_scan: true
          workspace: gov
      - terraform-precheck-runner:
          account_id: "623300672468"
          cloud: aws-fedtest
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - wiz-cache-test
          directory: terraform/aws-env
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          name: fedtest-tf-aws-env-precheck
          runner: tf-fedtest
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: fedtest
      - aggregate_plans:
          context:
            - imported-from-ops-project-variables
            - WizGithubReadOnlyContext
            - SlackDynamoCtx
            - wiz-cache
          enable_slack_mention: false
          env: test
          requires:
            - test-tf-aws-env-precheck
            - prod-tf-aws-env-precheck
            - fedtest-tf-aws-env-precheck
            - gov-tf-aws-env-precheck
          runner: test-tf
          stage: test
  terraform-cd-engine-plan:
    jobs:
      - terraform-cd-engine:
          cluster: us1
          context:
            - imported-from-ops-project-variables
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: "false"
          runner: fedtest-cd
  terraform-da-env-plan:
    jobs:
      - terraform-precheck-runner:
          account_id: "229870817538"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/da-env
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          name: Terraform-test-precheck
          runner: test-tf
          slack_channel: author_of:$CIRCLE_SHA1
          wizcli_scan: true
          workspace: test-da-env
      - aggregate_plans:
          context:
            - imported-from-ops-project-variables
            - WizGithubReadOnlyContext
            - SlackDynamoCtx
            - wiz-cache
          enable_slack_mention: false
          env: test
          requires:
            - Terraform-test-precheck
          runner: test-tf
          stage: test
  terraform-dt-env-plan:
    jobs:
      - terraform-precheck-runner:
          account_id: "229870817538"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/dt-env
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          name: Terraform-test-dt-env-precheck
          runner: test-tf
          slack_channel: author_of:$CIRCLE_SHA1
          wizcli_scan: true
          workspace: test-dt-env
      - aggregate_plans:
          context:
            - imported-from-ops-project-variables
            - WizGithubReadOnlyContext
            - SlackDynamoCtx
            - wiz-cache
          enable_slack_mention: false
          env: test
          requires:
            - Terraform-test-dt-env-precheck
          runner: test-tf
          stage: test
  terraform-global-dc-plan-test:
    jobs:
      - terraform-precheck-runner:
          account_id: "229870817538"
          cluster_type: global
          context:
            - imported-from-ops-project-variables
          directory: terraform/global-dc
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          name: Terraform-global-test-precheck
          runner: test-tf
          slack_channel: author_of:$CIRCLE_SHA1
          wizcli_scan: true
          workspace: global-test-eu1
      - terraform-precheck-runner:
          account_id: "623300672468"
          cloud: aws-fedtest
          cluster_type: global
          context:
            - imported-from-ops-project-variables
            - wiz-cache-test
          directory: terraform/global-dc
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          name: Terraform-global-fedtest-precheck
          runner: tf-fedtest
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: global-fedtest-us1
      - aggregate_plans:
          context:
            - imported-from-ops-project-variables
            - WizGithubReadOnlyContext
            - SlackDynamoCtx
            - wiz-cache
          enable_slack_mention: false
          env: test
          requires:
            - Terraform-global-fedtest-precheck
            - Terraform-global-test-precheck
          runner: test-tf
          stage: test
  terraform-global-env-plan:
    jobs:
      - terraform-precheck-runner:
          account_id: "229870817538"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/global-env
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          name: test-tf-global-env-precheck
          runner: test-tf
          slack_channel: author_of:$CIRCLE_SHA1
          wizcli_scan: true
          workspace: global-test
      - terraform-precheck-runner:
          account_id: "623300672468"
          cloud: aws-fedtest
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - wiz-cache-test
          directory: terraform/global-env
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          name: fedtest-tf-global-env-precheck
          runner: tf-fedtest
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: global-fedtest
      - aggregate_plans:
          context:
            - imported-from-ops-project-variables
            - WizGithubReadOnlyContext
            - SlackDynamoCtx
            - wiz-cache
          enable_slack_mention: false
          env: test
          requires:
            - test-tf-global-env-precheck
            - fedtest-tf-global-env-precheck
          runner: test-tf
          stage: test
  terraform-monitor-dc-plan:
    jobs:
      - terraform-precheck-runner:
          account_id: "947347377255"
          cluster_type: monitor
          context:
            - imported-from-ops-project-variables
          directory: terraform/monitor-dc
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          matrix:
            parameters:
              workspace:
                - monitor-test-us1
          name: test-terraform-precheck-<< matrix.workspace >>
          runner: monitor-test-tf
          slack_channel: author_of:$CIRCLE_SHA1
          wizcli_scan: true
      - terraform-precheck-runner:
          account_id: "623053250147"
          cloud: aws-fedtest
          cluster_type: monitor
          context:
            - imported-from-ops-project-variables
            - wiz-cache-test
          directory: terraform/monitor-dc
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          matrix:
            parameters:
              workspace:
                - monitor-fedtest-us1
          name: fedtest-terraform-precheck-<< matrix.workspace >>
          runner: tf-fedtest-monitor
          slack_channel: author_of:$CIRCLE_SHA1
      - terraform-precheck-runner:
          account_id: "096476340703"
          cluster_type: monitor
          context:
            - imported-from-ops-project-variables
          directory: terraform/monitor-dc
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          matrix:
            parameters:
              workspace:
                - monitor-prod-us1
          name: prod-terraform-precheck-<< matrix.workspace >>
          runner: monitor-prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          wizcli_scan: true
      - aggregate_plans:
          context:
            - imported-from-ops-project-variables
            - WizGithubReadOnlyContext
            - SlackDynamoCtx
            - wiz-cache
          enable_slack_mention: false
          env: test
          requires:
            - test-terraform-precheck-monitor-test-us1
            - fedtest-terraform-precheck-monitor-fedtest-us1
            - prod-terraform-precheck-monitor-prod-us1
          runner: test-tf
          stage: test
  terraform-monitor-env-plan:
    jobs:
      - terraform-precheck-runner:
          account_id: "096476340703"
          clone_terraform_outputs: true
          cluster_type: monitor
          context:
            - imported-from-ops-project-variables
          directory: terraform/monitor-env
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          matrix:
            parameters:
              workspace:
                - monitor-prod
          name: PROD-Terraform-precheck-<< matrix.workspace >>
          runner: monitor-prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
      - terraform-precheck-runner:
          account_id: "947347377255"
          clone_terraform_outputs: true
          cluster_type: monitor
          context:
            - imported-from-ops-project-variables
          directory: terraform/monitor-env
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          matrix:
            parameters:
              workspace:
                - monitor-test
          name: TEST-Terraform-precheck-<< matrix.workspace >>
          runner: monitor-test-tf
          slack_channel: author_of:$CIRCLE_SHA1
      - terraform-precheck-runner:
          account_id: "623053250147"
          clone_terraform_outputs: true
          cloud: aws-fedtest
          cluster_type: monitor
          context:
            - imported-from-ops-project-variables
          directory: terraform/monitor-env
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          matrix:
            parameters:
              workspace:
                - monitor-fedtest
          name: FEDTEST-Terraform-precheck-<< matrix.workspace >>
          runner: tf-fedtest-monitor
          slack_channel: author_of:$CIRCLE_SHA1
      - aggregate_plans:
          context:
            - imported-from-ops-project-variables
            - WizGithubReadOnlyContext
            - SlackDynamoCtx
            - wiz-cache
          enable_slack_mention: false
          env: test
          requires:
            - PROD-Terraform-precheck-monitor-prod
            - TEST-Terraform-precheck-monitor-test
            - FEDTEST-Terraform-precheck-monitor-fedtest
          runner: test-tf
          stage: test
  terraform-oci-env-plan:
    jobs:
      - terraform-precheck-runner:
          account_id: "229870817538"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/oci-env
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          name: Terraform-test-precheck-oci-env
          runner: test-tf
          slack_channel: author_of:$CIRCLE_SHA1
          wizcli_scan: true
          workspace: test
      - aggregate_plans:
          context:
            - imported-from-ops-project-variables
            - WizGithubReadOnlyContext
            - SlackDynamoCtx
            - wiz-cache
          enable_slack_mention: false
          env: test
          requires:
            - Terraform-test-precheck-oci-env
          runner: test-tf
          stage: test
  terraform-ops-gerrit-apply:
    jobs:
      - terraform-apply:
          account_id: "752740730335"
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-gerrit
          filters:
            branches:
              only:
                - develop
          get_aws_creds_tf: false
          name: terraform-apply-ops-gerrit
          runner: gerrit-runner
          slack_channel: ops-deployments
          use_plan: true
          workspace: ops-env
    when: << pipeline.parameters.terraform-ops-gerrit >>
  terraform-ops-gerrit-plan:
    jobs:
      - terraform-precheck-runner:
          account_id: "752740730335"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-gerrit
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          get_aws_creds_tf: false
          name: Terraform-ops-gerrit-validate
          runner: gerrit-runner
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: ops-env
      - aggregate_plans:
          context:
            - imported-from-ops-project-variables
            - WizGithubReadOnlyContext
            - SlackDynamoCtx
            - wiz-cache
          enable_slack_mention: false
          env: test
          requires:
            - Terraform-ops-gerrit-validate
          runner: test-tf
          stage: test
    when: << pipeline.parameters.terraform-ops-gerrit >>
  terraform-personal-environment:
    jobs:
      - personal-environment:
          context:
            - imported-from-ops-project-variables
          filters:
            branches:
              ignore:
                - demo
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          name: personal-environment
    when:
      or:
        - << pipeline.parameters.terraform-personal-environment >>
  terraform-prod-drift:
    jobs:
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/da-env
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: da-env
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-da-env
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/dt-env
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: dt-env
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-dt-env
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/oci-env
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: oci-env
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-env
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-env
          runner: large-prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-eu5
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-eu5
      - terraform-precheck:
          account_id: "830522659852"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-ap1
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-ap1
      - terraform-precheck:
          account_id: "992382568687"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-ap2
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-ap2
      - terraform-precheck:
          account_id: "992382568687"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-ap3
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-ap3
      - terraform-precheck:
          account_id: "992382387618"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-ap4
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-ap4
      - terraform-precheck:
          account_id: "830522659852"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-ca1
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-ca1
      - terraform-precheck:
          account_id: "992382387618"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-ca2
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-ca2
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-eu1
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-eu1
      - terraform-precheck:
          account_id: "830522659852"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-eu10
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-eu10
      - terraform-precheck:
          account_id: "665897822074"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-eu11
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-eu11
      - terraform-precheck:
          account_id: "830522659852"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-eu12
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-eu12
      - terraform-precheck:
          account_id: "665897822074"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-eu13
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-eu13
      - terraform-precheck:
          account_id: "665897822074"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-eu14
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-eu14
      - terraform-precheck:
          account_id: "992382568687"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-eu15
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-eu15
      - terraform-precheck:
          account_id: "992382568687"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-eu16
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-eu16
      - terraform-precheck:
          account_id: "992382568687"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-eu17
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-eu17
      - terraform-precheck:
          account_id: "992382568687"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-eu18
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-eu18
      - terraform-precheck:
          account_id: "992382387618"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-eu19
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-eu19
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-eu2
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-eu2
      - terraform-precheck:
          account_id: "992382387618"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-eu20
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-eu20
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-eu3
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-eu3
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-eu4
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-eu4
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-eu6
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-eu6
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-eu7
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-eu7
      - terraform-precheck:
          account_id: "830522659852"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-eu8
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-eu8
      - terraform-precheck:
          account_id: "830522659852"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-eu9
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-eu9
      - terraform-precheck:
          account_id: "992382568687"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-il1
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-il1
      - terraform-precheck:
          account_id: "665897822074"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-me1
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-me1
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us1
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us1
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us10
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us10
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us11
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us11
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us12
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us12
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us13
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us13
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us14
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us14
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us15
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us15
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us16
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us16
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us17
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us17
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us18
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us18
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us19
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us19
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us2
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us2
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us20
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us20
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us21
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us21
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us22
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us22
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us23
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us23
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us24
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us24
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us25
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us25
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us26
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us26
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us27
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us27
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us28
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us28
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us3
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us3
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us32
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us32
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us33
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us33
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us34
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us34
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us35
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us35
      - terraform-precheck:
          account_id: "830522659852"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us36
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us36
      - terraform-precheck:
          account_id: "830522659852"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us37
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us37
      - terraform-precheck:
          account_id: "830522659852"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us38
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us38
      - terraform-precheck:
          account_id: "830522659852"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us39
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us39
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us4
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us4
      - terraform-precheck:
          account_id: "830522659852"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us40
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us40
      - terraform-precheck:
          account_id: "830522659852"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us41
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us41
      - terraform-precheck:
          account_id: "830522659852"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us42
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us42
      - terraform-precheck:
          account_id: "830522659852"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us43
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us43
      - terraform-precheck:
          account_id: "830522659852"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us44
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us44
      - terraform-precheck:
          account_id: "830522659852"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us45
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us45
      - terraform-precheck:
          account_id: "830522659852"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us46
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us46
      - terraform-precheck:
          account_id: "830522659852"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us47
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us47
      - terraform-precheck:
          account_id: "665897822074"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us48
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us48
      - terraform-precheck:
          account_id: "665897822074"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us49
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us49
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us5
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us5
      - terraform-precheck:
          account_id: "665897822074"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us50
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us50
      - terraform-precheck:
          account_id: "665897822074"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us51
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us51
      - terraform-precheck:
          account_id: "665897822074"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us52
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us52
      - terraform-precheck:
          account_id: "665897822074"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us53
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us53
      - terraform-precheck:
          account_id: "665897822074"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us54
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us54
      - terraform-precheck:
          account_id: "665897822074"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us55
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us55
      - terraform-precheck:
          account_id: "665897822074"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us56
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us56
      - terraform-precheck:
          account_id: "665897822074"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us57
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us57
      - terraform-precheck:
          account_id: "851725410668"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us58
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us58
      - terraform-precheck:
          account_id: "665897822074"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us59
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us59
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us6
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us6
      - terraform-precheck:
          account_id: "665897822074"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us60
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us60
      - terraform-precheck:
          account_id: "665897822074"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us61
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us61
      - terraform-precheck:
          account_id: "665897822074"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us62
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us62
      - terraform-precheck:
          account_id: "665897822074"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us63
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us63
      - terraform-precheck:
          account_id: "665897822074"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us64
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us64
      - terraform-precheck:
          account_id: "665897822074"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us65
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us65
      - terraform-precheck:
          account_id: "665897822074"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us66
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us66
      - terraform-precheck:
          account_id: "992382568687"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us67
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us67
      - terraform-precheck:
          account_id: "992382568687"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us68
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us68
      - terraform-precheck:
          account_id: "992382568687"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us69
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us69
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us7
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us7
      - terraform-precheck:
          account_id: "992382568687"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us70
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us70
      - terraform-precheck:
          account_id: "992382568687"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us71
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us71
      - terraform-precheck:
          account_id: "992382568687"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us72
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us72
      - terraform-precheck:
          account_id: "992382568687"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us73
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us73
      - terraform-precheck:
          account_id: "992382568687"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us74
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us74
      - terraform-precheck:
          account_id: "992382568687"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us75
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us75
      - terraform-precheck:
          account_id: "992382568687"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us76
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us76
      - terraform-precheck:
          account_id: "992382568687"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us77
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us77
      - terraform-precheck:
          account_id: "992382568687"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us78
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us78
      - terraform-precheck:
          account_id: "992382568687"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us79
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us79
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us8
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us8
      - terraform-precheck:
          account_id: "992382568687"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us80
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us80
      - terraform-precheck:
          account_id: "992382568687"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us81
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us81
      - terraform-precheck:
          account_id: "992382568687"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us82
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us82
      - terraform-precheck:
          account_id: "992382387618"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us83
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us83
      - terraform-precheck:
          account_id: "992382387618"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us84
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us84
      - terraform-precheck:
          account_id: "992382387618"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us85
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us85
      - terraform-precheck:
          account_id: "992382387618"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us86
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us86
      - terraform-precheck:
          account_id: "992382387618"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us87
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us87
      - terraform-precheck:
          account_id: "992382387618"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us88
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us88
      - terraform-precheck:
          account_id: "992382387618"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us89
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us89
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us9
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us9
      - terraform-precheck:
          account_id: "992382387618"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us90
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us90
      - terraform-precheck:
          account_id: "992382387618"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us91
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us91
      - terraform-precheck:
          account_id: "992382387618"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-dc-prod-us92
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-us92
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-account
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-account-prod-1
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-1
      - terraform-precheck:
          account_id: "830522659852"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-account
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-account-prod-2
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-2
      - terraform-precheck:
          account_id: "665897822074"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-account
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-account-prod-3
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-3
      - terraform-precheck:
          account_id: "851725410668"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-account
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-account-prod-4
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-4
      - terraform-precheck:
          account_id: "992382568687"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-account
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-account-prod-5
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-5
      - terraform-precheck:
          account_id: "992382387618"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/aws-account
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: aws-account-prod-6
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: prod-6
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: global
          context:
            - imported-from-ops-project-variables
          directory: terraform/global-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: global-dc-prod-us1
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: global-prod-us1
      - terraform-precheck:
          account_id: "197171649850"
          cluster_type: global
          context:
            - imported-from-ops-project-variables
          directory: terraform/global-env
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: global-env
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: global-prod
      - terraform-precheck:
          account_id: "422111308700"
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: ops-dc-prod-us1
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: ops-prod-us1
      - terraform-precheck:
          account_id: "422111308700"
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: ops-dc-prod-us2
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: ops-prod-us2
      - terraform-precheck:
          account_id: "422111308700"
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: ops-dc-prod-us3
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: ops-prod-us3
      - terraform-precheck:
          account_id: "422111308700"
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: ops-dc-prod-us4
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: ops-prod-us4
      - terraform-precheck:
          account_id: "422111308700"
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-dc
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: ops-dc-prod-us5
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: ops-prod-us5
      - terraform-precheck:
          account_id: "422111308700"
          cluster_type: ops
          context:
            - imported-from-ops-project-variables
          directory: terraform/ops-env
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: ops-env
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: ops-prod
      - terraform-precheck:
          account_id: "096476340703"
          cluster_type: monitor
          context:
            - imported-from-ops-project-variables
          directory: terraform/monitor-env
          filters:
            branches:
              only:
                - master
          lock_state: false
          name: monitor-env
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: monitor-prod
      - terraform-drift:
          context:
            - imported-from-ops-project-variables
          env: prod
          filters:
            branches:
              only:
                - master
          requires:
            - da-env
            - dt-env
            - oci-env
            - aws-env
            - aws-dc-prod-eu5
            - aws-dc-prod-ap1
            - aws-dc-prod-ap2
            - aws-dc-prod-ap3
            - aws-dc-prod-ap4
            - aws-dc-prod-ca1
            - aws-dc-prod-ca2
            - aws-dc-prod-eu1
            - aws-dc-prod-eu10
            - aws-dc-prod-eu11
            - aws-dc-prod-eu12
            - aws-dc-prod-eu13
            - aws-dc-prod-eu14
            - aws-dc-prod-eu15
            - aws-dc-prod-eu16
            - aws-dc-prod-eu17
            - aws-dc-prod-eu18
            - aws-dc-prod-eu19
            - aws-dc-prod-eu2
            - aws-dc-prod-eu20
            - aws-dc-prod-eu3
            - aws-dc-prod-eu4
            - aws-dc-prod-eu6
            - aws-dc-prod-eu7
            - aws-dc-prod-eu8
            - aws-dc-prod-eu9
            - aws-dc-prod-il1
            - aws-dc-prod-me1
            - aws-dc-prod-us1
            - aws-dc-prod-us10
            - aws-dc-prod-us11
            - aws-dc-prod-us12
            - aws-dc-prod-us13
            - aws-dc-prod-us14
            - aws-dc-prod-us15
            - aws-dc-prod-us16
            - aws-dc-prod-us17
            - aws-dc-prod-us18
            - aws-dc-prod-us19
            - aws-dc-prod-us2
            - aws-dc-prod-us20
            - aws-dc-prod-us21
            - aws-dc-prod-us22
            - aws-dc-prod-us23
            - aws-dc-prod-us24
            - aws-dc-prod-us25
            - aws-dc-prod-us26
            - aws-dc-prod-us27
            - aws-dc-prod-us28
            - aws-dc-prod-us3
            - aws-dc-prod-us32
            - aws-dc-prod-us33
            - aws-dc-prod-us34
            - aws-dc-prod-us35
            - aws-dc-prod-us36
            - aws-dc-prod-us37
            - aws-dc-prod-us38
            - aws-dc-prod-us39
            - aws-dc-prod-us4
            - aws-dc-prod-us40
            - aws-dc-prod-us41
            - aws-dc-prod-us42
            - aws-dc-prod-us43
            - aws-dc-prod-us44
            - aws-dc-prod-us45
            - aws-dc-prod-us46
            - aws-dc-prod-us47
            - aws-dc-prod-us48
            - aws-dc-prod-us49
            - aws-dc-prod-us5
            - aws-dc-prod-us50
            - aws-dc-prod-us51
            - aws-dc-prod-us52
            - aws-dc-prod-us53
            - aws-dc-prod-us54
            - aws-dc-prod-us55
            - aws-dc-prod-us56
            - aws-dc-prod-us57
            - aws-dc-prod-us58
            - aws-dc-prod-us59
            - aws-dc-prod-us6
            - aws-dc-prod-us60
            - aws-dc-prod-us61
            - aws-dc-prod-us62
            - aws-dc-prod-us63
            - aws-dc-prod-us64
            - aws-dc-prod-us65
            - aws-dc-prod-us66
            - aws-dc-prod-us67
            - aws-dc-prod-us68
            - aws-dc-prod-us69
            - aws-dc-prod-us7
            - aws-dc-prod-us70
            - aws-dc-prod-us71
            - aws-dc-prod-us72
            - aws-dc-prod-us73
            - aws-dc-prod-us74
            - aws-dc-prod-us75
            - aws-dc-prod-us76
            - aws-dc-prod-us77
            - aws-dc-prod-us78
            - aws-dc-prod-us79
            - aws-dc-prod-us8
            - aws-dc-prod-us80
            - aws-dc-prod-us81
            - aws-dc-prod-us82
            - aws-dc-prod-us83
            - aws-dc-prod-us84
            - aws-dc-prod-us85
            - aws-dc-prod-us86
            - aws-dc-prod-us87
            - aws-dc-prod-us88
            - aws-dc-prod-us89
            - aws-dc-prod-us9
            - aws-dc-prod-us90
            - aws-dc-prod-us91
            - aws-dc-prod-us92
            - aws-account-prod-1
            - aws-account-prod-2
            - aws-account-prod-3
            - aws-account-prod-4
            - aws-account-prod-5
            - aws-account-prod-6
            - global-dc-prod-us1
            - global-env
            - ops-dc-prod-us1
            - ops-dc-prod-us2
            - ops-dc-prod-us3
            - ops-dc-prod-us4
            - ops-dc-prod-us5
            - ops-env
            - monitor-env
          runner: prod-tf
    when: << pipeline.parameters.terraform-drift >>
  terraform-public-dc-test-plan:
    jobs:
      - terraform-precheck-runner:
          account_id: "207567755422"
          cluster_type: public
          context:
            - imported-from-ops-project-variables
          directory: terraform/public-dc
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          matrix:
            parameters:
              workspace:
                - public-test-eu1
          name: TEST-Terraform-precheck-<< matrix.workspace >>
          runner: test-tf
          slack_channel: author_of:$CIRCLE_SHA1
  terraform-public-test-env-plan:
    jobs:
      - terraform-precheck-runner:
          account_id: "207567755422"
          cluster_type: public
          context:
            - imported-from-ops-project-variables
          directory: terraform/public-env
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          matrix:
            parameters:
              workspace:
                - public-test
          name: TEST-Terraform-precheck-<< matrix.workspace >>
          runner: test-tf
          slack_channel: author_of:$CIRCLE_SHA1
  terraform-universal-fedramp-out-plan:
    jobs:
      - terraform-precheck:
          account_id: "623300672468"
          cloud: aws-fedstg1
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - TerraformGitHubContext
            - TerraformFedstg1Context
            - TerraformECRContext
            - TFAZFedoutGlobalContextV2
            - TerraformUniversalFedoutContext
            - SlackDynamoCtx
            - terraformLaunchdarklyContext
            - TerraformCircleciToken
            - OktaTFContext
            - sensor-fedramp-definitions
          directory: terraform/universal
          ecr_url: 623300672468.dkr.ecr.us-gov-west-1.amazonaws.com/wiz-fedtest
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          name: Terraform-universal-fedramp-out-precheck
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: universal-fedout
      - aggregate_plans:
          context:
            - imported-from-ops-project-variables
            - WizGithubReadOnlyContext
            - SlackDynamoCtx
            - wiz-cache
          enable_slack_mention: false
          env: test
          requires:
            - Terraform-universal-fedramp-out-precheck
          runner: test-tf
          stage: test
  terraform-universal-gov-plan:
    jobs:
      - terraform-precheck-runner:
          account_id: "399027795803"
          cloud: aws-gov
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/universal
          ecr_url: 399027795803.dkr.ecr.us-gov-west-1.amazonaws.com/wiz-gov
          env: gov
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          name: Terraform-universal-gov-precheck
          runner: gov-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: universal-gov
      - aggregate_plans:
          context:
            - imported-from-ops-project-variables
            - WizGithubReadOnlyContext
            - SlackDynamoCtx
            - wiz-cache
          enable_slack_mention: false
          env: test
          requires:
            - Terraform-universal-gov-precheck
          runner: test-tf
          stage: test
  terraform-universal-plan:
    jobs:
      - terraform-precheck-runner:
          account_id: "197171649850"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/universal
          env: prod
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          name: Terraform-universal-precheck
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          wizcli_scan: true
          workspace: universal
      - aggregate_plans:
          context:
            - imported-from-ops-project-variables
            - WizGithubReadOnlyContext
            - SlackDynamoCtx
            - wiz-cache
          enable_slack_mention: false
          env: test
          requires:
            - Terraform-universal-precheck
          runner: test-tf
          stage: test
  terraform-wiz-grafana-alerts:
    jobs:
      - terraform-precheck-runner:
          account_id: "947347377255"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - wiz-cache-prod
          directory: terraform/wiz-grafana-alerts
          env: test
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          name: monitor-wiz-grafana-alerts-terraform-precheck
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          tf_parallelism: 40
          workspace: monitor-grafana-alerts-prod
      - terraform-apply-runner:
          account_id: "947347377255"
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/wiz-grafana-alerts
          env: test
          filters:
            branches:
              only:
                - develop
          name: monitor-wiz-grafana-alerts-terraform-apply
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: monitor-grafana-alerts-prod
    when: << pipeline.parameters.terraform-wiz-grafana-alerts >>
  terraform-wiz-monitors:
    jobs:
      - terraform-precheck-runner:
          account_id: "null"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - wiz-cache-prod
          directory: terraform/wiz-monitors
          env: test
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          name: monitor-test-Terraform-wiz-monitors-precheck
          runner: xlarge-test-tf
          slack_channel: author_of:$CIRCLE_SHA1
          tf_parallelism: 5
          workspace: monitor-test
      - terraform-precheck:
          account_id: "623300672468"
          cloud: aws-fedtest
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - TerraformFedTestContext
            - TerraformGitHubContext
            - SlackDynamoCtx
            - sensor-fedtest-definitions
          directory: terraform/wiz-monitors
          ecr_url: 623300672468.dkr.ecr.us-gov-west-1.amazonaws.com/wiz-fedtest
          env: fedtest
          executor: ops-2xlarge
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          name: monitor-fedtest-Terraform-wiz-monitors-precheck
          slack_channel: author_of:$CIRCLE_SHA1
          tf_parallelism: 40
          workspace: fedtest
      - terraform-precheck-runner:
          account_id: "null"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - wiz-cache-prod
          directory: terraform/wiz-monitors
          env: prod
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          name: monitor-prod-Terraform-wiz-monitors-precheck
          runner: xlarge-test-tf
          slack_channel: author_of:$CIRCLE_SHA1
          tf_parallelism: 5
          workspace: monitor-prod
      - terraform-precheck-runner:
          account_id: "null"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
            - wiz-cache-prod
          directory: terraform/wiz-monitors
          env: sh1
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          name: monitor-sh1-Terraform-wiz-monitors-precheck
          runner: xlarge-test-tf
          slack_channel: author_of:$CIRCLE_SHA1
          tf_parallelism: 5
          workspace: monitor-sh1
      - terraform-apply-runner:
          account_id: "null"
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/wiz-monitors
          env: test
          filters:
            branches:
              only:
                - develop
          name: monitor-test-wiz-monitors-terraform-apply
          runner: xlarge-test-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: monitor-test
      - terraform-apply-runner:
          account_id: "null"
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/wiz-monitors
          env: integration
          filters:
            branches:
              only:
                - develop
          name: monitor-integration-wiz-monitors-terraform-apply
          runner: xlarge-test-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: monitor-integration
      - terraform-apply-runner:
          account_id: "null"
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/wiz-monitors
          env: prod
          filters:
            branches:
              only:
                - develop
          name: monitor-prod-wiz-monitors-terraform-apply
          requires:
            - monitor-test-wiz-monitors-terraform-apply
            - monitor-integration-wiz-monitors-terraform-apply
          runner: xlarge-test-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: monitor-prod
      - terraform-apply-runner:
          account_id: "null"
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/wiz-monitors
          env: gov
          filters:
            branches:
              only:
                - develop
          name: monitor-gov-wiz-monitors-terraform-apply
          requires:
            - monitor-test-wiz-monitors-terraform-apply
            - monitor-integration-wiz-monitors-terraform-apply
          runner: xlarge-test-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: monitor-gov
      - terraform-apply-runner:
          account_id: "null"
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/wiz-monitors
          env: demo
          filters:
            branches:
              only:
                - develop
          name: monitor-demo-wiz-monitors-terraform-apply
          requires:
            - monitor-test-wiz-monitors-terraform-apply
            - monitor-integration-wiz-monitors-terraform-apply
          runner: xlarge-test-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: monitor-demo
      - terraform-apply-runner:
          account_id: "null"
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/wiz-monitors
          env: stage
          filters:
            branches:
              only:
                - develop
          name: monitor-stage-wiz-monitors-terraform-apply
          requires:
            - monitor-test-wiz-monitors-terraform-apply
            - monitor-integration-wiz-monitors-terraform-apply
          runner: xlarge-test-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: monitor-stage
      - terraform-apply-runner:
          account_id: "null"
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/wiz-monitors
          env: e2e
          filters:
            branches:
              only:
                - develop
          name: monitor-e2e-wiz-monitors-terraform-apply
          requires:
            - monitor-test-wiz-monitors-terraform-apply
            - monitor-integration-wiz-monitors-terraform-apply
          runner: xlarge-test-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: monitor-e2e
      - terraform-apply-runner:
          account_id: "null"
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/wiz-monitors
          env: sh1
          filters:
            branches:
              only:
                - develop
          name: monitor-sh1-wiz-monitors-terraform-apply
          requires:
            - monitor-test-wiz-monitors-terraform-apply
            - monitor-integration-wiz-monitors-terraform-apply
          runner: xlarge-test-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: monitor-sh1
    when: << pipeline.parameters.terraform-wiz-monitors >>
  terraform-wiz-os-env-plan:
    jobs:
      - terraform-precheck-runner:
          account_id: "229870817538"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/wiz-os-env
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          name: Terraform-test-precheck-wiz-os
          runner: test-tf
          slack_channel: author_of:$CIRCLE_SHA1
          wizcli_scan: true
          workspace: test-wiz-os-env
      - aggregate_plans:
          context:
            - imported-from-ops-project-variables
            - WizGithubReadOnlyContext
            - SlackDynamoCtx
            - wiz-cache
          enable_slack_mention: false
          env: test
          requires:
            - Terraform-test-precheck-wiz-os
          runner: test-tf
          stage: test
  terraform_sensor_ci_infra_apply:
    jobs:
      - terraform-apply-runner:
          account_id: "null"
          block_rollbacks: true
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: sensor/ci-infra
          filters:
            branches:
              only:
                - develop
          name: Sensor CI infrastructure terraform apply
          runner: sensor-ci-infra
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: sensor-ci-infra
    when: << pipeline.parameters.sensor_ci_infra >>
  terraform_sensor_ci_infra_plan:
    jobs:
      - terraform-precheck-runner:
          account_id: "null"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: sensor/ci-infra
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          name: Sensor CI infrastructure terraform plan
          runner: sensor-ci-infra
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: sensor-ci-infra
    when: << pipeline.parameters.sensor_ci_infra >>
  terraform_snowflake_management_plan:
    jobs:
      - terraform-precheck-runner:
          account_id: "null"
          cluster_type: wiz
          context:
            - imported-from-ops-project-variables
          directory: terraform/snowflake
          filters:
            branches:
              ignore:
                - demo
                - develop
                - e2e
                - fedint-us1
                - fedlocked
                - fedramp
                - fedstg1
                - fedstg2
                - fedtest
                - gov
                - integration-eu1
                - integration-eu10
                - integration-eu11
                - integration-eu2
                - integration-eu3
                - integration-eu4
                - integration-eu5
                - integration-eu6
                - integration-eu7
                - integration-eu8
                - integration-eu9
                - integration-monitor
                - integration-us1
                - integration-us2
                - integration-us3
                - integration-us4
                - integration-us5
                - integration-us6
                - integration-us7
                - integration2
                - locked
                - master
                - monitor
                - sh1
                - stage
                - universal
                - universal-fedout
                - universal-fedramp
                - verified
          lock_state: false
          name: terraform-snowflake-management-precheck
          runner: prod-tf
          slack_channel: author_of:$CIRCLE_SHA1
          workspace: snowflake
      - aggregate_plans:
          context:
            - imported-from-ops-project-variables
            - WizGithubReadOnlyContext
            - SlackDynamoCtx
            - wiz-cache
          enable_slack_mention: false
          env: test
          requires:
            - terraform-snowflake-management-precheck
          runner: test-tf
          stage: test
  test-bootstrap-rde-workflow:
    jobs:
      - test-bootstrap-rde:
          context:
            - imported-from-ops-project-variables
          filters:
            branches:
              only:
                - develop
          only-on-branch: << pipeline.git.branch >>
          queue_only_older_workflows: false
          timeout_action: cancel
          timeout_minutes: "15"
    when: << pipeline.parameters.test_bootstrap_rde >>
  trigger-auto-reset-integration-envs:
    jobs:
      - auto-reset-integration-envs:
          context:
            - imported-from-ops-project-variables
            - BuildContext
            - SlackDynamoCtx
    when: << pipeline.parameters.auto_reset_integration_envs >>
  trigger-full-deployment-slackbot:
    jobs:
      - merger-accept-theirs:
          context:
            - imported-from-ops-project-variables
          dest_branch_name: locked
          name: sync-develop-to-lock
          slack_channel: test-deployments
          source_branch_name: develop
          source_commit_ref: origin/develop
      - merger-accept-theirs:
          context:
            - imported-from-ops-project-variables
          dest_branch_name: stage
          name: sync-lock-to-stage
          requires:
            - sync-develop-to-lock
          slack_channel: stage-deployments
          source_branch_name: locked
          source_commit_ref: origin/locked
    when: << pipeline.parameters.trigger_full_deployment_slackbot >>
  trigger-lock-slackbot-workflow:
    jobs:
      - hotfix:
          context:
            - imported-from-ops-project-variables
            - BuildContext
            - BotHotfixContext
          dest_branch: locked
          name: hotfix-locked
    when: << pipeline.parameters.trigger_lock_slackbot >>
  trigger-notify-upcoming-integration-env-resets:
    jobs:
      - notify-upcoming-integration-env-resets:
          context:
            - imported-from-ops-project-variables
            - BuildContext
            - SlackDynamoCtx
    when: << pipeline.parameters.notify_upcoming_integration_env_resets >>
  trigger-ops-hotfix-slackbot-workflow:
    jobs:
      - hotfix:
          context:
            - imported-from-ops-project-variables
            - BuildContext
            - BotHotfixContext
          dest_branch: locked
          name: hotfix-ops-locked
      - hotfix:
          context:
            - imported-from-ops-project-variables
            - BuildContext
            - BotHotfixContext
          dest_branch: stage
          name: hotfix-ops-stage
          requires:
            - hotfix-ops-locked
    when:
      and:
        - equal:
            - true
            - << pipeline.parameters.trigger_hotfix_slackbot >>
        - equal:
            - true
            - << pipeline.parameters.hotfix_ops_commit_to_master >>
  trigger-publish-customer-facing-service-slackbot:
    jobs:
      - publish-cf-services-approval:
          context:
            - imported-from-ops-project-variables
          type: approval
    when: << pipeline.parameters.release_customer_facing_service >>
  trigger-reset-integration-envs:
    jobs:
      - reset-integration-envs:
          context:
            - imported-from-ops-project-variables
            - BuildContext
    when: << pipeline.parameters.reset_integration_envs >>
  trigger-scan-vm:
    jobs:
      - scan-vm:
          connector_id: << pipeline.parameters.connector_id >>
          context:
            - imported-from-ops-project-variables
            - SlackDynamoCtx
          datacenter: << pipeline.parameters.datacenter >>
          environment_name: integration
          runner: scanvm-integration-1
          sender: << pipeline.parameters.sender >>
          tenant_id: << pipeline.parameters.tenant_id >>
          vm_id: << pipeline.parameters.vm_id >>
    when: << pipeline.parameters.scan_vm >>
  trigger-static-data-deployment:
    jobs:
      - update-static-data:
          context:
            - imported-from-ops-project-variables
          matrix:
            parameters:
              dest_branch_name:
                - locked
                - stage
          name: update-static-data-to-<< matrix.dest_branch_name >>
          skip_ci: false
          slack_channel: static-data-deployments
          source_commit_ref: origin/develop
    when:
      or:
        - << pipeline.parameters.trigger_static_data_deployment_slackbot >>
        - << pipeline.parameters.scheduled_update_static_data >>
  trigger-static-data-lock-slackbot:
    jobs:
      - update-static-data:
          context:
            - imported-from-ops-project-variables
          dest_branch_name: locked
          name: update-static-data-to-locked
          skip_ci: true
          slack_channel: static-data-deployments
          source_commit_ref: origin/develop
    when: << pipeline.parameters.trigger_static_data_lock_slackbot >>
  trigger-upload-docs:
    jobs:
      - trigger_upload_docs:
          context:
            - imported-from-ops-project-variables
            - ReadmeDash
          dry_run: "false"
  trigger-wiz-hotfix-slackbot-workflow:
    jobs:
      - hotfix:
          context:
            - imported-from-ops-project-variables
            - BuildContext
            - BotHotfixContext
          dest_branch: locked
          name: hotfix-locked
      - hotfix:
          context:
            - imported-from-ops-project-variables
            - BuildContext
            - BotHotfixContext
          dest_branch: stage
          name: hotfix-stage
          requires:
            - hotfix-locked
    when:
      and:
        - equal:
            - true
            - << pipeline.parameters.trigger_hotfix_slackbot >>
        - equal:
            - false
            - << pipeline.parameters.hotfix_ops_commit_to_master >>
  trigger-wizcli-slackbot:
    jobs:
      - publish-wizcli-prod-approval:
          context:
            - imported-from-ops-project-variables
          type: approval
      - publish-wizcli-binary:
          account_id: "197171649850"
          context:
            - imported-from-ops-project-variables
          customer_facing: true
          destination_bucket_name: wizcli-prod
          name: wizcli-to-prod
          requires:
            - publish-wizcli-prod-approval
          runner: prod-tf
          slack_channel: prod-deployments
      - publish-wizcli-binary:
          account_id: "229870817538"
          context:
            - imported-from-ops-project-variables
          customer_facing: true
          destination_bucket_name: wizcli-demo
          name: wizcli-to-demo
          requires:
            - publish-wizcli-prod-approval
          runner: demo-tf
          slack_channel: demo-deployments
      - publish-wizcli-binary:
          account_id: "399027795803"
          context:
            - imported-from-ops-project-variables
          customer_facing: true
          destination_bucket_name: wizcli-gov
          ecr_url: 399027795803.dkr.ecr.us-gov-west-1.amazonaws.com/wiz-gov
          name: wizcli-to-gov
          requires:
            - publish-wizcli-prod-approval
          runner: gov-tf
          slack_channel: prod-deployments
      - publish-wizcli-docker:
          context:
            - imported-from-ops-project-variables
            - WizCliContext
          env: prod
          name: wizcli-to-acr
          publish_latest: true
          requires:
            - wizcli-to-prod
          slack_channel: prod-deployments
      - wizcli_release_slack_notification:
          context:
            - imported-from-ops-project-variables
          name: Send slack notification
          requires:
            - wizcli-to-prod
            - wizcli-to-gov
            - wizcli-to-demo
            - wizcli-to-acr
          slack_channel: C05RS9DG7TN
          wizcli_version: << pipeline.parameters.wizcli_version >>
    when: << pipeline.parameters.trigger_wizcli_slackbot >>
  update-e2e:
    jobs:
      - merger-no-diverge:
          context:
            - imported-from-ops-project-variables
          dest_branch_name: e2e
          source_ref: origin/develop
    when: << pipeline.parameters.scheduled_e2e_update >>
  update-eks-ami-update-branch:
    jobs:
      - merger-no-diverge:
          context:
            - imported-from-ops-project-variables
          dest_branch_name: eks-ami-update
          source_ref: origin/develop
    when: << pipeline.parameters.scheduled_update_eks_ami_update_branch >>
  update-rds-backup:
    jobs:
      - merger-no-diverge:
          context:
            - imported-from-ops-project-variables
          dest_branch_name: rds-backup-v2
          source_ref: origin/develop
    when: << pipeline.parameters.scheduled_rds_backup_update >>
  update-tf-outputs-with-slack-ids:
    jobs:
      - update-tf-outputs-with-slack-ids:
          context:
            - imported-from-ops-project-variables
          filters:
            branches:
              only:
                - develop
          name: update-tf-outputs-with-slack-ids
    when: << pipeline.parameters.terraform-monitor-areas >>
  update_eks_ami_all_test:
    jobs:
      - trigger_workflow:
          circle_set_param: ami_env=e2e ami_update_force_approval=false
          context:
            - imported-from-ops-project-variables
          name: trigger-eks-ami-update-test
          runner: test-tf
          slack_channel: eks-ami-update
          slack_message_body: New workflow for ami update was triggered for test. please run update for test only (you can discard integration), please check eks-ami-update branch in circleci
          slack_message_header: Updating AMI for all test dc
          trigger_branch: eks-ami-update
          trigger_parameter: scheduled_eks_ami_update
    when:
      and:
        - << pipeline.parameters.update_eks_ami_all_test >>
        - equal:
            - develop
            - << pipeline.git.branch >>
  update_eks_ami_prod_gov:
    jobs:
      - trigger_workflow:
          circle_set_param: ami_env=prod ami_update_force_approval=false
          context:
            - imported-from-ops-project-variables
          name: trigger-eks-ami-update-prod
          runner: test-tf
          slack_channel: eks-ami-update
          slack_message_body: New workflow for ami update was triggered for test. please run update for test only (you can discard integration), please check eks-ami-update branch in circleci
          slack_message_header: Updating AMI for all prod dc
          trigger_branch: eks-ami-update
          trigger_parameter: scheduled_eks_ami_update
      - trigger_workflow:
          circle_set_param: ami_env=test ami_update_force_approval=false
          context:
            - imported-from-ops-project-variables
          name: trigger-eks-ami-update-test
          runner: test-tf
          slack_channel: eks-ami-update
          slack_message_body: New workflow for ami update was triggered for integration. please run update for test only (you can discard test), please check eks-ami-update branch in circleci
          slack_message_header: Updating AMI for all integration dc
          trigger_branch: eks-ami-update
          trigger_parameter: scheduled_eks_ami_update
    when: << pipeline.parameters.update_eks_ami_prod_gov >>
  update_eks_ami_test_eu4:
    jobs:
      - merger-no-diverge:
          context:
            - imported-from-ops-project-variables
          dest_branch_name: eks-ami-update
          name: merge-develop-into-eks-ami-update
          source_ref: origin/develop
      - trigger_workflow:
          circle_set_param: ami_env=e2e ami_update_uniq_dc=test-eu4,e2e-eu1 ami_update_force_approval=false ami_update_force_first_approval=false
          context:
            - imported-from-ops-project-variables
          name: trigger-eks-ami-update-test-eu4
          requires:
            - merge-develop-into-eks-ami-update
          runner: test-tf
          slack_channel: eks-ami-update
          slack_message_body: Please wath circleci in branch eks-ami-update for test-eu4 ami update workflow
          slack_message_header: Updating AMI for test-eu4
          trigger_branch: eks-ami-update
          trigger_parameter: scheduled_eks_ami_update
    when:
      and:
        - << pipeline.parameters.update_eks_ami_test_eu4 >>
        - equal:
            - develop
            - << pipeline.git.branch >>
  update_eks_ami_test_stage:
    jobs:
      - trigger_workflow:
          circle_set_param: ami_env=stage ami_update_force_approval=false
          context:
            - imported-from-ops-project-variables
          name: trigger-eks-ami-update-stage
          runner: test-tf
          slack_channel: eks-ami-update
          slack_message_body: New workflow for ami update was triggered for stage and e2e. please check eks-ami-update branch in circleci
          slack_message_header: Updating AMI for stage and e2e
          trigger_branch: eks-ami-update
          trigger_parameter: scheduled_eks_ami_update
    when: << pipeline.parameters.update_eks_ami_test_stage >>
  update_stage:
    jobs:
      - merger-accept-theirs:
          context:
            - imported-from-ops-project-variables
          dest_branch_name: stage
          name: sync-lock-to-stage
          slack_channel: stage-deployments
          source_branch_name: locked
          source_commit_ref: origin/locked
    when: << pipeline.parameters.scheduled_update_stage >>
  version-locking:
    jobs:
      - merger-accept-theirs:
          context:
            - imported-from-ops-project-variables
          dest_branch_name: locked
          name: sync-develop-to-locked-scheduled
          slack_channel: on-call-eng
          source_branch_name: develop
          source_commit_ref: origin/develop
    when: << pipeline.parameters.scheduled_version_locking >>

