version: 2.1

executors:
  dbt_parse_linting:
    docker:
      - image: python:3.8.13-buster
    resource_class: medium+
    
references:
  dbt_container_config: &dbt_container_config
    executor: dbt_parse_linting

jobs:
  build:
    <<: *dbt_container_config
    steps:
      - run: git clone --depth 1 "$CIRCLE_REPOSITORY_URL" --branch "$CIRCLE_BRANCH"  # Pulls your code from the repository
      - run:
          name: Debug Environment Variables
          command: |
            echo "All environment variables containing DEVSECOPS:"
            env | grep DEVSECOPS || echo "No DEVSECOPS variables found"
            echo "DEVSECOPS_CHAT_WEBHOOK value: '${DEVSECOPS_CHAT_WEBHOOK}'"
            echo "Length of DEVSECOPS_CHAT_WEBHOOK: ${#DEVSECOPS_CHAT_WEBHOOK}"
            echo "DEVSECOPS_CHAT_NOTIFICATION_URL value: '${DEVSECOPS_CHAT_NOTIFICATION_URL}'"
            echo "Length of DEVSECOPS_CHAT_NOTIFICATION_URL: ${#DEVSECOPS_CHAT_NOTIFICATION_URL}"
            echo "hello value: '${hello}'"
      - run:
          name: Test circleci env subst
          command: |
            echo "Testing circleci env subst command:"
            echo "Direct variable access: ${DEVSECOPS_CHAT_NOTIFICATION_URL}"
            echo "Using env subst: $(circleci env subst DEVSECOPS_CHAT_NOTIFICATION_URL)"
            echo "circleci version: $(circleci version 2>/dev/null || echo 'circleci command not found')"
       - run: 
           name: "Check if Server or .circleci folder is changed"
           command: |
             echo "Checking last commit for changes in 'server/' or '.circleci/'"
             if git diff --name-only HEAD^1 HEAD | grep -qE '^(server/|\.circleci/)'; then
             echo "Changes found in 'server/' or '.circleci/'. Proceeding with build."
             else
             echo "No changes in 'server/' or '.circleci/'. Skipping build."
             circleci-agent step halt
             fi
workflows:
  version: 2
  build_and_test_advanced2:
    jobs:
      - build:
          context:
          - context1
    
